<?xml version="1.0" encoding="UTF-8"?>
<chapter id="Test_Drive_Proc_Development" xreflabel="Test_Drive_Proc_Development">
    <?dbhtml filename="Tutorial.html"?>
    <chapterinfo>
        <keywordset>
            <keyword>jBPM</keyword>
            <keyword/>
            <keyword/>
            <keyword/>
            <keyword/>
        </keywordset>
    </chapterinfo>
    <title>Test Driven Process Development</title>

    <para> One of the most important advantages of JBoss jBPM&apos;s lightweight approach to BPM
        and workflow management is that developers can easily leverage their usual programming
        skills and techiques. One of these well-known techniques is unit testing and test driven
        development. In this chapter we will show how developers, making use of the JBoss jBPM GPD
        can use a technique we have baptised &apos;Test Driven Process Development&apos; to
        create process definitions and test their correctness. </para>

    <para> When creating the &apos;Hello jBPM&apos; project the create process project
        wizard has already put in place all the library requirements we need to start writing jBPM
        unit tests. These are contained in the jBPM Library container and the most important of it
        is - suprisingly - the jar file containing the core jBPM classes. It must be noted that it
        is possible to change the location of the core jBPM installation by changing the preference
        settings. More on this later in the book. </para>

    <para> With that extra knowledge on the project settings, you can create your first test. To do
        this, we create the &apos;com.jbay&apos; package in the
        &apos;test/java&apos; source folder. Then we bring up the context menu on this
        package and select &apos;New->JUnit Test Case&apos; (Figure 3.1, &quot;Create a
        Test&quot; and Figure 3.2, &quot;Create Test Dialog&quot;). We call the test
        class '&apos;HelloTest&apos;. </para>

    <figure>
        <title>Create a Test</title>

        <mediaobject>
            <imageobject>
                <imagedata fileref="images/Test_Drive_Proc/defaltImage.png" scalefit="1"/>
            </imageobject>
        </mediaobject>
    </figure>

    <figure>
        <title>Create Test Dialog</title>

        <mediaobject>
            <imageobject>
                <imagedata fileref="images/Test_Drive_Proc/defaltImage.png" scalefit="1"/>
            </imageobject>
        </mediaobject>
    </figure>
    <para> We write a simple test scenario as shown in Figure 3.3, &quot;A First Test
        Scenario&quot;. Let&apos;s study the code of this testcase. In the first line of the
        method, a jBPM process archive object is created. We use a constructor accepting the
        filename of the archive. In our case it is the &apos;hello.par&apos; file we created
        earlier and wich lives in the &apos;src&apos; folder of our project. After asserting
        that this object is really created, we extract a process definition object from it. This
        object is fed to the constructor of a process instance object. We have a process instance
        object, but this process is not yet started, so we can safely assert that its root token
        still resides in the start node. After signalling the token will move to the next state and
        the process will be in the &apos;auction&apos; state. Finally another signal will
        end the process. </para>

    <figure>
        <title>A First Test Scenario</title>

        <mediaobject>
            <imageobject>
                <imagedata fileref="images/Test_Drive_Proc/defaltImage.png" scalefit="1"/>
            </imageobject>
        </mediaobject>
    </figure>
    <para> After writing this test we can check whether it works as expected by running it (Figure
        3.4, &quot;Running the Process Test &quot; and Figure 3.5, &quot;Successful Test
        Run&quot;) all went well: we have a green light. </para>

    <figure>
        <title>Running the Process Test</title>

        <mediaobject>
            <imageobject>
                <imagedata fileref="images/Test_Drive_Proc/defaltImage.png" scalefit="1"/>
            </imageobject>
        </mediaobject>
    </figure>

    <figure>
        <title>Successful Test Run</title>
        
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/Test_Drive_Proc/defaltImage.png" scalefit="1"/>
            </imageobject>
        </mediaobject>
    </figure>
    <para> Of course, this simple scenario was not very interesting, but the purpose of it was to
        show how you can reuse your development skills in a very straightforward way when doing
        process development. To see how more interesting processes and process test scenario&apos;s can
        be developed, we suggest you to read the JBoss jBPM User Guide and to study the API
        reference. Moreover some more examples will be given later in this book.</para>
    
</chapter>
