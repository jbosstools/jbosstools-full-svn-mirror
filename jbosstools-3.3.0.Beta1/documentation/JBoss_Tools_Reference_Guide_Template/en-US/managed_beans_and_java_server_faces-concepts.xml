<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "JBoss_Tools_Reference_Guide_Template.ent">
%BOOK_ENTITIES;
]>
<section id="concepts-managed_beans-managed_beans_and_java_server_faces">
  <title>Managed beans and java server faces</title>
   <note><title>***Design Note***</title>
      <para>
        Continue with specifics of how the concept (or feature) impacts JSF (or Hibernate or Seam) for example. Separating out the specifics will aid in the reuse of material.
      </para>
    </note>    
   <para>
    Managed Beans in Java Server Faces assist the developer by simplifying the use of Plain Old Java Objects (<acronym>POJO</acronym>s) and JavaBeans. Any class with a zero-argument constructor can be registered as a Managed Bean by including it in the <filename>faces.config.xml</filename> file.    
  </para>

  <note><title>***Design Note***</title>
      <para>
        Where there are rules associated with a concept (or Java implementation) list them here under "Formal Paragraphs" as in the following example. Be specific in the context of the Tool where possible (eg JSF, Seam, Hibernate)
      </para>
    </note>    
  
  <formalpara><title>Managed Beans Rules and Conventions</title>
  <para>
    A managed bean, when used in the context of Java Server Faces has the following properties:     
  </para>
  </formalpara>
  <itemizedlist>
    <listitem>
    <para>
      a zero-argument constructor; 
    </para>
    </listitem>
    <listitem>
    <para>
      setters and getters; 
    </para>
    </listitem>
    <listitem>
    <para>
      .... 
    </para>
    </listitem>
    <listitem>
    <para>
      .... 
    </para>
    </listitem>
  </itemizedlist>
  
  <para>&FEEDBACK-concepts-managed_beans-managed_beans_and_java_server_faces;</para>
</section>