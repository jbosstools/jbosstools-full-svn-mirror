<?xml version="1.0"?>


<!DOCTYPE faces-config PUBLIC
  "-//Sun Microsystems, Inc.//DTD JavaServer Faces Config 1.1//EN"
  "http://java.sun.com/dtd/web-facesconfig_1_1.dtd">


<!--

 Copyright 2004-2005 The Apache Software Foundation.
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
      http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

-->


<faces-config>


  <!-- ====================== Application Management ======================= -->


  <application>
    <locale-config>
      <default-locale>en</default-locale>
      <supported-locale>en</supported-locale>
      <supported-locale>fr</supported-locale>
      <supported-locale>de</supported-locale>
      <supported-locale>es</supported-locale>
    </locale-config>
  </application>


  <!-- ====================== Locale Select Dialog ========================= -->


  <!-- ViewController Beans -->

  <managed-bean>
    <managed-bean-name>locale$select</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.locale.Select
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
  </managed-bean>

  <!-- Navigation Rules -->

  <navigation-rule>
    <from-view-id>*</from-view-id>
    <navigation-case>
      <from-outcome>locale$select</from-outcome>
      <to-view-id>/locale/select.jsp</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-action>#{locale$select.select}</from-action>
      <from-outcome>locale$success</from-outcome>
      <to-view-id>/usecases.jsp</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-action>#{locale$select.select}</from-action>
      <from-outcome>locale$failure</from-outcome>
      <to-view-id>/usecases.jsp</to-view-id>
    </navigation-case>
  </navigation-rule>


  <!-- ============================= Ajax Examples ========================= -->

  <!-- ViewController Beans -->

  <managed-bean>
    <managed-bean-name>ajax$completion</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.ajax.Completion
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
  </managed-bean>

  <!-- Navigation Rules -->

  <navigation-rule>
    <from-view-id>*</from-view-id>
    <navigation-case>
      <from-outcome>ajax$completion</from-outcome>
      <to-view-id>/ajax/completion.jsp</to-view-id>
    </navigation-case>
  </navigation-rule>
  <navigation-rule>
    <from-view-id>/ajax/completion.jsp</from-view-id>
    <navigation-case>
      <from-outcome>exit</from-outcome>
      <to-view-id>/usecases.jsp</to-view-id>
    </navigation-case>
  </navigation-rule>


  <!-- ============================== JNDI Test ============================ -->


  <!-- ViewController Beans -->

  <managed-bean>
    <managed-bean-name>jndi$test</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.jndi.Test
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
  </managed-bean>

  <!-- Navigation Rules -->

  <navigation-rule>
    <from-view-id>*</from-view-id>
    <navigation-case>
      <from-outcome>jndi$test</from-outcome>
      <to-view-id>/jndi/test.jsp</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-outcome>jndi$finish</from-outcome>
      <to-view-id>/usecases.jsp</to-view-id>
    </navigation-case>
  </navigation-rule>


  <!-- ============================ VALIDATE Test ========================== -->


  <!-- ViewController Beans -->

  <managed-bean>
    <managed-bean-name>validate$test</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.validator.Test
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
  </managed-bean>


  <!-- Navigation Rules -->

  <navigation-rule>
    <navigation-case>
      <from-outcome>validate$test</from-outcome>
      <to-view-id>/validator/test.jsp</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-outcome>validate$thankYou</from-outcome>
      <to-view-id>/validator/thankYou.jsp</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-outcome>usecases$toplevel</from-outcome>
      <to-view-id>/usecases.jsp</to-view-id>
    </navigation-case>
  </navigation-rule>


  <!-- ============================ Rolodex Test =========================== -->



  <navigation-rule>
    <!-- JSP View -->
    <from-view-id>/usecases*</from-view-id>
    <navigation-case>
      <from-outcome>rolodex$test1</from-outcome>
      <to-view-id>/rolodex/rolodex.jsp</to-view-id>
    </navigation-case>  

    <!-- HTML View -->
    <navigation-case>
      <from-outcome>rolodex$test2</from-outcome>
      <to-view-id>/rolodex/hrolodex.html</to-view-id>
    </navigation-case>

    <!-- Extreme HTML View -->
    <navigation-case>
      <from-outcome>rolodex$test3</from-outcome>
      <to-view-id>/rolodex/xhrolodex.html</to-view-id>
    </navigation-case>

    <!-- Full XML View -->
    <navigation-case>
      <from-outcome>rolodex$test4</from-outcome>
      <to-view-id>/rolodex/rolodex.xml</to-view-id>
    </navigation-case>
    
    <!-- Full HTML View -->
    <navigation-case>
      <from-outcome>rolodex$viewsource</from-outcome>
      <to-view-id>/rolodex/viewsource.html</to-view-id>
    </navigation-case>
    
  </navigation-rule>

  <navigation-rule>

    <!-- JSP View -->
    <from-view-id>/rolodex/rolodex.jsp</from-view-id>
    <navigation-case>
      <from-action>#{rolodex.selectContact}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/rolodex.jsp</to-view-id>
    </navigation-case>  
    <navigation-case>
      <from-action>#{rolodex.saveContact}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/rolodex.jsp</to-view-id>
    </navigation-case>  
    <navigation-case>
      <from-action>#{rolodex.deleteContact}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/rolodex.jsp</to-view-id>
    </navigation-case>  
    <navigation-case>
      <from-action>#{rolodex.newContact}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/rolodex.jsp</to-view-id>
    </navigation-case>  
    <navigation-case>
      <from-action>#{rolodex.changeTab}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/rolodex.jsp</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-action>home</from-action>
      <from-outcome>home</from-outcome>
      <to-view-id>/usecases.faces</to-view-id>
      <redirect/>
    </navigation-case>
    

  </navigation-rule>

  <navigation-rule>
    <!-- HTML View -->    
    <from-view-id>/rolodex/hrolodex.html</from-view-id>
    
    <navigation-case>
      <from-action>#{rolodex$hrolodex.selectContact}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/hrolodex.html</to-view-id>
    </navigation-case>  
    <navigation-case>
      <from-action>#{rolodex$hrolodex.saveContact}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/hrolodex.html</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-action>#{rolodex$hrolodex.deleteContact}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/hrolodex.html</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-action>#{rolodex$hrolodex.newContact}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/hrolodex.html</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-action>#{rolodex$hrolodex.changeTab}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/hrolodex.html</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-action>home</from-action>
      <from-outcome>home</from-outcome>
      <to-view-id>/usecases.faces</to-view-id>
      <redirect/>
    </navigation-case>
    
  </navigation-rule>

  <navigation-rule>
    <!-- Extreme HTML View -->
    <from-view-id>/rolodex/xhrolodex.html</from-view-id>
   
    <navigation-case>
      <from-action>#{rolodex$xhrolodex.selectContact}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/xhrolodex.html</to-view-id>
    </navigation-case>  
    <navigation-case>
      <from-action>#{rolodex$xhrolodex.saveContact}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/xhrolodex.html</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-action>#{rolodex$xhrolodex.deleteContact}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/xhrolodex.html</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-action>#{rolodex$xhrolodex.newContact}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/xhrolodex.html</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-action>#{rolodex$xhrolodex.changeTab}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/xhrolodex.html</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-action>home</from-action>
      <from-outcome>home</from-outcome>
      <to-view-id>/usecases.faces</to-view-id>
      <redirect/>
    </navigation-case>
    
  </navigation-rule>


  <navigation-rule>
    <!-- Full XML View -->
    <from-view-id>/rolodex/rolodex.xml</from-view-id>
   
    <navigation-case>
      <from-action>#{rolodex$xhrolodex.selectContact}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/rolodex.xml</to-view-id>
    </navigation-case>  
    <navigation-case>
      <from-action>#{rolodex$xhrolodex.saveContact}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/rolodex.xml</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-action>#{rolodex$xhrolodex.deleteContact}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/rolodex.xml</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-action>#{rolodex$xhrolodex.newContact}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/rolodex.xml</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-action>#{rolodex$xhrolodex.changeTab}</from-action>
      <from-outcome>rolodex$test</from-outcome>
      <to-view-id>/rolodex/rolodex.xml</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-action>home</from-action>
      <from-outcome>home</from-outcome>
      <to-view-id>/usecases.faces</to-view-id>
      <redirect/>
    </navigation-case>

  </navigation-rule>

  <navigation-rule>
    <from-view-id>*</from-view-id>
    <navigation-case>
      <from-outcome>home</from-outcome>
      <to-view-id>/usecases.jsp</to-view-id>
    </navigation-case>
  </navigation-rule>

  <navigation-rule>
    <navigation-case>
      <from-outcome>usecases$toplevel</from-outcome>
      <to-view-id>/usecases.jsp</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-outcome>validate$test</from-outcome>
      <to-view-id>/validator/test.jsp</to-view-id>
    </navigation-case>
  </navigation-rule>


  <!-- ======================= Logon and Profile Edit Dialog =============== -->


  <!-- ViewController Beans -->

  <!-- Because the logon form and the dialog actions share logic, they
       are combined into the "profile$logon" bean defined below. -->

  <!-- Dialog Actions Beans -->

  <managed-bean>
    <managed-bean-name>profile$edit</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.profile.EditProfileActions
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
    <managed-property>
      <description>
        Flag indicating that email confirmation must be sent and received
        before a newly created username is activated.
      </description>
      <display-name>Confirmation Flag</display-name>
      <property-name>confirmation</property-name>
      <property-class>boolean</property-class>
      <value>false</value>
    </managed-property>
    <managed-property>
      <description>
        Session scope attribute key under which the User instance for a
        logged on user is stored.
      </description>
      <display-name>User Key</display-name>
      <property-name>userKey</property-name>
      <property-class>java.lang.String</property-class>
      <value>user</value>
    </managed-property>
  </managed-bean>

  <managed-bean>
    <managed-bean-name>profile$logon</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.profile.LogonActions
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
    <managed-property>
      <description>
        Flag indicating that "remember me" cookie support
        is enabled.
      </description>
      <display-name>Remember Me</display-name>
      <property-name>rememberMe</property-name>
      <property-class>boolean</property-class>
      <value>false</value>
    </managed-property>
    <managed-property>
      <description>
        Session scope attribute key under which the User instance for a
        logged on user is stored.
      </description>
      <display-name>User Key</display-name>
      <property-name>userKey</property-name>
      <property-class>java.lang.String</property-class>
      <value>user</value>
    </managed-property>
  </managed-bean>


  <!-- ========================= Remote Lookup Support ===================== -->


  <!-- ViewController Beans -->

  <managed-bean>
    <description>
      Remoting support method to retrieve the set of supported message
      categories for this application.
    </description>
    <managed-bean-name>lookup$listCategories</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.lookup.ListCategories
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <description>
      Remoting support method to retrieve the set of supported locales
      for this application.
    </description>
    <managed-bean-name>lookup$listLocales</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.lookup.ListLocales
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
  </managed-bean>

  <!-- Navigation Rules -->
  <!-- These are only needed because we have demo links on the main menu -->

  <navigation-rule>
    <from-view-id>*</from-view-id>
    <navigation-case>
      <from-outcome>lookup$listCategories</from-outcome>
      <to-view-id>/lookup/listCategories.jsp</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-outcome>lookup$listLocales</from-outcome>
      <to-view-id>/lookup/listLocales.jsp</to-view-id>
    </navigation-case>
  </navigation-rule>


  <!-- =========================== Subview Processing ====================== -->


  <!-- ViewController Beans -->

  <managed-bean>
    <managed-bean-name>subview_alpha</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.subview.Alpha
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <managed-bean-name>subview_beta</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.subview.Beta
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <managed-bean-name>subview_gamma</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.subview.Gamma
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <managed-bean-name>subview_delta</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.subview.Delta
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <managed-bean-name>subview$first</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.subview.First
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <managed-bean-name>subview$second</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.subview.Second
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
  </managed-bean>

  <!-- Navigation Rules -->

  <navigation-rule>
    <from-view-id>*</from-view-id>
    <navigation-case>
      <from-outcome>subview$first</from-outcome>
      <to-view-id>/subview/first.jsp</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-outcome>subview$second</from-outcome>
      <to-view-id>/subview/second.jsp</to-view-id>
    </navigation-case>
    <navigation-case>
      <from-outcome>subview$third</from-outcome>
      <to-view-id>/usecases.jsp</to-view-id>
    </navigation-case>
  </navigation-rule>


  <!-- ===================== Miscellaneous Facilities ====================== -->


  <managed-bean>
    <description>
      Utility class to return locale-specific domains (lists of selection items)
      based on the locale of the current request.
    </description>
    <managed-bean-name>domains</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.view.Domains
    </managed-bean-class>
    <managed-bean-scope>application</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <description>
      This class simulates persistence storage loading 
          domain data from the "dex.xml" file. 
    </description>
    <managed-bean-name>rolodexDao</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.rolodex.RolodexDao
    </managed-bean-class>
    <managed-bean-scope>application</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <description>
       View controller for the JSP view rolodex usecase
    </description>
    <managed-bean-name>rolodex</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.rolodex.Rolodex
    </managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <description>
       View controller for the HTML view rolodex usecase
    </description>
    <managed-bean-name>rolodex$hrolodex</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.rolodex.Rolodex
    </managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>

  <managed-bean>
    <description>
       View controller for the Extreme HTML view rolodex usecase
    </description>
    <managed-bean-name>rolodex$xhrolodex</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.rolodex.Rolodex
    </managed-bean-class>
    <managed-bean-scope>session</managed-bean-scope>
  </managed-bean>


  <managed-bean>
    <description>
        This class simulates the classic Struts FormBean where
        request parameters are populated in a POJO object.     
    </description>
    <managed-bean-name>queryParam</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.rolodex.QueryParam
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
    <managed-property>
        <property-name>tabIndex</property-name>
        <value>#{param.tabIndex}</value>
    </managed-property>
    <managed-property>
        <property-name>selectedName</property-name>
        <value>#{param.selectedName}</value>
    </managed-property>
  </managed-bean>


<!-- DEPRECATED - see profile$logic below -->
<!-- Comment out to use Spring BeanFactory for instantiation
  <managed-bean>
    <description>
      Business logic used to manipulate registered user profile
      information, and authenticate logons.
    </description>
    <managed-bean-name>logon$logic</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.logic.LogonLogic
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
    <managed-property>
      <property-name>dao</property-name>
      <property-class>org.apache.shale.usecases.model.UsersDAO</property-class>
      <value>#{logon$users}</value>
    </managed-property>
  </managed-bean>
-->


<!-- DEPRECATED - see profile$users below -->
<!-- Comment out to use Spring BeanFactory for instantiation
  <managed-bean>
    <description>
      Data Access Object (DAO) used to manipulate registered user profile
      information.
    </description>
    <managed-bean-name>logon$users</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.model.minimal.MinimalUsersDAO
    </managed-bean-class>
    <managed-bean-scope>application</managed-bean-scope>
  </managed-bean>
-->


<!-- Comment out to use Spring BeanFactory for instantiation
  <managed-bean>
    <description>
      Business logic used to manipulate registered user profile
      information, and authenticate logons.
    </description>
    <managed-bean-name>profile$logic</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.logic.LogonLogic
    </managed-bean-class>
    <managed-bean-scope>request</managed-bean-scope>
    <managed-property>
      <property-name>dao</property-name>
      <property-class>org.apache.shale.usecases.model.UsersDAO</property-class>
      <value>#{profile$users}</value>
    </managed-property>
  </managed-bean>
-->


<!-- Comment out to use Spring BeanFactory for instantiation
  <managed-bean>
    <description>
      Data Access Object (DAO) used to manipulate registered user profile
      information.
    </description>
    <managed-bean-name>profile$users</managed-bean-name>
    <managed-bean-class>
      org.apache.shale.usecases.model.minimal.MinimalUsersDAO
    </managed-bean-class>
    <managed-bean-scope>application</managed-bean-scope>
  </managed-bean>
-->


</faces-config>
