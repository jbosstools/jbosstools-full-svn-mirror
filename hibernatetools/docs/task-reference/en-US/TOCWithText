1. Legal notices

2. Latest developments

3. Getting started
   3.1. Required installations
   3.2. Quick start
   
4. Concepts
   4.1. Object-relational mapping	

     4.1.1. Relational database model
            The relational database model represents data as a two dimensional table referred to as a relation [1](61-62). An example of such a relation is provided in the figure below:
            
            Staff
            +++++++++++++++++++++++++++++++++
            First name 	| Last name 	| Age
            +++++++++++++++++++++++++++++++++
            Peter	| Wills		| 25 
            
            Figure 4.1 The Staff relation
            
            Such a relation can be represented by the schema Staff(First name, Last name, Age) which consists of the name of the relation (Staff) and the set of attributes associated with the relation. A design which adheres to the relational model conists of at least one relational schema and the set of schema is referred to as the Relational Database Schema or simply the Database Schema.
            When viewed as a table, the attributes of a relation serve as the columns for the table while the tuples, which consists of one componment for each attribute, are the rows.      
                     
            4.1.1.1. Data relationships
            	     Within a particular relation, a single tuple is identified by a unique key known as the primary key. This key may be a single attribute for which each corresponding value is unique or a combination of attributes which together form a unique value. The relationships between individual relations are specified with the use of foreign keys which identify and link to the primary key of the related table or relation.  
            	     
            	     
            	     Individual relations The relationship between data elements are representated by primary keys and foreign keys 
                     When viewed as a table, the attributes of a relation are the columns and tuples ar the rows. the rows which make up the 
                     
            4.1.1.2. Entity relationships
                     When designing a database it is common practice to produce an Entity/Relationship (E/R) diagram. Such a diagram depicts the relationship between entity sets (where a staff member is a single entity and all staff form the entity set) and allows the database designer to visualise the relationships while displaying the attributes and primary keys. The E/R diagram can then be converted to a set of relations by specifying the appropriate foreign keys and implementing additional relations according to the relationship types; one-to-one, one-to-many, many-to-one and many-to-many.
                     The table below lists the relationship types:
                     ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                     One to One	|	
                     
                     A single staff member has one and only one tax file number and;
                     one tax file number belongs to a single staff member
                     
		     One to Many
		     A single staff member can have many dependants
		     
                     Many to One
                     Many Staff members can reside at the one address 
                     
                     {
                     Formal from book:
                     Many to one.
                     * Each member of entity set A can be connected by a relationship to at most one member of enitity set B
                     * Each member of entity set B can be connected to many members of entity set A.  
                     
                     One to one
                     * If the relationship is both many to one from A to B and many to one from B to A then the relationship is one-to-one.
                     }
                      
                     Relations are then formed following the formal defintion of the relationships as depicted in the E/R diagram
                     One to One   | foreign key within table
                     One to Many  | foreign key on the many side
                     Many to One  | foreign key on the many side
                     Many to Many | new relation AB with PK  
                     
                     
      4.1.2. Java objects				 
             4.1.2.1. Object attributes	   			 
             4.1.2.2. Object relationships     		  
      4.1.3. Hibernate meta-model
      
   4.2. Hibernate mapping
             4.2.1. Persistent classes
             4.2.2. Hibernate mapping file
             4.2.3.  Hibernate mapping types 
                    4.2.3.1. Core			
                    4.2.3.2. Annotations		
                    4.2.3.3. Java persistence API
                    4.2.3.4. Java database connectivity			                             
                    
   4.3. Hibernate configuration	 		
         4.3.1. hibernate.properties			
         4.3.2. hibernate.cfg.xml			
         
   4.4. Hibernate query language
   
   4.5. Code generation and reverse engineering
        4.5.1. Exporters
    
   4.6. Java persistence API 				
        4.6.1. Data definition language			 
        4.6.2. Entities
    
   4.7. Logging						
        4.7.1. Log4j					
        4.7.2. JDK1.4		 						     
   			       		                                  
   4.6. Ant Tasks
        4.6.1. Ant tasks overview			
        4.6.2. Hibernate Configurations		
        	4.5.2.1. Standard		
        	4.5.2.2. Annotation
        	4.5.2.3. Java persistence API
        	4.5.2.4. Java database connectivity
       4.6.3.	Exporters
                4.6.3.1. Properties     
       4.6.4. Reverse Engineering Control
              4.6.4.1. Default
              4.6.4.2. reveng file
              4.6.4.3. Custom
              4.6.4.4. Custom Database Metadata
   
   4.7. Plain old Java object code generation       							
               
   4.8. Further resources		
                    
5. Tasks 
    5.1. Basic tasks
    5.2. Hibernate mapping
         5.2.1. Persistent classes			
         5.2.2. Hibernate mapping file
         5.2.3. Hibernate mapping yypes
                5.2.3.1. Core
                5.2.3.2. Annotations			
                5.2.3.3. Java persistence API
                5.2.3.4. Java database connectivity		
                				                                  
    5.3. Hibernate configuration
         5.3.1. Hibernate properties file		
                5.3.1.1. Create                         
                5.3.1.2. Edit
                5.3.1.3. Use
                          
         5.3.2. Hibernate configuration file 		
                5.3.2.1. Create
                5.3.2.2. Edit
                5.3.2.3. Use                         
                
    5.4. Hibernate query language			
         5.4.1. Prototyping queries			
         5.4.2. Translating queries			
         5.4.3. Query verification			
                
    5.5. Code generation and reverse engineering 	
         5.5.1. Hibernate configuration			
                5.5.1.1. Mapping files			
                5.5.1.2. Annotated classes		
         5.5.2. Existing database			
         5.5.3. Exporters
       
    5.6. Java persistence API				
         5.6.1. Project creation			
         5.6.2. Data definition language generation 	
         5.6.3. Entity generation			
         5.6.4.  Supported annotations			
         
    5.7. Logging
         5.7.1. Log4j					
         5.7.2. JDK1.4		
                        
    5.8. Ant tasks					
         5.8.1. Hibernate tool
         				
         5.8.2. Hibernate configurations		
                5.8.2.1. Standard			
                5.8.2.2. Annotation			
                5.8.2.3. Java persistence API
                5.8.2.4. Java database connectivity			
              
         5.7.3. Exporters
         	5.7.3.1. Data definition language  	
                5.7.3.2. Java object  	 		
    		5.7.3.3. Hibernate mapping file		
    		5.7.3.4. Hibernate configuration file		 
    		5.7.3.5. Documentation			
    		5.7.3.6. Query				
                5.7.3.7. Generic hibernate meta-model	
    		5.7.3.8. Configuring exporters using properties				
                
    5.9. Controlling POJO code generation		
         5.9.1. The meta attribute
                  
    6. References					

    6.1. Wizards								

        6.1.1. Hibernate mapping file						
        6.1.2. Hibernate configuration file					
        6.1.3. Hibernate console configuration					
               6.1.3.1. Edit configuration					
        6.1.4. Code generation							
        6.1.5. Reverse engineering file						
        6.1.6. Add JPA annotations						
        6.1.7. New JPA project							
               6.1.7.1. Generate entities					
               6.1.7.2. Data definition language generation						 

    6.2. Views

        6.2.1. Web projects							
        6.2.2. Hibernate configurations						
        6.2.3. Properties view							
        6.2.4. Mapping diagram view  					
        6.2.5. Hibernate query result						
              6.2.5.1. Property view					
        6.2.6. Hibernate dynamic query translator               		
        6.2.7. Error log							
        6.2.8. Add JPA annotations view
        6.2.9. JPA details							
         
    6.3. Editors
         6.3.1. Hibernate mapping						
         6.3.2. Hibernate configuration
                6.3.2.1. Tree view
                6.3.2.2. Diagram view
         6.3.3. JBoss tools properties						
         6.3.4. Reveng.xml							
         6.3.5. Hibernate query Language								
         6.3.6. Criteria editor 						

    6.4. Perspectives 
        6.4.1. Hibernate console						
        6.4.2. JPA perspective								

    6.5. Preferences pages

    6.6. Dialogs

    6.7. Icons and buttons
    
    6.8. Developer documentation						

7. Troubleshooting

    7.1. Error messages

        7.1.1. Basic procedures							
        7.1.2. Hibernate mapping						
        7.1.3. Hibernate configuration						
        7.1.4. Hibernate query language						
        7.1.5. Code generation and reverse engineering				
        7.1.6. Ant tasks							
        7.1.7. Logging								
        7.1.8. Java persistence API						
        7.1.9. Controlling POJO code generation        				

    7.2. Warning Messages

        7.2.1. Basic procedures							
        7.2.2. Hibernate mapping						
        7.2.3. Hibernate configuration						
        7.2.4. Hibernate query language						
        7.2.5. Code generation and reverse engineering				
        7.2.6. Ant tasks							
        7.2.7. Logging								
        7.2.8. Java persistence API						
        7.2.9. Controlling POJO code generation        									

8. Hints

    8.1.1. Basic procedures							
    8.1.2. Hibernate mapping							
    8.1.3. Hibernate configuration						
    8.1.4. Hibernate query language						
    8.1.5. Code generation and reverse engineering				
    8.1.6. Ant tasks								
    8.1.7. Logging								
    8.1.8. Java persistence API							
    8.1.9. Controlling POJO code generation        				
    
9. Link sets

       9.1. Wizards link sets 								

        9.1.1. Hibernate mapping file link set 						
        9.1.2. Hibernate configuration file link set					
        9.1.3. Hibernate console configuration link set					
               9.1.3.1. Edit configuration link set					
        9.1.4. Code generation link set							
        9.1.5. Reverse engineering file link set
        9.1.6. Add JPA annotations link set						
        9.1.7. New JPA project link set							
               6.1.7.1. Generate entities link set					
               6.1.7.2. Data definition language generation link set

    9.2. Views link sets

        9.2.1. Web projects link set							
        9.2.2. Hibernate configurations link set
        9.2.3. Properties view link set							
        9.2.4. Mapping diagram view link set  					
        9.2.5. Hibernate query result link set						
              9.2.5.1. Property view link set					
        9.2.6. Hibernate dynamic query translator link set               		
        9.2.7. Error log link set							
        9.2.8. Add JPA annotations view link set
        9.2.9. JPA details link set							
         
    9.3. Editors link sets
         9.3.1. Hibernate mapping link set
         9.3.2. Hibernate configuration link sets 
                9.3.2.1. Tree view link set
                9.3.2.2. Diagram view link set
         9.3.3. JBoss tools properties link set				
         9.3.4. Reveng.xml link set							
         9.3.5. Hibernate query Language link set
         9.3.6. Criteria editor link set 						

    9.4. Perspectives link sets 
        9.4.1. Hibernate console link set						
        9.4.2. JPA perspective link set								

    9.5. Preferences pages link sets

    9.6. Dialogs link sets

    9.7. Icons and buttons link sets
    
    References
    Ullman, Jeffrey D
    Widom, Jennifer A First Course in Databases pp 61 -62
