<?xml version="1.0" encoding="UTF-8"?>
<chapter id="quickstart" xreflabel="Quick Start">
    <?dbhtml filename="quick_start.html"?>
	<chapterinfo>
		<keywordset>
			<keyword>JBoss Tools</keyword>
			<keyword>Smooks</keyword>
			<keyword>JBDS</keyword>
			<keyword>java</keyword>
		</keywordset>
	</chapterinfo>
	<title>Quick Start</title>
	<para>
		This "Quick Start" will show how to use the Smooks tools to
		create/edit the Smooks configuration file for Java2Java
		data
		transformation.</para>
	<para>
		This chapter should give the readers a brief understanding of
		the
		Smooks
		dev tools.
		</para>
	<section>
		<title>Download Smooks Java-to-Java example</title>
		<para>
			Visit
			<ulink
				url="http://www.smooks.org/documentation/documentation-smooks-1-1-x/examples/example---java-to-java">here</ulink>
			to download the "java-to-java" example project.
		</para>
		<tip>
			<title>Tip:</title>
			<para>
				The example projects is base on Maven , we suggest user to
				create a
				new eclipse Java project and copy the example codes and .jar
				files
				from the
				example project paste them to the eclipse Java
				project.
			</para>
		</tip>
	</section>
	<section>
		<title>Smooks configuration file wizard</title>
		<para>Select the Smooks Java-to-Java example project what you
			created and right-click , select the menu: “New” ->
			“Other...” , find
			the
			“Smooks Configuration File” wizard. Click
			“Next” button.
		</para>
		<figure>
			<title>To select Smooks Configuration File wizard</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/common/new_wizard.png" scale="90" />
				</imageobject>
			</mediaobject>
		</figure>
		<para>First wizard page is file path creation page. Select the
			“src” to be the file's container , and input
			“smooks-newconfig.smooks”. Click “Next”.</para>
		<figure>
			<title>Choose the configuration file container and type the
				file's name</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/common/input_file_name.png"
						scale="90" />
				</imageobject>
			</mediaobject>
		</figure>
		<para>The second wizard page is the transform data type choose
			page.</para>
		<tip>
			<title>Note</title>
			<para>
				Because the quick start introduce how to create/edit the
				Java-to-Java
				Smooks configuration file , so choose "Java" type
				to be
				the source/target transform data type please. 
				</para>
		</tip>
		<figure>
			<title>Select Data Type</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/common/data_type_selection.png"
						scale="90" />
				</imageobject>
			</mediaobject>
		</figure>
	</section>
	<section id="quickstart_formeditor">
		<title>Smooks form editor</title>
		<para>When the wizard was finished , a new Smooks configuration
			file was created and the Smooks editor will be opened automatically.
		</para>
		<para> We will see the
			“Smooks Form Editor”:
		</para>
		<figure>
			<title>Smooks form editor</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/common/form_editor.png" scale="90" />
				</imageobject>
			</mediaobject>
		</figure>

		<para>
			This editor contains several parts:
			<orderedlist numeration="loweralpha" inheritnum="inherit">
				<listitem>
					Notify message display
					area. If there are any errors when
					users are editing the file ,
					the error
					area will
					display them.
				</listitem>
				<listitem>
					Source data
					tree. The tree will display the
					structured of
					transform source
					data.
					</listitem>

				<listitem>
					Target data tree. The tree
					will display the structured of
					transform
					target
					data.
					</listitem>

				<listitem>
					Mapping
					graphical area. Show the data
					mapping connection
					lines.
				</listitem>

				<listitem>
					Source/Target data
					selection links. Click the
					link ,
					there
					will
					open the
					<link linkend="graphicaleditor_datalink">"Data
						Selection
						Wizard"</link>
					to help user to choose
					the
					source/target
					data.
				</listitem>
			</orderedlist>
		</para>
	</section>
	<section id="graphicaleditor_datalink">
		<title>Choose the source/target data
		</title>
		<para>Click the data selection links to choose the transform
			data. The "Data Selection Wizard" is opened , and there are two data
			types on the list :
			XML and Java.
		</para>
		<tip>
			<title>Note</title>
			<para>
				There will be more and more data types on the list as the
				development went on.
			</para>
		</tip>
		<figure>
			<title>Data type wizard</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/common/data_type_wizard.png"
						scale="90" />
				</imageobject>
			</mediaobject>
		</figure>
		<para>Select the “JavaBean Data Type” and click “Next” , you
			will see a java class selection page :
		</para>
		<figure>
			<title>JavaBean data selection wizard</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/java2java/java_data_selection_wizard.png"
						scale="90" />
				</imageobject>
			</mediaobject>
		</figure>
		<para>When you finished the java class selection , click “Finish”
			, we
			will see , the structured of the java class was be displayed on
			the Source
			data tree. Please do the same operation with the target
			data link.
		</para>
		<figure>
			<title>Display structure of the transform data</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/java2java/java_data_display.png"
						scale="90" />
				</imageobject>
			</mediaobject>
		</figure>
	</section>
	<section id="quickstart_mapping">
		<title>Mapping</title>
		<para>
			As you see , the source/target data tree display the structure
			of the
			java class. </para>
		<para>How to mapping it?</para>
		<para>
			First , we should know what is
			we
			want to transform:
			<orderedlist numeration="loweralpha" inheritnum="inherit">
				<listitem>
					Bind the “customerName” property of the
					Order#header to
					the
					“customerName” property of LineOrder.
					</listitem>
				<listitem>
					Bind the
					“customerNumber” property of the Order#header to
					the
					“customerId”
					property of LineOrder.
					</listitem>
				<listitem>
					Bind the “price” property of the OrderItem
					to
					the
					“unitPrice” property of
					LineItem.
					</listitem>
				<listitem>
					Bind the “productId”
					property
					of the OrderItem to the
					“productCode”
					property of LineItem.
					</listitem>
				<listitem>
					Bind the
					“quantity” property of the OrderItem to the
					“unitQuantity”
					property of
					LineItem.
					</listitem>
			</orderedlist>
		</para>
		<para>
			Make sense ?</para>
		<para> OK, let's select the “customerName”
			item of the
			“header”
			item on
			the source data tree and start to drag
			it. When the
			drag item
			cross into
			the Mapping graphical area , we will
			see a
			connection
			line. Drop the
			item onto the “customerName” of the
			“LineOrder” on the
			target data
			view.</para>
		<para>
			Now there will open a dialog to
			ask you to
			connect the
			root node:
		</para>
		<figure>
			<title>A dialog to ask user to connect the root nodes</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/java2java/connect_rootnode.png"
						scale="90" />
				</imageobject>
			</mediaobject>
		</figure>
		<para>
			Please click “Yes” to connect the root node , if you didn't do
			that,
			this dialog
			will open again when you connect other nodes. 
		</para>
		<tip>
			<title>Note</title>
			<para>Please
				remember that :
				The root nodes of the source data
				and target data
				*MUST*
				be connected.</para>
			<para>This rule is not only for Java-to-Java , same with
				XML-to-Java too </para>
		</tip>
		<para>
			Now let's do the same operation with the “customerNumber” ,
			that
			is the
			what we want to see :
		
		</para>
		<figure>
			<title>Correctly mapping editor</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/java2java/java_connection1.png"
						scale="90" />
				</imageobject>
			</mediaobject>
		</figure>
		<para>Next , we are going to try to bind the properties of the
			“OrderItem” to the properties of the “LineItem”. 
		</para>
		<para>Select the “price” and drag it onto the “unitPrice” of
			the
			other side tree viewer. The error message display area will show
			an
			error :
		</para>
		<figure>
			<title>Connection Error 1</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/java2java/connection_error1.png"
						scale="90" />
				</imageobject>
			</mediaobject>
		</figure>
		<para>How to deal with the error ?</para>
		<para>Please click the “Fix it” link , there pop a menu and
			there are several "resolve methods" on the menu.
		</para>
		<para>
			Select the first resolve method: 'Connect the “OrderItem” to the
			“LineItem” ' ,
			then the “OrderItem” was connected
			with the
			“LineItem”.
		</para>
		<para>But the notify message area still show some other errors:
		</para>
		<figure>
			<title>Connection Error 2</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/java2java/connection_error2.png"
						scale="90" />
				</imageobject>
			</mediaobject>
		</figure>
		<para>OK,Deal it with the fire error ---- Click “Fix it” link
			and select the first resolve method. The “orderItems” was connected
			with the “lineItems”.
		</para>
		<tip>
			<title>Tip</title>
			<para>
				Why there will occur error?</para>
			<para> We will find that , if we only
				connect the
				property node without
				to connect the parent node of the
				property ,
				the “connection error”
				will happen. </para>
			<para>The
				connection of
				the “price-to-unitPrice” is
				the “Binding
				Connection” ,
				but there need
				a “Instance
				Creation
				Connection” ---- the
				connection
				of
				the
				“OrderItem-to-LineItem”.</para>
		</tip>
		<para>
			After that , connect the quantity to
			the
			unitQuantity ; connect
			the
			productId to the productCode:
		</para>
		<figure>
			<title>Complete mapping</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/java2java/correct_editor.png"
						scale="90" />
				</imageobject>
			</mediaobject>
		</figure>
		<para>Now , we should save the file.The Smooks tools will generate
			the correct configuration file contents.</para>
		<para>OK,Let run the test class : example.Main (Please make
			sure
			that the Smooks engine load the correct configuration file)
			</para>
		<para>Success!
		</para>
	</section>
</chapter>
