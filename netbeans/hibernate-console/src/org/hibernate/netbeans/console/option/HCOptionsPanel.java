package org.hibernate.netbeans.console.option;

import javax.swing.SpinnerNumberModel;

final class HCOptionsPanel extends javax.swing.JPanel {
    
    private final HCOptionsPanelController controller;
    
    HCOptionsPanel(HCOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        maxResultsSpinner.setModel(new SpinnerNumberModel(100, 10, 2000, 100));
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        generalLabel = new javax.swing.JLabel();
        extensionsLabel = new javax.swing.JLabel();
        extensionsTextField = new javax.swing.JTextField();
        maxResultsLabel = new javax.swing.JLabel();
        maxResultsSpinner = new javax.swing.JSpinner();
        outputLabel = new javax.swing.JLabel();
        loggingWindowCheckBox = new javax.swing.JCheckBox();

        org.openide.awt.Mnemonics.setLocalizedText(generalLabel, org.openide.util.NbBundle.getBundle(HCOptionsPanel.class).getString("LBL_General")); // NOI18N

        extensionsLabel.setLabelFor(extensionsTextField);
        org.openide.awt.Mnemonics.setLocalizedText(extensionsLabel, org.openide.util.NbBundle.getBundle(HCOptionsPanel.class).getString("LBL_Extensions")); // NOI18N

        extensionsTextField.setText("hbm.xml, hbm");

        maxResultsLabel.setLabelFor(maxResultsSpinner);
        org.openide.awt.Mnemonics.setLocalizedText(maxResultsLabel, org.openide.util.NbBundle.getBundle(HCOptionsPanel.class).getString("LBL_MaxResults")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(outputLabel, org.openide.util.NbBundle.getBundle(HCOptionsPanel.class).getString("LBL_Output")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(loggingWindowCheckBox, org.openide.util.NbBundle.getBundle(HCOptionsPanel.class).getString("LBL_OpenLoggingWindow")); // NOI18N
        loggingWindowCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        loggingWindowCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(generalLabel)
                    .add(layout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(extensionsLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(extensionsTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE))
                    .add(outputLabel)
                    .add(layout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(loggingWindowCheckBox)
                            .add(layout.createSequentialGroup()
                                .add(maxResultsLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(maxResultsSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(generalLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(extensionsTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(extensionsLabel))
                .add(10, 10, 10)
                .add(outputLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(maxResultsLabel)
                    .add(maxResultsSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(loggingWindowCheckBox)
                .addContainerGap(172, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    void load() {
        Options o = Options.get();
        extensionsTextField.setText(o.getHbmExtensions());
        maxResultsSpinner.setValue(o.getMaxQueryResults());
        loggingWindowCheckBox.setSelected(o.isShowLoggingWindow());
    }
    
    void store() {
        Options o = Options.get();
        String str = extensionsTextField.getText().trim();
        if (str.length() > 0) {
            o.setHbmExtensions(str);
        }
        Number nr = (Number) maxResultsSpinner.getValue();
        if (nr.intValue() >= 0 && nr.intValue() < 1000) {
            o.setMaxQueryResults(nr.intValue());
        }
        o.setShowLoggingWindow(loggingWindowCheckBox.isSelected());
    }
    
    boolean valid() {
        return true;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel extensionsLabel;
    private javax.swing.JTextField extensionsTextField;
    private javax.swing.JLabel generalLabel;
    private javax.swing.JCheckBox loggingWindowCheckBox;
    private javax.swing.JLabel maxResultsLabel;
    private javax.swing.JSpinner maxResultsSpinner;
    private javax.swing.JLabel outputLabel;
    // End of variables declaration//GEN-END:variables
    
}
