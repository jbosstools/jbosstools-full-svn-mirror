VersionPropertyDescriptorsHolder_VersionCategory=Version
VersionMappingDescriptorsHolder_GeneralCategory=General
VersionMappingDescriptorsHolder_AdvancedCategory=Advanced
VersionMappingDescriptorsHolder_MappingColumnN=column
VersionMappingDescriptorsHolder_MappingColumnD=The name of the column holding the version number.
VersionMappingDescriptorsHolder_TypeByStringN=type
VersionMappingDescriptorsHolder_TypeByStringD=The type of the version number.
VersionPropertyDescriptorsHolder_VersionValueTypeNameN=type
VersionPropertyDescriptorsHolder_VersionValueTypeNameD=The type of the version number.
VersionPropertyDescriptorsHolder_VersionValueNullValueN=Version unsaved value
VersionPropertyDescriptorsHolder_VersionValueNullValueD=Indicates version value for newly instantiated instances.
VersionPropertyDescriptorsHolder_VersionPropertyAccessorNameN=Access
VersionPropertyDescriptorsHolder_VersionPropertyAccessorNameD=The strategy Hibernate should use for accessing the property value.
VersionPropertyDescriptorsHolder_VersionColumnNameN=Version column
VersionPropertyDescriptorsHolder_VersionColumnNameD=The name of the column holding the version number.
SimpleValueMappingDescriptorsHolder_GeneralCategory=General
SimpleValueMappingDescriptorsHolder_AdvancedlCategory=Advanced
SimpleValueMappingDescriptorsHolder_TableNameN=table
SimpleValueMappingDescriptorsHolder_TableNameD=The name of its database table.
SimpleValueMappingDescriptorsHolder_MappingColumnN=column
SimpleValueMappingDescriptorsHolder_MappingColumnD=The name of the mapped database table column.
SimpleValueMappingDescriptorsHolder_FormulaN=formula
SimpleValueMappingDescriptorsHolder_FormulaD=An SQL expression that defines the value for a computed property.
SimpleValueMappingDescriptorsHolder_TypeByStringN=type
SimpleValueMappingDescriptorsHolder_TypeByStringD=A name that indicates the Hibernate type.
DiscriminatorPropertyDescriptorsHolder_DiscriminatorCategory=Discriminator
DiscriminatorPropertyDescriptorsHolder_ForceDiscriminatorN=Force discriminator
DiscriminatorPropertyDescriptorsHolder_ForceDiscriminatorD="Force" Hibernate to specify allowed discriminator values even when retrieving all instances of the root class.
DiscriminatorPropertyDescriptorsHolder_DiscriminatorInsertableN=Discriminator insert
DiscriminatorPropertyDescriptorsHolder_DiscriminatorInsertableD=Specifies whether discriminator column isn't also a part of a mapped composite identifier.
DiscriminatorPropertyDescriptorsHolder_DiscriminatorFormulaN=Discriminator formula
DiscriminatorPropertyDescriptorsHolder_DiscriminatorFormulaD=Defines an arbitrary SQL expression that is executed when a type has to be evaluated.
DiscriminatorPropertyDescriptorsHolder_DiscriminatorColumnNameN=Discriminator columns
DiscriminatorPropertyDescriptorsHolder_DiscriminatorColumnNameD=The name of the discriminator column.
IdBagMappingDescriptorsHolderWithTable_GeneralCategory=General
IdBagIdentifireMappingDescriptorsHolder_TypeByStringN=type
IdBagIdentifireMappingDescriptorsHolder_TypeByStringD=Type.
IdBagMappingDescriptorsHolder_AdvancedCategory=Advanced
IdBagMappingDescriptorsHolder_OrderByN=order-by
IdBagMappingDescriptorsHolder_OrderByD=Specify a table column (or columns) that define the iteration order, together with an optional asc or desc.
IdBagMappingDescriptorsHolder_LazyN=lazy
IdBagMappingDescriptorsHolder_LazyD=May be used to disable lazy fetching and specify that the association is always eagerly fetched.
IdBagMappingDescriptorsHolderWithTable_CollectionTableN=table
IdBagMappingDescriptorsHolderWithTable_CollectionTableD=The name of the database collection table.
IdBagIdentifireMappingDescriptorsHolder_GeneralCategory=General
IdBagIdentifireMappingDescriptorsHolder_IdentifierColumnN=column 
IdBagIdentifireMappingDescriptorsHolder_IdentifierColumnD=The name of the id column.
IdBagIdentifireMappingDescriptorsHolder_GeneratorStrategyN=genetator
IdBagIdentifireMappingDescriptorsHolder_GeneratorStrategyD=Names a Java class used to generate unique identifiers for instances of the persistent class.
PrimitiveArrayMappingDescriptorsHolder_IndexCategory=Index
PrimitiveArrayMappingDescriptorsHolder_BaseIndexN=base index
PrimitiveArrayMappingDescriptorsHolder_BaseIndexD=The value of the index column.
PrimitiveArrayMappingDescriptorsHolder_IndexMappingColumnN=column
PrimitiveArrayMappingDescriptorsHolder_IndexMappingColumnD=The name of the column holding the collection index values.
PrimitiveArrayMappingDescriptorsHolderWithTable_GeneralCategory=General
PrimitiveArrayMappingDescriptorsHolderWithTable_CollectionTableN=table
PrimitiveArrayMappingDescriptorsHolderWithTable_CollectionTableD=The name of the database collection table.
CollectionMappingFKDescriptorsHolder_GeneralCategory=General
CollectionMappingFKDescriptorsHolder_AdvancedCategory=Advanced
ComponentMappingDescriptorsHolder_ComponentClassNameN=class
ComponentMappingDescriptorsHolder_ComponentClassNameD=The name of the component(child) class.
CollectionMappingFKDescriptorsHolder_KeyColumnN=column
CollectionMappingFKDescriptorsHolder_KeyColumnD=The name of the foreign key column.
CollectionMappingDescriptorsHolder_OrderByN=order-by
CollectionMappingDescriptorsHolder_OrderByD=Specify a table column (or columns) that define the iteration order, together with an optional asc or desc.
CollectionMappingDescriptorsHolder_SortN=sort
CollectionMappingDescriptorsHolder_SortD=Specify a sorted collection with natural sort order, or a given comparator class.
CollectionMappingDescriptorsHolder_InverseN=inverse
CollectionMappingDescriptorsHolder_InverseD=Mark this collection as the "inverse" end of a bidirectional association.
CollectionMappingDescriptorsHolder_LazyN=lazy
CollectionMappingDescriptorsHolder_LazyD=May be used to disable lazy fetching and specify that the association is always eagerly fetched.
CollectionBaseMappingDescriptorsHolder_WhereN=where
CollectionBaseMappingDescriptorsHolder_WhereD=Specify an arbitrary SQL WHERE condition to be used when retrieving or removing the collection.
CollectionBaseMappingDescriptorsHolder_CheckN=check
CollectionBaseMappingDescriptorsHolder_CheckD=A SQL expression used to generate a multi-row check constraint for automatic schema generation.
CollectionMappingFKDescriptorsHolder_KeyTableNameN=table
CollectionMappingFKDescriptorsHolder_KeyTableNameD=The name of its database table.
CollectionMappingDescriptorsHolder_GeneralCategory=General
CollectionBaseMappingDescriptorsHolder_LoaderNameN=loader
CollectionBaseMappingDescriptorsHolder_LoaderNameD=This allows a named query to be attached to a class.
ComponentMappingDescriptorsHolder_AdvancedCategory=Advanced
CollectionMappingFKDescriptorsHolder_KeyForeignKeyNameN=foreign-key
CollectionMappingFKDescriptorsHolder_KeyForeignKeyNameD=Foreign-key.
CollectionBaseMappingDescriptorsHolder_AdvancedCategory=Advanced
CollectionBaseMappingDescriptorsHolder_OptimisticLockedN=optimistic-lock
CollectionBaseMappingDescriptorsHolder_OptimisticLockedD=Species that changes to the state of the collection results in increment of the owning entity's version.
CollectionMappingFKDescriptorsHolder_KeyCascadeDeleteEnabledN=cascade delete
CollectionMappingFKDescriptorsHolder_KeyCascadeDeleteEnabledD=Specifies whether the foreign key constraint has database-level cascade delete enabled.
CollectionMappingFKWithTextRefDescriptorsHolder_AdvancedCategory=Advanced
CollectionMappingFKWithRefDescriptorsHolder_AdvancedCategory=Advanced
CollectionMappingFKWithRefDescriptorsHolder_ReferencedPropertyNameN=property-ref
CollectionMappingFKWithRefDescriptorsHolder_ReferencedPropertyNameD=Specifies that the foreign key refers to columns that are not the primary key of the orginal table.
CollectionMappingFKWithTextRefDescriptorsHolder_ReferencedPropertyNameN=property-ref
CollectionMappingFKWithTextRefDescriptorsHolder_ReferencedPropertyNameD=Specifies that the foreign key refers to columns that are not the primary key of the orginal table.
CollectionBaseMappingDescriptorsHolder_SynchronizedTablesN=synchronize
CollectionBaseMappingDescriptorsHolder_SynchronizedTablesD=Declare the tables to synchronize this entity with, ensuring that auto-flush happens correctly.
CollectionMappingFKDescriptorsHolder_KeyUpdateableN=update
CollectionMappingFKDescriptorsHolder_KeyUpdateableD=Specifies that the foreign key should never be updated.
CollectionMappingDescriptorsHolder_AdvancedCategory=Advanced
CollectionMappingDescriptorsHolderWithTable_GeneralCategory=General
CollectionMappingDescriptorsHolderWithTable_CollectionTableN=table
CollectionMappingDescriptorsHolderWithTable_CollectionTableD=The name of the database collection table.
CollectionMappingFKDescriptorsHolder_KeyNullableN=nullable
CollectionMappingFKDescriptorsHolder_KeyNullableD=Specifies that the foreign key columns are not nullable.
CollectionBaseMappingDescriptorsHolder_SubselectN=subselect
CollectionBaseMappingDescriptorsHolder_SubselectD=Maps an immutable and read-only entity to a database subselect.
CollectionBaseMappingDescriptorsHolder_PersisterN=persister
CollectionBaseMappingDescriptorsHolder_PersisterD=Specifies a custom ClassPersister.
CollectionBaseMappingDescriptorsHolder_BatchSizeN=batchSize
CollectionBaseMappingDescriptorsHolder_BatchSizeD=Specify a "batch size" for lazily fetching instances of this collection.
CollectionBaseMappingDescriptorsHolder_FetchModeN=fetch
CollectionBaseMappingDescriptorsHolder_FetchModeD=Choose between outer-join fetching, fetching by sequential select, and fetching by sequential subselect.
ComponentMappingDescriptorsHolder_GeneralCategory=General
ComponentMappingDescriptorsHolder_ParentPropertyN=parent
ComponentMappingDescriptorsHolder_ParentPropertyD=The parent element maps a property of the component class as a reference back to the containing entity.
AnyMappingDescriptorsHolder_GeneralCategory=General
AnyMappingDescriptorsHolder_MetaTypeN=meta-type
AnyMappingDescriptorsHolder_MetaTypeD=Any type that is allowed for a discriminator mapping.
AnyMappingDescriptorsHolder_IdentifierTypeN=id-type
AnyMappingDescriptorsHolder_IdentifierTypeD=The identifier type.
AnyMappingDescriptorsHolder_MappingColumnN=id-column
AnyMappingDescriptorsHolder_MappingColumnD=Hold the identifier.
AnyMappingDescriptorsHolder_MetaTypeColumnN=meta-type column
AnyMappingDescriptorsHolder_MetaTypeColumnD=Holds the type of the associated entity.
ManyToManyMappingDescriptorsHolder_GeneralCategory=General
ManyToManyMappingDescriptorsHolder_AdvancedCategory=Advanced
ManyToManyMappingDescriptorsHolder_ReferencedEntityNameN=entity-name 
ManyToManyMappingDescriptorsHolder_ReferencedEntityNameD=The entity name of the associated class, as an alternative to class.
ManyToOneMappingDescriptorsHolder_ReferencedEntityNameN=entity-name 
ManyToOneMappingDescriptorsHolder_ReferencedEntityNameD=The entity name of the associated class, as an alternative to class.
ManyToOneMappingDescriptorsHolder_ReferencedPropertyNameN=property-ref 
ManyToOneMappingDescriptorsHolder_ReferencedPropertyNameD=The name of a property of the associated class that is joined to this foreign key.
ManyToManyMappingDescriptorsHolder_MappingColumnN=column
ManyToManyMappingDescriptorsHolder_MappingColumnD=The name of the element foreign key column.
ManyToOneMappingDescriptorsHolder_GeneralCategory=General
ManyToOneMappingDescriptorsHolder_MappingColumnN=column
ManyToOneMappingDescriptorsHolder_MappingColumnD=The name of the element foreign key column.
ManyToOneMappingDescriptorsHolder_IgnoreNotFoundN=not-found
ManyToOneMappingDescriptorsHolder_IgnoreNotFoundD=Specifies how foreign keys that reference missing rows will be handled: ignore will treat a missing row as a null association.
ManyToOneMappingDescriptorsHolder_ForeignKeyNameN=foreign-key
ManyToOneMappingDescriptorsHolder_ForeignKeyNameD=Foreign-key.
ManyToManyMappingDescriptorsHolder_FormulaN=formula
ManyToManyMappingDescriptorsHolder_FormulaD=An SQL formula used to evaluate the element foreign key value.
ManyToOneMappingDescriptorsHolder_FormulaN=formula
ManyToOneMappingDescriptorsHolder_FormulaD=An SQL formula used to evaluate the element foreign key value.
ManyToManyMappingDescriptorsHolder_IgnoreNotFoundN=not-found
ManyToManyMappingDescriptorsHolder_IgnoreNotFoundD=Specifies how foreign keys that reference missing rows will be handled: ignore will treat a missing row as a null association.
ManyToManyMappingDescriptorsHolder_FetchModeN=fetch
ManyToManyMappingDescriptorsHolder_FetchModeD=Enables outer-join or sequential select fetching for this association.
ManyToOneMappingDescriptorsHolder_FetchModeN=fetch
ManyToOneMappingDescriptorsHolder_FetchModeD=Enables outer-join or sequential select fetching for this association.
ManyToManyMappingDescriptorsHolder_ForeignKeyNameN=foreign-key
ManyToManyMappingDescriptorsHolder_ForeignKeyNameD=Foreign-key.
ManyToOneMappingDescriptorsHolder_AdvancedCategory=Advanced
SubclassMappingPropertyDescriptorsHolder_DatabaseTableNameN=Database table
SubclassMappingPropertyDescriptorsHolder_DatabaseTableNameD=The name of its database table.
SubclassMappingPropertyDescriptorsHolder_SuperclassNameN=Superclass
SubclassMappingPropertyDescriptorsHolder_SuperclassNameD=The name of the superclass.
SubclassMappingPropertyDescriptorsHolder_DiscriminatorValueN=Discriminator value
SubclassMappingPropertyDescriptorsHolder_DiscriminatorValueD=A value that distiguishes individual subclasses.
OneToManyMappingDescriptorsHolder_GeneralCategory=General
OneToManyMappingDescriptorsHolder_AdvancedCategory=Advanced
OneToManyMappingDescriptorsHolder_ReferencedEntityNameN=entity-name 
OneToManyMappingDescriptorsHolder_ReferencedEntityNameD=The entity name of the associated class, as an alternative to class.
OneToOneMappingDescriptorsHolder_ReferencedPropertyNameN=property-ref
OneToOneMappingDescriptorsHolder_ReferencedPropertyNameD=The name of a property of the associated class that is joined to this foreign key.
OneToOneMappingDescriptorsHolder_ReferencedEntityNameN=entity-name
OneToOneMappingDescriptorsHolder_ReferencedEntityNameD=The entity name of the associated class, as an alternative to class.
OneToManyMappingDescriptorsHolder_IgnoreNotFoundN=not-found
OneToManyMappingDescriptorsHolder_IgnoreNotFoundD=Specifies how foreign keys that reference missing rows will be handled: ignore will treat a missing row as a null association.
OneToOneMappingDescriptorsHolder_GeneralCategory=General
OneToOneMappingDescriptorsHolder_AdvancedCategory=Advanced
OneToOneMappingDescriptorsHolder_ForeignKeyNameN=foreign-key
OneToOneMappingDescriptorsHolder_ForeignKeyNameD=Foreign-key.
PropertyMappingForSimpleMapingDescriptorsHolder_GeneralCategory=General
PropertyMappingForManytoOneMapingDescriptorsHolder_UpdateableN=update
PropertyMappingForManytoOneMapingDescriptorsHolder_UpdateableD=Specifies that the mapped columns should be included in SQL UPDATE statements.
PropertyMappingForManytoOneMapingDescriptorsHolder_InsertableN=insert
PropertyMappingForManytoOneMapingDescriptorsHolder_InsertableD=Specifies that the mapped columns should be included in SQL INSERT statements.
PropertyMappingForComponentMapingDescriptorsHolder_UpdateableN=update
PropertyMappingForComponentMapingDescriptorsHolder_UpdateableD=Do the mapped columns appear in SQL UPDATEs?
PropertyMappingForComponentMapingDescriptorsHolder_InsertableN=insert
PropertyMappingForComponentMapingDescriptorsHolder_InsertableD=Do the mapped columns appear in SQL INSERTs?
PropertyMappingForSimpleMapingDescriptorsHolder_AdvancedCategory=Advanced
PropertyMappingForVersionDescriptorsHolder_PropertyAccessorNameN=access
PropertyMappingForVersionDescriptorsHolder_PropertyAccessorNameD=The strategy Hibernate should use for accessing the property value.
PropertyMappingForSimpleMapingDescriptorsHolder_NameN=name
PropertyMappingForSimpleMapingDescriptorsHolder_NameD=The name of the property.
PropertyMappingForSimpleMapingDescriptorsHolder_UpdateableN=update
PropertyMappingForSimpleMapingDescriptorsHolder_UpdateableD=Specifies that the mapped columns should be included in SQL UPDATE statements.
PropertyMappingForSimpleMapingDescriptorsHolder_InsertableN=insert
PropertyMappingForSimpleMapingDescriptorsHolder_InsertableD=Specifies that the mapped columns should be included in SQL INSERT statements.
PropertyMappingForManytoOneMapingDescriptorsHolder_ToOneLazyN=lazy
PropertyMappingForManytoOneMapingDescriptorsHolder_ToOneLazyD=By default, single point associations are proxied. lazy="true" specifies that the property should be fetched lazily when the instance variable is first accessed.
PropertyMappingForAnyMapingDescriptorsHolder_AdvancedCategory=Advanced
PropertyMappingForManytoOneMapingDescriptorsHolder_CascadeN=cascade
PropertyMappingForManytoOneMapingDescriptorsHolder_CascadeD=Specifies which operations should be cascaded from the parent object to the associated object.
PropertyMappingForManytoOneMapingDescriptorsHolder_NotNullN=not-null
PropertyMappingForManytoOneMapingDescriptorsHolder_NotNullD=Enable the DDL generation of a nullability constraint for the foreign key columns.
PropertyMappingForVersionDescriptorsHolder_AdvancedCategory=Advanced
PropertyMappingForOnetoOneMapingDescriptorsHolder_ToOneLazyN=lazy
PropertyMappingForOnetoOneMapingDescriptorsHolder_ToOneLazyD=By default, single point associations are proxied. lazy="true" specifies that the property should be fetched lazily when the instance variable is first accessed.
PropertyMappingForManytoOneMapingDescriptorsHolder_UniqueN=unique
PropertyMappingForManytoOneMapingDescriptorsHolder_UniqueD=Enable the DDL generation of a unique constraint for the foreign-key column.
PropertyMappingForComponentMapingDescriptorsHolder_UniqueN=unique
PropertyMappingForComponentMapingDescriptorsHolder_UniqueD=Specifies that a unique constraint exists upon all mapped columns of the component.
PropertyMappingForCollectionMapingDescriptorsHolder_CascadeN=cascade
PropertyMappingForCollectionMapingDescriptorsHolder_CascadeD=Enable operations to cascade to child entities.
PropertyMappingForAnyMapingDescriptorsHolder_GeneralCategory=General
PropertyMappingForOnetoOneMapingDescriptorsHolder_CascadeN=cascade
PropertyMappingForOnetoOneMapingDescriptorsHolder_CascadeD=Specifies which operations should be cascaded from the parent object to the associated object.
PropertyMappingForVersionDescriptorsHolder_GeneralCategory=General
PropertyMappingForSimpleMapingDescriptorsHolder_OptimisticLockedN=optimistic-lock
PropertyMappingForSimpleMapingDescriptorsHolder_OptimisticLockedD=Specifies that updates to this property do or do not require acquisition of the optimistic lock.
PropertyMappingForPrimitiveArrayDescriptorsHolder_GeneralCategory=General
PropertyMappingForOnetoOneMapingDescriptorsHolder_GeneralCategory=General
PropertyMappingForPrimitiveArrayDescriptorsHolder_AdvancedCategory=Advanced
PropertyMappingForManytoOneMapingDescriptorsHolder_GeneralCategory=General
PropertyMappingForComponentMapingDescriptorsHolder_GeneralCategory=General
PropertyMappingForOnetoOneMapingDescriptorsHolder_AdvancedCategory=Advanced
PropertyMappingForAnyMapingDescriptorsHolder_PropertyAccessorNameN=access
PropertyMappingForAnyMapingDescriptorsHolder_PropertyAccessorNameD=The strategy Hibernate should use for accessing the property value.
PropertyMappingForManytoOneMapingDescriptorsHolder_AdvancedCategory=Advanced
PropertyMappingForComponentMapingDescriptorsHolder_AdvancedCategory=Advanced
PropertyMappingForCollectionMapingDescriptorsHolder_GeneralCategory=General
PropertyMappingForSimpleMapingDescriptorsHolder_LazyN=lazy
PropertyMappingForSimpleMapingDescriptorsHolder_LazyD=Specifies that this property should be fetched lazily when the instance variable is first accessed.
PropertyMappingForAnyMapingDescriptorsHolder_CascadeN=cascade
PropertyMappingForAnyMapingDescriptorsHolder_CascadeD=The cascade style.
PropertyMappingForVersionDescriptorsHolder_NameN=name
PropertyMappingForVersionDescriptorsHolder_NameD=The name of a property of the persistent class.
PropertyMappingForAnyMapingDescriptorsHolder_NameN=name
PropertyMappingForAnyMapingDescriptorsHolder_NameD=The property name.
PropertyMappingForSimpleMapingDescriptorsHolder_PropertyAccessorNameN=access
PropertyMappingForSimpleMapingDescriptorsHolder_PropertyAccessorNameD=The strategy Hibernate should use for accessing the property value.
PropertyMappingForManytoOneMapingDescriptorsHolder_OptimisticLockedN=optimistic-lock
PropertyMappingForManytoOneMapingDescriptorsHolder_OptimisticLockedD=Specifies that updates to this property do or do not require acquisition of the optimistic lock.
PropertyMappingForComponentMapingDescriptorsHolder_OptimisticLockedN=optimistic-lock
PropertyMappingForComponentMapingDescriptorsHolder_OptimisticLockedD=Specifies that updates to this component do or do not require acquisition of the optimistic lock. In other words.
PropertyMappingForCollectionMapingDescriptorsHolder_AdvancedCategory=Advanced
PropertyMappingForPrimitiveArrayDescriptorsHolder_PropertyAccessorNameN=access
PropertyMappingForPrimitiveArrayDescriptorsHolder_PropertyAccessorNameD=The strategy Hibernate should use for accessing the property value.
PropertyMappingForOnetoOneMapingDescriptorsHolder_PropertyAccessorNameN=access
PropertyMappingForOnetoOneMapingDescriptorsHolder_PropertyAccessorNameD=The strategy Hibernate should use for accessing the property value.
PropertyMappingForManytoOneMapingDescriptorsHolder_PropertyAccessorNameN=access
PropertyMappingForManytoOneMapingDescriptorsHolder_PropertyAccessorNameD=The strategy Hibernate should use for accessing the property value.
PropertyMappingForComponentMapingDescriptorsHolder_PropertyAccessorNameN=access
PropertyMappingForComponentMapingDescriptorsHolder_PropertyAccessorNameD=The strategy Hibernate should use for accessing the property value.
PropertyMappingForCollectionMapingDescriptorsHolder_PropertyAccessorNameN=access
PropertyMappingForCollectionMapingDescriptorsHolder_PropertyAccessorNameD=The strategy Hibernate should use for accessing the property value.
PropertyMappingForSimpleMapingDescriptorsHolder_NotNullN=not-null
PropertyMappingForSimpleMapingDescriptorsHolder_NotNullD=Enable the DDL generation of a nullability constraint for the columns.
PropertyMappingForManytoOneMapingDescriptorsHolder_NameN=name
PropertyMappingForManytoOneMapingDescriptorsHolder_NameD=The name of the property.
PropertyMappingForComponentMapingDescriptorsHolder_NameN=name
PropertyMappingForComponentMapingDescriptorsHolder_NameD=The name of the property.
PropertyMappingForComponentMapingDescriptorsHolder_LazyN=lazy
PropertyMappingForComponentMapingDescriptorsHolder_LazyD=Specifies that this component should be fetched lazily when the instance variable is first accessed.
PropertyMappingForAnyMapingDescriptorsHolder_UpdateableN=update
PropertyMappingForAnyMapingDescriptorsHolder_UpdateableD=Specifies that the mapped columns should be included in SQL UPDATE statements.
PropertyMappingForAnyMapingDescriptorsHolder_InsertableN=insert
PropertyMappingForAnyMapingDescriptorsHolder_InsertableD=Specifies that the mapped columns should be included in SQL INSERT statements.
PropertyMappingForCollectionMapingDescriptorsHolder_NameN=name
PropertyMappingForCollectionMapingDescriptorsHolder_NameD=The collection property name.
PropertyMappingForSimpleMapingDescriptorsHolder_UniqueN=unique
PropertyMappingForSimpleMapingDescriptorsHolder_UniqueD=Enable the DDL generation of a unique constraint for the columns.
PropertyMappingForPrimitiveArrayDescriptorsHolder_NameN=name
PropertyMappingForPrimitiveArrayDescriptorsHolder_NameD=The name of the property.
PropertyMappingForOnetoOneMapingDescriptorsHolder_NameN=name
PropertyMappingForOnetoOneMapingDescriptorsHolder_NameD=The name of the property.
ClassMappingPropertyDescriptorsHolder_GeneralCategory=General
ClassMappingPropertyDescriptorsHolder_AdvancedlCategory=Advanced
ClassMappingPropertyDescriptorsHolder_NameN=Class name
ClassMappingPropertyDescriptorsHolder_NameD=The classname of a Hibernate Dialect - enables certain platform dependent features.
ClassMappingPropertyDescriptorsHolder_EntityNameN=Entity name
ClassMappingPropertyDescriptorsHolder_EntityNameD=Explicitly specify an entity name.
ClassMappingPropertyDescriptorsHolder_ProxyInterfaceNameN=Proxy interface
ClassMappingPropertyDescriptorsHolder_ProxyInterfaceNameD=Specifies an interface to use for lazy initializing proxies. You may specify the name of the class itself.
ClassMappingPropertyDescriptorsHolder_DynamicInsertN=Dynamic insert
ClassMappingPropertyDescriptorsHolder_DynamicInsertD=Specifies that INSERT SQL should be generated at runtime and contain only the columns whose values are not null.
ClassMappingPropertyDescriptorsHolder_DynamicUpdateN=Dynamic update
ClassMappingPropertyDescriptorsHolder_DynamicUpdateD=Specifies that UPDATE SQL should be generated at runtime and contain only those columns whose values have changed.
ClassMappingPropertyDescriptorsHolder_BatchSizeN=Batch size
ClassMappingPropertyDescriptorsHolder_BatchSizeD=Specify a "batch size" for fetching instances of this class by identifier.
ClassMappingPropertyDescriptorsHolder_SelectBeforeUpdateN=Select before update
ClassMappingPropertyDescriptorsHolder_SelectBeforeUpdateD=Specifies that Hibernate should never perform an SQL UPDATE unless it is certain that an object is actually modified.
ClassMappingPropertyDescriptorsHolder_LoaderNameN=Loader query name
ClassMappingPropertyDescriptorsHolder_LoaderNameD=This allows a named query to be attached to a class.
ClassMappingPropertyDescriptorsHolder_PersisterClassNameN=Persister class name
ClassMappingPropertyDescriptorsHolder_PersisterClassNameD=The fully qualified Java class name of the persistent class (or interface).
ClassMappingPropertyDescriptorsHolder_IsAbstractN=Abstract
ClassMappingPropertyDescriptorsHolder_IsAbstractD=Used to mark abstract superclasses in <union-subclass> hierarchies.
ClassMappingPropertyDescriptorsHolder_LazyN=Lazy
ClassMappingPropertyDescriptorsHolder_LazyD=Lazy fetching may be completely disabled by setting lazy="false".
ClassMappingPropertyDescriptorsHolder_SynchronizedTablesN=Synchronized tables
ClassMappingPropertyDescriptorsHolder_SynchronizedTablesD=Declare the tables to synchronize this entity with, ensuring that auto-flush happens correctly.
ArrayMappingDescriptorsHolderWithTable_GeneralCategory=General
ArrayMappingDescriptorsHolder_AdvancedCategory=Advanced
ArrayMappingDescriptorsHolder_IndexCategory=Index
ArrayMappingDescriptorsHolder_GeneralCategory=General
ArrayMappingDescriptorsHolder_ElementClassNameN=elementClassName
ArrayMappingDescriptorsHolder_ElementClassNameD=element-class
ArrayMappingDescriptorsHolder_BaseIndexN=base index
ArrayMappingDescriptorsHolder_BaseIndexD=The value of the index column.
ArrayMappingDescriptorsHolder_IndexMappingColumnN=column
ArrayMappingDescriptorsHolder_IndexMappingColumnD=The name of the column holding the collection index values.
ArrayMappingDescriptorsHolder_InverseN=inverse
ArrayMappingDescriptorsHolder_InverseD=Mark this collection as the "inverse" end of a bidirectional association.
ArrayMappingDescriptorsHolderWithTable_CollectionTableN=table
ArrayMappingDescriptorsHolderWithTable_CollectionTableD=The name of the database collection table.
ListMappingDescriptorsHolderWithTable_GeneralCategory=General
ListMappingDescriptorsHolder_IndexCategory=Index
ListMappingDescriptorsHolder_GeneralCategory=General
ListMappingDescriptorsHolder_AdvancedCategory=Advanced
ListMappingDescriptorsHolder_BaseIndexN=base index
ListMappingDescriptorsHolder_BaseIndexD=The value of the index column.
ListMappingDescriptorsHolder_IndexMappingColumnN=column
ListMappingDescriptorsHolder_IndexMappingColumnD=The name of the column holding the collection index values.
ListMappingDescriptorsHolder_InverseN=inverse
ListMappingDescriptorsHolder_InverseD=Mark this collection as the "inverse" end of a bidirectional association.
ListMappingDescriptorsHolder_LazyN=lazy
ListMappingDescriptorsHolder_LazyD=May be used to disable lazy fetching and specify that the association is always eagerly fetched.
ListMappingDescriptorsHolderWithTable_CollectionTableN=table
ListMappingDescriptorsHolderWithTable_CollectionTableD=The name of the database collection table.
VersionMappingDescriptorsHolder_NullValueN=unsaved-value
VersionMappingDescriptorsHolder_NullValueD=Indicates version value for newly instantiated instances.
HibernatePropertyDescriptorsHolder_GeneralCategory=General
HibernatePropertyDescriptorsHolder_DatasourceCategory=Datasource
HibernatePropertyDescriptorsHolder_JDBCParamsCategory=JDBC
HibernatePropertyDescriptorsHolder_TransactionsCategory=Transactions
HibernatePropertyDescriptorsHolder_TransactionManagerN=Transaction Manager
HibernatePropertyDescriptorsHolder_TransactionManagerD=Define Transaction Manager
HibernatePropertyDescriptorsHolder_TransactionInterceptorN=Transaction Interceptor
HibernatePropertyDescriptorsHolder_TransactionInterceptorD=Define Transaction Interceptor
HibernatePropertyDescriptorsHolder_TransactionAttributesN=Transaction Attributes
HibernatePropertyDescriptorsHolder_TransactionAttributesD=Define Transaction Attributes
HibernatePropertyDescriptorsHolder_JDBCConnectionCategory=JDBC connection
HibernatePropertyDescriptorsHolder_C3P0Category=C3P0 pool
HibernatePropertyDescriptorsHolder_ConnectionProviderCategory=Connection provider
HibernatePropertyDescriptorsHolder_CacheCategory=Cache
HibernatePropertyDescriptorsHolder_QueryCategory=Query
HibernatePropertyDescriptorsHolder_SpringCategory=Spring framework
HibernatePropertyDescriptorsHolder_MiscCategory=Misc
HibernatePropertyDescriptorsHolder_HibernateDialectN=dialect
HibernatePropertyDescriptorsHolder_HibernateDialectD=The classname of a Hibernate Dialect - enables certain platform dependent features.
HibernatePropertyDescriptorsHolder_HibernateDefaultSchemaN=Default schema
HibernatePropertyDescriptorsHolder_HibernateDefaultSchemaD=Qualify unqualified tablenames with the given schema/tablespace in generated SQL.
HibernatePropertyDescriptorsHolder_HibernateDefaultCatalogN=Default catalog
HibernatePropertyDescriptorsHolder_HibernateDefaultCatalogD=Qualify unqualified tablenames with the given catalog in generated SQL.
HibernatePropertyDescriptorsHolder_HibernateShowSqlN=Write SQL statements to console.
HibernatePropertyDescriptorsHolder_HibernateShowSqlD=Write all SQL statements to console
HibernatePropertyDescriptorsHolder_HibernateJdbcFetchSizeN=JDBC fetch size
HibernatePropertyDescriptorsHolder_HibernateJdbcFetchSizeD=A non-zero value determines the JDBC fetch size.
HibernatePropertyDescriptorsHolder_HibernateJdbcBatchSizeN=JDBC batch size
HibernatePropertyDescriptorsHolder_HibernateJdbcBatchSizeD=A non-zero value enables use of JDBC2 batch updates by Hibernate. E.g. recommended values between 5 and 30.
HibernatePropertyDescriptorsHolder_HibernateJdbcBatchVersionedDataN=Use batched DML
HibernatePropertyDescriptorsHolder_HibernateJdbcBatchVersionedDataD=Set this property to true if your JDBC driver returns correct row counts from executeBatch() (it is usually safe to turn this option on).
HibernatePropertyDescriptorsHolder_HibernateJdbcFactoryClassN=Custom batcher selection
HibernatePropertyDescriptorsHolder_HibernateJdbcFactoryClassD=Select a custom Batcher. Most applications will not need this configuration property.
HibernatePropertyDescriptorsHolder_HibernateJdbcUseScrollableResultsetN=JDBC2 scrollable resultsets usage
HibernatePropertyDescriptorsHolder_HibernateJdbcUseScrollableResultsetD=Enables use of JDBC2 scrollable resultsets by Hibernate. This property is only necessary when using user supplied JDBC connections, Hibernate uses connection metadata otherwise.
HibernatePropertyDescriptorsHolder_HibernateJdbcUseStreamsForBinaryN=Use streams for binary data
HibernatePropertyDescriptorsHolder_HibernateJdbcUseStreamsForBinaryD=Use streams when writing/reading binary or serializable types to/from JDBC.
HibernatePropertyDescriptorsHolder_HibernateJdbcUseGetGeneratedKeysN=JDBC3 PreparedStatement.getGeneratedKeys() usage
HibernatePropertyDescriptorsHolder_HibernateJdbcUseGetGeneratedKeysD=Enable use of JDBC3 PreparedStatement.getGeneratedKeys() to retrieve natively generated keys after insert. Requires JDBC3+ driver and JRE1.4+, set to false if your driver has problems with the Hibernate identifier generators. By default, tries to determine the driver capabilites using connection metadata.
HibernatePropertyDescriptorsHolder_HibernateSessionFactoryNameN=SessionFactory JNDI name
HibernatePropertyDescriptorsHolder_HibernateSessionFactoryNameD=The SessionFactory will be automatically bound to this name in JNDI after it has been created.
HibernatePropertyDescriptorsHolder_HibernateJndiUrlN=URL of the JNDI provider (optional)
HibernatePropertyDescriptorsHolder_HibernateJndiUrlD=Pass the property to the JNDI InitialContextFactory.
HibernatePropertyDescriptorsHolder_SpringDataSourceN=Data Source
HibernatePropertyDescriptorsHolder_SpringDataSourceD=Define Data Source
HibernatePropertyDescriptorsHolder_HibernateJndiClassN=Class of the JNDI InitialContextFactory (optional)
HibernatePropertyDescriptorsHolder_HibernateJndiClassD=Pass the property to the JNDI InitialContextFactory.
HibernatePropertyDescriptorsHolder_HibernateConnectionDatasourceN=Datasource JNDI name
HibernatePropertyDescriptorsHolder_HibernateConnectionDatasourceD=Datasource JNDI name.
HibernatePropertyDescriptorsHolder_HibernateTransactionFactoryClassN=Transaction factory class
HibernatePropertyDescriptorsHolder_HibernateTransactionFactoryClassD=The classname of a TransactionFactory to use with Hibernate Transaction API.
HibernatePropertyDescriptorsHolder_HibernateJtaUserTransactionN=JTATransactionFactory JNDI name
HibernatePropertyDescriptorsHolder_HibernateJtaUserTransactionD=A JNDI name used by JTATransactionFactory to obtain the JTA UserTransaction from the application server.
HibernatePropertyDescriptorsHolder_HibernateTransactionManagerLookupClassN=TransactionManagerLookup class
HibernatePropertyDescriptorsHolder_HibernateTransactionManagerLookupClassD=The classname of a TransactionManagerLookup - required when JVM-level caching is enabled or when using hilo generator in a JTA environment.
HibernatePropertyDescriptorsHolder_HibernateTransactionFlushBeforeCompletionN=Flush before completion
HibernatePropertyDescriptorsHolder_HibernateTransactionFlushBeforeCompletionD=If enabled, the session will be automatically flushed during the before completion phase of the transaction.
HibernatePropertyDescriptorsHolder_HibernateTransactionAutoCloseSessionN=Auto close session
HibernatePropertyDescriptorsHolder_HibernateTransactionAutoCloseSessionD=If enabled, the session will be automatically closed during the before completion phase of the transaction.
HibernatePropertyDescriptorsHolder_HibernateConnectionDriverClassN=JDBC driver
HibernatePropertyDescriptorsHolder_HibernateConnectionDriverClassD=The classname of JDBC driver.
HibernatePropertyDescriptorsHolder_HibernateConnectionUrlN=JDBC connection string
HibernatePropertyDescriptorsHolder_HibernateConnectionUrlD=Jdbc URL.
HibernatePropertyDescriptorsHolder_HibernateConnectionUsernameN=JDBC connection user
HibernatePropertyDescriptorsHolder_HibernateConnectionUsernameD=Database user.
HibernatePropertyDescriptorsHolder_HibernateConnectionPasswordN=JDBC connection password
HibernatePropertyDescriptorsHolder_HibernateConnectionPasswordD=Database user password.
HibernatePropertyDescriptorsHolder_HibernateConnectionIsolationN=Transaction isolation level
HibernatePropertyDescriptorsHolder_HibernateConnectionIsolationD=Set the JDBC transaction isolation level. Check java.sql.Connection for meaningful values but note that most databases do not support all isolation levels.
HibernatePropertyDescriptorsHolder_HibernateConnectionAutocommitN=Enables autocommit
HibernatePropertyDescriptorsHolder_HibernateConnectionAutocommitD=Enables autocommit for JDBC pooled connections.
HibernatePropertyDescriptorsHolder_HibernateConnectionReleaseModeN=Connection release mode
HibernatePropertyDescriptorsHolder_HibernateConnectionReleaseModeD=Specify when Hibernate should release JDBC connections.
HibernatePropertyDescriptorsHolder_HibernateConnectionPoolSizeN=JDBC connection pool size
HibernatePropertyDescriptorsHolder_HibernateConnectionPoolSizeD=Connection pool size.
HibernatePropertyDescriptorsHolder_HibernateC3p0MinSizeN=Minimum connections
HibernatePropertyDescriptorsHolder_HibernateC3p0MinSizeD=Initial number of JDBC connections.
HibernatePropertyDescriptorsHolder_HibernateC3p0MaxSizeN=Maximum connections
HibernatePropertyDescriptorsHolder_HibernateC3p0MaxSizeD=Maximum number of JDBC connections to open.
HibernatePropertyDescriptorsHolder_HibernateC3p0TimeoutN=Timeout period (seconds)
HibernatePropertyDescriptorsHolder_HibernateC3p0TimeoutD=Maximum idle time for a connection (in seconds).
HibernatePropertyDescriptorsHolder_HibernateC3p0MaxStatementsN=Max number of prepared statements
HibernatePropertyDescriptorsHolder_HibernateC3p0MaxStatementsD=Maximum size of c3p0 statement cache (0 to turn off).
HibernatePropertyDescriptorsHolder_HibernateC3p0IdleTestPeriodN=Connection validation period (seconds)
HibernatePropertyDescriptorsHolder_HibernateC3p0IdleTestPeriodD=Idle time before a c3p0 pooled connection is validated (in seconds).
HibernatePropertyDescriptorsHolder_HibernateConnectionProviderClassN=Custom connection provider
HibernatePropertyDescriptorsHolder_HibernateConnectionProviderClassD=The classname of a custom ConnectionProvider which provides JDBC connections to Hibernate.
HibernatePropertyDescriptorsHolder_HibernateCacheUseMinimalPutsN=Minimize writes
HibernatePropertyDescriptorsHolder_HibernateCacheUseMinimalPutsD=Optimize second-level cache operation to minimize writes, at the cost of more frequent reads. This setting is most useful for clustered caches and, in Hibernate3, is enabled by default for clustered cache implementations.
HibernatePropertyDescriptorsHolder_HibernateCacheUseQueryCacheN=Use query cache
HibernatePropertyDescriptorsHolder_HibernateCacheUseQueryCacheD=Enable the query cache, individual queries still have to be set cachable.
HibernatePropertyDescriptorsHolder_HibernateCacheQueryCacheFactoryN=Custom QueryCache interface
HibernatePropertyDescriptorsHolder_HibernateCacheQueryCacheFactoryD=The classname of a custom QueryCache interface, defaults to the built-in StandardQueryCache.
HibernatePropertyDescriptorsHolder_HibernateCacheRegionPrefixN=Second level cache names prefix
HibernatePropertyDescriptorsHolder_HibernateCacheRegionPrefixD=A prefix to use for second-level cache region names.
HibernatePropertyDescriptorsHolder_HibernateCacheProviderClassN=Provider class
HibernatePropertyDescriptorsHolder_HibernateCacheProviderClassD=The classname of a custom CacheProvider.
HibernatePropertyDescriptorsHolder_HibernateCacheUseSecondLevelCacheN=Use second level cache
HibernatePropertyDescriptorsHolder_HibernateCacheUseSecondLevelCacheD=May be used to completely disable the second level cache, which is enabled by default for classes which specify a <cache> mapping.
HibernatePropertyDescriptorsHolder_HibernateCacheUseStructuredEntriesN=Use structured entries
HibernatePropertyDescriptorsHolder_HibernateCacheUseStructuredEntriesD=Forces Hibernate to store data in the second-level cache in a more human-friendly format.
HibernatePropertyDescriptorsHolder_HibernateQuerySubstitutionsN=Query tokens mapping
HibernatePropertyDescriptorsHolder_HibernateQuerySubstitutionsD=Mapping from tokens in Hibernate queries to SQL tokens.
HibernatePropertyDescriptorsHolder_HibernateQueryFactoryClassN=HQL parser implementation
HibernatePropertyDescriptorsHolder_HibernateQueryFactoryClassD=Chooses the HQL parser implementation.
HibernatePropertyDescriptorsHolder_HibernateHbm2ddlAutoN=Export schema DDL to DB automatically
HibernatePropertyDescriptorsHolder_HibernateHbm2ddlAutoD=Automatically export schema DDL to the database when the SessionFactory is created. With create-drop, the database schema will be dropped when the SessionFactory is closed explicitly.
HibernatePropertyDescriptorsHolder_SpringSessionFactoryN=SessionFactory
HibernatePropertyDescriptorsHolder_SpringSessionFactoryD=Define SessionFactory
HibernatePropertyDescriptorsHolder_HibernateInterceptorN=Hibernate Interceptor
HibernatePropertyDescriptorsHolder_HibernateInterceptorD=Define Hibernate Interceptor
HibernatePropertyDescriptorsHolder_HibernateGenerateStatisticsN=Perfomance statistics collection
HibernatePropertyDescriptorsHolder_HibernateGenerateStatisticsD=Collect statistics useful for performance tuning.
HibernatePropertyDescriptorsHolder_HibernateUseIdentiferRollbackN=Reset identifier properties
HibernatePropertyDescriptorsHolder_HibernateUseIdentiferRollbackD=Reset identifier properties to default values when objects are deleted.
HibernatePropertyDescriptorsHolder_HibernateUseSqlCommentsN=Comments inside the SQL
HibernatePropertyDescriptorsHolder_HibernateUseSqlCommentsD=Generation of comments inside the SQL for easier debugging.
HibernatePropertyDescriptorsHolder_HibernateMaxFetchDepthN=Maximum fetch depth
HibernatePropertyDescriptorsHolder_HibernateMaxFetchDepthD=Set a maximum "depth" for the outer join fetch tree for single-ended associations (one-to-one, many-to-one). A 0 disables default outer join fetching.
HibernatePropertyDescriptorsHolder_HibernateCglibUseReflectionOptimizerN=Use CGLIB optimizer
HibernatePropertyDescriptorsHolder_HibernateCglibUseReflectionOptimizerD=Enables use of CGLIB instead of runtime reflection (System-level property). Reflection can sometimes be useful when troubleshooting, note that Hibernate always requires CGLIB even if you turn off the optimizer.
HibernatePropertyDescriptorsHolder_HibernateDefaultBatchFetchSizeN=Batch fetching size
HibernatePropertyDescriptorsHolder_HibernateDefaultBatchFetchSizeD=Set a default size for Hibernate batch fetching of associations.
HibernatePropertyDescriptorsHolder_HibernateDefaultEntityModeN=Mode for entity representation
HibernatePropertyDescriptorsHolder_HibernateDefaultEntityModeD=Set a default mode for entity representation for all sessions opened from this SessionFactory.
HibernatePropertyDescriptorsHolder_HibernateOrderUpdatesN=Order SQL updates
HibernatePropertyDescriptorsHolder_HibernateOrderUpdatesD=Force Hibernate to order SQL updates by the primary key value of the items being updates. This will result in fewer transaction deadlocks in highly concurrent systems.
UnionSubclassMappingPropertyDescriptorsHolder_DatabaseTableN=Table
UnionSubclassMappingPropertyDescriptorsHolder_DatabaseTableD=The name of the subclass table.
UnionSubclassMappingPropertyDescriptorsHolder_CheckN=Check
UnionSubclassMappingPropertyDescriptorsHolder_CheckD=A SQL expression used to generate a multi-row check constraint for automatic schema generation.
UnionSubclassMappingPropertyDescriptorsHolder_SubselectN=Subselect
UnionSubclassMappingPropertyDescriptorsHolder_SubselectD=Maps an immutable and read-only entity to a database subselect.
UnionSubclassMappingPropertyDescriptorsHolder_SuperclassNameN=Superclass
UnionSubclassMappingPropertyDescriptorsHolder_SuperclassNameD=The name of the superclass.
KeyPropertyDescriptorsHolder_AdvancedCategory=Key properties
KeyPropertyDescriptorsHolder_ForeignKeyNameN=foreign-key
KeyPropertyDescriptorsHolder_ForeignKeyNameD=Foreign-key.
KeyPropertyDescriptorsHolder_CascadeDeleteEnabledN=cascade delete
KeyPropertyDescriptorsHolder_CascadeDeleteEnabledD=Specifies whether the foreign key constraint has database-level cascade delete enabled.
KeyPropertyDescriptorsHolder_UpdateableN=update
KeyPropertyDescriptorsHolder_UpdateableD=Specifies that the foreign key should never be updated.
KeyPropertyDescriptorsHolder_NullableN=nullable
KeyPropertyDescriptorsHolder_NullableD=Specifies that the foreign key columns are not nullable.
ComponentMappingDescriptorsHolder_DynamicN=dynamic
ComponentMappingDescriptorsHolder_DynamicD=Use dynamic-component.
BagMappingDescriptorsHolder_AdvancedCategory=Advanced
BagMappingDescriptorsHolderWithTable_GeneralCategory=General
BagMappingDescriptorsHolderWithTable_CollectionTableN=table
BagMappingDescriptorsHolderWithTable_CollectionTableD=The name of the database collection table.
BagMappingDescriptorsHolder_GeneralCategory=General
BagMappingDescriptorsHolder_OrderByN=order-by
BagMappingDescriptorsHolder_OrderByD=Specify a table column (or columns) that define the iteration order, together with an optional asc or desc.
BagMappingDescriptorsHolder_InverseN=inverse
BagMappingDescriptorsHolder_InverseD=Mark this collection as the "inverse" end of a bidirectional association.
BagMappingDescriptorsHolder_LazyN=lazy
BagMappingDescriptorsHolder_LazyD=May be used to disable lazy fetching and specify that the association is always eagerly fetched.
OneToOneMappingDescriptorsHolder_FetchModeN=fetch
OneToOneMappingDescriptorsHolder_FetchModeD=Enables outer-join or sequential select fetching for this association.
OneToOneMappingDescriptorsHolder_FormulaN=formula
OneToOneMappingDescriptorsHolder_FormulaD=An SQL formula used to evaluate the element foreign key value.
OneToOneMappingDescriptorsHolder_ConstrainedN=constrained
OneToOneMappingDescriptorsHolder_ConstrainedD=Specifies that a foreign key constraint on the primary key of the mapped table references the table of the associated class.
ToOneMappingDescriptorsHolder_ToOneCategory=To One Mapping
ToOneMappingDescriptorsHolder_FetchModeN=fetchMode
ToOneMappingDescriptorsHolder_FetchModeD=Chooses between outer-join fetching or sequential select fetching.
ToOneMappingDescriptorsHolder_ReferencedPropertyNameN=referencedPropertyName
ToOneMappingDescriptorsHolder_ReferencedPropertyNameD=The name of a property of the associated class that is joined to this foreign key.
ToOneMappingDescriptorsHolder_ReferencedEntityNameN=referencedEntityName
ToOneMappingDescriptorsHolder_ReferencedEntityNameD=The entity name of the associated class.
JoinMapingDescriptorsHolder_GeneralCategory=General
JoinMapingDescriptorsHolder_NameN=name
JoinMapingDescriptorsHolder_NameD=The name of the join.
JoinMapingDescriptorsHolder_InverseN=inverse
JoinMapingDescriptorsHolder_InverseD=If enabled, Hibernate will not try to insert or update the properties defined by this join.
JoinMapingDescriptorsHolder_OptionalN=optional
JoinMapingDescriptorsHolder_OptionalD=If enabled, Hibernate will insert a row only if the properties defined by this join are non-null and will always use an outer join to retrieve the properties.
JoinMapingDescriptorsHolder_TableNameN=tablename
JoinMapingDescriptorsHolder_TableNameD=The name of the joined table.
JoinedSubclassMappingPropertyDescriptorsHolder_DatabaseTableN=Table
JoinedSubclassMappingPropertyDescriptorsHolder_DatabaseTableD=The name of the subclass table.
JoinedSubclassMappingPropertyDescriptorsHolder_SuperclassNameN=Superclass
JoinedSubclassMappingPropertyDescriptorsHolder_SuperclassNameD=The name of the superclass.
JoinedSubclassMappingPropertyDescriptorsHolder_KeyColumnN=KeyColumn
JoinedSubclassMappingPropertyDescriptorsHolder_KeyColumnD=The name of the foreign key column.
JoinedSubclassMappingPropertyDescriptorsHolder_CheckN=Check
JoinedSubclassMappingPropertyDescriptorsHolder_CheckD=A SQL expression used to generate a multi-row check constraint for automatic schema generation.
JoinedSubclassMappingPropertyDescriptorsHolder_SubselectN=Subselect
JoinedSubclassMappingPropertyDescriptorsHolder_SubselectD=Maps an immutable and read-only entity to a database subselect.
RootClassMappingPropertyDescriptorsHolder_DatabaseTableByNameN=Table
RootClassMappingPropertyDescriptorsHolder_DatabaseTableByNameD=The name of its database table.
RootClassMappingPropertyDescriptorsHolder_MutableN=Mutable
RootClassMappingPropertyDescriptorsHolder_MutableD=Specifies that instances of the class are (not) mutable.
RootClassMappingPropertyDescriptorsHolder_ExplicitPolymorphismN=Explicit polymorphism
RootClassMappingPropertyDescriptorsHolder_ExplicitPolymorphismD=Determines whether implicit or explicit query polymorphism is used.
RootClassMappingPropertyDescriptorsHolder_WhereN=Where
RootClassMappingPropertyDescriptorsHolder_WhereD=Specify an arbitrary SQL WHERE condition to be used when retrieving objects of this class.
RootClassMappingPropertyDescriptorsHolder_DiscriminatorValueN=Discriminator value
RootClassMappingPropertyDescriptorsHolder_DiscriminatorValueD=A value that distiguishes individual subclasses, used for polymorphic behaviour.
RootClassMappingPropertyDescriptorsHolder_OptimisticLockModeN=Optimistic lock
RootClassMappingPropertyDescriptorsHolder_OptimisticLockModeD=Determines the optimistic locking strategy.
RootClassMappingPropertyDescriptorsHolder_CheckN=Check
RootClassMappingPropertyDescriptorsHolder_CheckD=A SQL expression used to generate a multi-row check constraint for automatic schema generation.
RootClassMappingPropertyDescriptorsHolder_RowIdN=Row id
RootClassMappingPropertyDescriptorsHolder_RowIdD=Hibernate can use so called ROWIDs on databases which support.
RootClassMappingPropertyDescriptorsHolder_SubselectN=Subselect
RootClassMappingPropertyDescriptorsHolder_SubselectD=Maps an immutable and read-only entity to a database subselect.
