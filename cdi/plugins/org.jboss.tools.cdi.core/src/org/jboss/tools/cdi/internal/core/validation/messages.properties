testKey=Test Key

STEREOTYPE_DECLARES_NON_EMPTY_NAME=Stereotype declares a non-empty @Named annotation
RESOURCE_PRODUCER_FIELD_SETS_EL_NAME=Producer field declaration of Java EE resource specifies an EL name
PARAM_INJECTION_DECLARES_EMPTY_NAME=Injection point other than injected field declares a @Named annotation that does not specify the value member
INTERCEPTOR_HAS_NAME=Interceptor has a name
DECORATOR_HAS_NAME=Decorator has a name

ILLEGAL_TYPE_IN_TYPED_DECLARATION=Bean class or producer method or field specifies a @Typed annotation, and the value member specifies a class which does not correspond to a type in the unrestricted set of bean types of a bean
PRODUCER_METHOD_RETURN_TYPE_HAS_WILDCARD=Producer method return type contains a wildcard type parameter
PRODUCER_METHOD_RETURN_TYPE_IS_VARIABLE=Producer method return type is a type variable
PRODUCER_FIELD_TYPE_HAS_WILDCARD=Producer field type contains a wildcard type parameter
PRODUCER_FIELD_TYPE_IS_VARIABLE=Producer field type is a type variable
PRODUCER_FIELD_TYPE_DOES_NOT_MATCH_JAVA_EE_OBJECT=Matching object in the Java EE component environment is not of the same type as the producer field declaration
INJECTION_TYPE_IS_VARIABLE=Injection point type is a type variable
STEREOTYPE_IS_ANNOTATED_TYPED=Stereotype is annotated @Typed
MISSING_NONBINDING_IN_QUALIFIER_TYPE_MEMBER=Array-valued or annotation-valued member of a qualifier type is not annotated @Nonbinding
MISSING_NONBINDING_IN_INTERCEPTOR_BINDING_TYPE_MEMBER=Array-valued or annotation-valued member of an interceptor binding type is not annotated @Nonbinding

MULTIPLE_SCOPE_TYPE_ANNOTATIONS=Bean class or producer method or field specifies multiple scope type annotations
MISSING_SCOPE_WHEN_THERE_IS_NO_DEFAULT_SCOPE=Bean does not explicitly declare a scope when there is no default scope
STEREOTYPE_DECLARES_MORE_THAN_ONE_SCOPE=Stereotype declares more than one scope
ILLEGAL_SCOPE_FOR_MANAGED_BEAN=Managed bean with a public field or a parameterized bean class declares any scope other than @Dependent
ILLEGAL_SCOPE_FOR_SESSION_BEAN=Session bean specifies an illegal scope (a stateless session bean must belong to the @Dependent pseudo-scope; a singleton bean must belong to either the @ApplicationScoped scope or to the @Dependent pseudo-scope, a stateful session bean may have any scope)
ILLEGAL_SCOPE_FOR_PRODUCER_METHOD=Producer method with a parameterized return type with a type variable declares any scope other than @Dependent
ILLEGAL_SCOPE_FOR_PRODUCER_FIELD=Producer field with a parameterized type with a type variable declares any scope other than @Dependent
ILLEGAL_SCOPE_WHEN_TYPE_INJECTIONPOINT_IS_INJECTED=Bean that declares any scope other than @Dependent has an injection point of type InjectionPoint and qualifier @Default
ILLEGAL_SCOPE_FOR_INTERCEPTOR=Interceptor has any scope other than @Dependent
ILLEGAL_SCOPE_FOR_DECORATOR=Decorator has any scope other than @Dependent

PRODUCER_ANNOTATED_INJECT=Producer method or field is annotated @Inject
PRODUCER_PARAMETER_ILLEGALLY_ANNOTATED=Producer method has a parameter annotated @Disposes or @Observes
OBSERVER_ANNOTATED_INJECT=Observer method is annotated @Inject
OBSERVER_PARAMETER_ILLEGALLY_ANNOTATED=observer method has a parameter annotated @Disposes
ILLEGAL_PRODUCER_METHOD_IN_SESSION_BEAN=Non-static method of a session bean class is annotated @Produces, and the method is not a business method of the session bean
MULTIPLE_DISPOSING_PARAMETERS=Method has more than one parameter annotated @Disposes
DISPOSER_ANNOTATED_INJECT=Disposer method is annotated @Inject
ILLEGAL_DISPOSER_IN_SESSION_BEAN=Non-static method of a session bean class has a parameter annotated @Disposes, and the method is not a business method of the session bean
NO_PRODUCER_MATCHING_DISPOSER=There is no producer method declared by the (same) bean class that is assignable to the disposed parameter of a disposer method
MULTIPLE_DISPOSERS_FOR_PRODUCER=There are multiple disposer methods for a single producer method
ILLEGAL_PRODUCER_FIELD_IN_SESSION_BEAN=Non-static field of a session bean class is annotated @Produces
MULTIPLE_INJECTION_CONSTRUCTORS=Bean class has more than one constructor annotated @Inject
CONSTRUCTOR_PARAMETER_ILLEGALLY_ANNOTATED=Bean constructor has a parameter annotated @Disposes, or @Observes
GENERIC_METHOD_ANNOTATED_INJECT=Generic method of a bean is annotated @Inject
MULTIPLE_OBSERVING_PARAMETERS=Method has more than one parameter annotated @Observes
ILLEGAL_OBSERVER_IN_SESSION_BEAN=Non-static method of a session bean class has a parameter annotated @Observes, and the method is not a business method of the EJB
ILLEGAL_CONDITIONAL_OBSERVER=Bean with scope @Dependent has an observer method declared receive=IF_EXISTS

BOTH_INTERCEPTOR_AND_DECORATOR=the bean class of a managed bean is annotated with both the @Interceptor and @Decorator stereotypes
SESSION_BEAN_ANNOTATED_INTERCEPTOR_OR_DECORATOR=Bean class of a session bean is annotated @Interceptor or @Decorator
PRODUCER_IN_INTERCEPTOR_OR_DECORATOR=Interceptor or decorator has a member annotated @Produces
DISPOSER_IN_INTERCEPTOR_OR_DECORATOR=Interceptor or decorator has a method annotated @Disposes
MULTIPLE_DELEGATE=Decorator has more than one delegate injection point
MISSING_DELEGATE=Decorator does not have a delegate injection point
ILLEGAL_INJECTION_POINT_DELEGATE=Injection point that is not an injected field, initializer method parameter or bean constructor method parameter is annotated @Delegate
ILLEGAL_BEAN_DECLARING_DELEGATE=Bean class that is not a decorator has an injection point annotated @Delegate
DELEGATE_HAS_ILLEGAL_TYPE=Delegate type does not implement or extend a decorated type of the decorator, or specifies different type parameters
ILLEGAL_LIFECYCLE_CALLBACK_INTERCEPTOR_BINDING=Interceptor for lifecycle callbacks declares an interceptor binding type that is defined @Target({TYPE, METHOD})
ILLEGAL_INTERCEPTOR_BINDING_METHOD=Non-static, non-private, final method of a managed bean has a interceptor binding (either method level, or declaring class level)
CONFLICTING_INTERCEPTOR_BINDINGS=The set of interceptor bindings of a bean or interceptor, including bindings inherited from stereotypes and other interceptor bindings, has two instances of a certain interceptor binding type and the instances have different values of some annotation member
OBSERVER_IN_INTERCEPTOR_OR_DECORATOR=Interceptor or decorator has a method with a parameter annotated @Observes
INTERCEPTOR_OR_DECORATOR_IS_ALTERNATIVE=Interceptor or decorator is an alternative
MISSING_INTERCEPTOR_BINDING=Interceptor declared using @Interceptor does not declare any interceptor binding

ILLEGAL_SPECIALIZING_MANAGED_BEAN=Managed bean class annotated @Specializes does not directly extend the bean class of another managed bean
ILLEGAL_SPECIALIZING_SESSION_BEAN=Session bean class annotated @Specializes does not directly extend the bean class of another session bean
ILLEGAL_SPECIALIZING_PRODUCER=Method annotated @Specializes is static or does not directly override another producer method
MISSING_TYPE_IN_SPECIALIZING_BEAN=Bean X specializes Y but does not have some bean type of Y
CONFLICTING_NAME_IN_SPECIALIZING_BEAN=Bean X specializes Y and Y has a name and X declares a name explicitly, using @Named
INTERCEPTOR_ANNOTATED_SPECIALIZES=Interceptor is annotated @Specializes
DECORATOR_ANNOTATED_SPECIALIZES=Decorator is annotated @Specializes

ILLEGAL_INJECTING_USERTRANSACTION_TYPE=Java EE component class has an injection point of type UserTransaction and qualifier @Default, and may not validly make use of the JTA UserTransaction according to the Java EE platform specification
ILLEGAL_INJECTING_INJECTIONPOINT_TYPE=Java EE component class supporting injection that is not a bean has an injection point of type InjectionPoint and qualifier @Default
ILLEGAL_QUALIFIER_IN_STEREOTYPE=Stereotype declares any qualifier annotation other than @Named
