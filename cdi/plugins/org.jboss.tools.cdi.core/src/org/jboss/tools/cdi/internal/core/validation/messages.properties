testKey=Test Key

STEREOTYPE_DECLARES_NON_EMPTY_NAME=Stereotype declares a non-empty @Named annotation
RESOURCE_PRODUCER_FIELD_SETS_EL_NAME=Producer field declaration of Java EE resource specifies an EL name
PARAM_INJECTION_DECLARES_EMPTY_NAME=Injection point other than injected field declares a @Named annotation that does not specify the value member
INTERCEPTOR_HAS_NAME=Interceptor has a name
DECORATOR_HAS_NAME=Decorator has a name

UNSATISFIED_INJECTION_POINTS=No bean is eligible for injection to the injection point
AMBIGUOUS_INJECTION_POINTS=Multiple beans are eligible for injection to the injection point
ILLEGAL_TYPE_IN_TYPED_DECLARATION=Bean class or producer method or field specifies a @Typed annotation, and the value member specifies a class which does not correspond to a type in the unrestricted set of bean types of a bean
ILLEGAL_TYPE_IN_TYPED_DECLARATION_IN_BEAN_CLASS=Bean class specifies a @Typed annotation, and the value member specifies a class which does not correspond to a type in the unrestricted set of bean types of a bean
ILLEGAL_TYPE_IN_TYPED_DECLARATION_IN_PRODUCER_METHOD=Producer method specifies a @Typed annotation, and the value member specifies a class which does not correspond to a type in the unrestricted set of bean types of a bean
ILLEGAL_TYPE_IN_TYPED_DECLARATION_IN_PRODUCER_FIELD=Producer field specifies a @Typed annotation, and the value member specifies a class which does not correspond to a type in the unrestricted set of bean types of a bean
PRODUCER_METHOD_RETURN_TYPE_HAS_WILDCARD=Producer method return type contains a wildcard type parameter
PRODUCER_METHOD_RETURN_TYPE_IS_VARIABLE=Producer method return type is a type variable
PRODUCER_FIELD_TYPE_HAS_WILDCARD=Producer field type contains a wildcard type parameter
PRODUCER_FIELD_TYPE_IS_VARIABLE=Producer field type is a type variable
PRODUCER_FIELD_TYPE_DOES_NOT_MATCH_JAVA_EE_OBJECT=Matching object in the Java EE component environment is not of the same type as the producer field declaration
INJECTION_TYPE_IS_VARIABLE=Injection point type is a type variable
INJECT_RESOLVES_TO_NULLABLE_BEAN=Injection point of primitive type resolves to the bean that may have a null value
STEREOTYPE_IS_ANNOTATED_TYPED=Stereotype is annotated @Typed
MISSING_NONBINDING_FOR_ANNOTATION_VALUE_IN_QUALIFIER_TYPE_MEMBER=Annotation-valued member of a qualifier type should be annotated @Nonbinding [JSR-299 §5.2.5]
MISSING_NONBINDING_FOR_ARRAY_VALUE_IN_QUALIFIER_TYPE_MEMBER=Array-valued member of a qualifier type should be annotated @Nonbinding [JSR-299 §5.2.5]
MISSING_NONBINDING_FOR_ANNOTATION_VALUE_IN_INTERCEPTOR_BINDING_TYPE_MEMBER=Annotation-valued member of an interceptor binding type should be annotated @Nonbinding [JSR-299 §9.5.2]
MISSING_NONBINDING_FOR_ARRAY_VALUE_IN_INTERCEPTOR_BINDING_TYPE_MEMBER=Array-valued member of an interceptor binding type should be annotated @Nonbinding [JSR-299 §9.5.2]
MISSING_TARGET_ANNOTATION_IN_QUALIFIER_TYPE=Qualifier annotation type should be annotated with @Target('{'METHOD, FIELD, PARAMETER, TYPE'}')
MISSING_RETENTION_ANNOTATION_IN_QUALIFIER_TYPE=Qualifier annotation type should be annotated with @Retention(RUNTIME)

MULTIPLE_SCOPE_TYPE_ANNOTATIONS=Bean class or producer method or field specifies multiple scope type annotations
MULTIPLE_SCOPE_TYPE_ANNOTATIONS_IN_BEAN_CLASS=Bean class specifies multiple scope type annotations
MULTIPLE_SCOPE_TYPE_ANNOTATIONS_IN_PRODUCER_METHOD=Producer method specifies multiple scope type annotations
MULTIPLE_SCOPE_TYPE_ANNOTATIONS_IN_PRODUCER_FIELD=Producer field specifies multiple scope type annotations
MISSING_SCOPE_WHEN_THERE_IS_NO_DEFAULT_SCOPE=Bean does not explicitly declare a scope when there is no default scope
STEREOTYPE_DECLARES_MORE_THAN_ONE_SCOPE=Stereotype declares more than one scope
ILLEGAL_SCOPE_FOR_MANAGED_BEAN_WITH_PUBLIC_FIELD=Managed bean with a public field declares any scope other than @Dependent
ILLEGAL_SCOPE_FOR_MANAGED_BEAN_WITH_GENERIC_TYPE=Managed bean with a parameterized bean class declares any scope other than @Dependent
ILLEGAL_SCOPE_FOR_SESSION_BEAN_WITH_GENERIC_TYPE=Session bean with a parameterized bean class declares any scope other than @Dependent
ILLEGAL_SCOPE_FOR_STATELESS_SESSION_BEAN=Session bean specifies an illegal scope. A stateless session bean must belong to the @Dependent pseudo-scope.
ILLEGAL_SCOPE_FOR_SINGLETON_SESSION_BEAN=Session bean specifies an illegal scope. A singleton bean must belong to either the @ApplicationScoped scope or to the @Dependent pseudo-scope.
ILLEGAL_SCOPE_FOR_PRODUCER_METHOD=Producer method with a parameterized return type with a type variable declares any scope other than @Dependent
ILLEGAL_SCOPE_FOR_PRODUCER_FIELD=Producer field with a parameterized type with a type variable declares any scope other than @Dependent
ILLEGAL_SCOPE_WHEN_TYPE_INJECTIONPOINT_IS_INJECTED=Bean that declares any scope other than @Dependent has an injection point of type InjectionPoint and qualifier @Default
ILLEGAL_SCOPE_FOR_INTERCEPTOR=Interceptor has any scope other than @Dependent
ILLEGAL_SCOPE_FOR_DECORATOR=Decorator has any scope other than @Dependent

PRODUCER_ANNOTATED_INJECT=Producer method or field is annotated @Inject
PRODUCER_PARAMETER_ILLEGALLY_ANNOTATED_DISPOSES=Producer method has a parameter annotated @Disposes
PRODUCER_PARAMETER_ILLEGALLY_ANNOTATED_OBSERVES=Producer method has a parameter annotated @Observes
OBSERVER_ANNOTATED_INJECT=Observer method is annotated @Inject
OBSERVER_PARAMETER_ILLEGALLY_ANNOTATED=Observer method has a parameter annotated @Disposes
ILLEGAL_PRODUCER_METHOD_IN_SESSION_BEAN=Non-static method of a session bean class is annotated @Produces, and the method is not a business method of the session bean
MULTIPLE_DISPOSING_PARAMETERS=Method has more than one parameter annotated @Disposes
DISPOSER_ANNOTATED_INJECT=Disposer method is annotated @Inject
ILLEGAL_DISPOSER_IN_SESSION_BEAN=Non-static method of a session bean class has a parameter annotated @Disposes, and the method is not a business method of the session bean
NO_PRODUCER_MATCHING_DISPOSER=There is no producer method declared by the (same) bean class that is assignable to the disposed parameter of a disposer method
MULTIPLE_DISPOSERS_FOR_PRODUCER=There are multiple disposer methods for a single producer method
ILLEGAL_PRODUCER_FIELD_IN_SESSION_BEAN=Non-static field of a session bean class is annotated @Produces
MULTIPLE_INJECTION_CONSTRUCTORS=Bean class has more than one constructor annotated @Inject
CONSTRUCTOR_PARAMETER_ANNOTATED_DISPOSES=Bean constructor has a parameter annotated @Disposes
CONSTRUCTOR_PARAMETER_ANNOTATED_OBSERVES=Bean constructor has a parameter annotated @Observes
GENERIC_METHOD_ANNOTATED_INJECT=Generic method of a bean is annotated @Inject
STATIC_METHOD_ANNOTATED_INJECT=Static method of a bean is annotated @Inject
MULTIPLE_OBSERVING_PARAMETERS=Method has more than one parameter annotated @Observes
ILLEGAL_OBSERVER_IN_SESSION_BEAN=Non-static method of a session bean class has a parameter annotated @Observes, and the method is not a business method of the EJB
ILLEGAL_CONDITIONAL_OBSERVER=Beans with scope @Dependent may not have conditional observer methods [JSR-299 §10.4.3]

BOTH_INTERCEPTOR_AND_DECORATOR=The bean class of a managed bean is annotated with both the @Interceptor and @Decorator stereotypes
SESSION_BEAN_ANNOTATED_INTERCEPTOR=Bean class of a session bean is annotated @Interceptor
SESSION_BEAN_ANNOTATED_DECORATOR=Bean class of a session bean is annotated @Decorator
PRODUCER_IN_INTERCEPTOR=Producer cannot be declared in an interceptor
PRODUCER_IN_DECORATOR=Producer cannot be declared in a decorator
DISPOSER_IN_INTERCEPTOR=Interceptor has a method annotated @Disposes
DISPOSER_IN_DECORATOR=Decorator has a method annotated @Disposes
MULTIPLE_DELEGATE=Decorator cannot have more than one delegate injection point [JSR-299 §8.1.2]
MISSING_DELEGATE=Decorator must have a delegate injection point [JSR-299 §8.1.2]
ILLEGAL_INJECTION_POINT_DELEGATE=Injection point that is a producer method parameter cannot be annotated @Delegate [JSR-299 §8.1.2]
ILLEGAL_BEAN_DECLARING_DELEGATE=Bean class that is not a decorator cannot have an injection point annotated @Delegate [JSR-299 §8.1.2]
DELEGATE_HAS_ILLEGAL_TYPE=The delegate type must implement or extend the decorated type {0} [JSR-299 §8.1.3]
ILLEGAL_LIFECYCLE_CALLBACK_INTERCEPTOR_BINDING=Interceptor for lifecycle callbacks may only declare interceptor binding types that are defined as @Target(TYPE) [JSR-299 §9.2] 
ILLEGAL_INTERCEPTOR_BINDING_CLASS=The bean class of a managed bean that declares an interceptor binding must not be declared final [JSR-299 §9.3]
ILLEGAL_INTERCEPTOR_BINDING_METHOD=A non-static, non-private method of a bean class of a managed bean that declares an interceptor binding must not be declared final [JSR-299 §9.3]
CONFLICTING_INTERCEPTOR_BINDINGS=The set of interceptor bindings of a bean or interceptor, including bindings inherited from stereotypes and other interceptor bindings, has two instances of a certain interceptor binding type and the instances have different values of some annotation member [JSR-299 §9.5.2]
OBSERVER_IN_DECORATOR=Interceptor cannot have a method with a parameter annotated @Observes [JSR-299 §10.4.2]
OBSERVER_IN_INTERCEPTOR=Decorator cannot have a method with a parameter annotated @Observes [JSR-299 §10.4.2]
INTERCEPTOR_IS_ALTERNATIVE=Interceptor is an alternative
DECORATOR_IS_ALTERNATIVE=Decorator is an alternative
MISSING_INTERCEPTOR_BINDING=Interceptor declared using @Interceptor should specify at least one interceptor binding [JSR-299 §9.2]
INJECTED_DECORATOR=Injection point resolves to a decorator
INJECTED_INTERCEPTOR=Injection point resolves to an interceptor

ILLEGAL_SPECIALIZING_MANAGED_BEAN=Managed bean class annotated @Specializes does not directly extend the bean class of another managed bean
ILLEGAL_SPECIALIZING_SESSION_BEAN=Session bean class annotated @Specializes does not directly extend the bean class of another session bean
ILLEGAL_SPECIALIZING_PRODUCER_STATIC=Producer method annotated @Specializes is static
ILLEGAL_SPECIALIZING_PRODUCER_OVERRIDE=Producer method annotated @Specializes does not directly override another producer method
MISSING_TYPE_IN_SPECIALIZING_BEAN=Bean {0} specializes {1} but does not have {2} bean type of {1}
CONFLICTING_NAME_IN_SPECIALIZING_BEAN=Bean {0} specializes {1} and {1} has a name and {0} declares a name explicitly, using @Named
INTERCEPTOR_ANNOTATED_SPECIALIZES=Interceptor is annotated @Specializes
DECORATOR_ANNOTATED_SPECIALIZES=Decorator is annotated @Specializes

ILLEGAL_INJECTING_USERTRANSACTION_TYPE=Java EE component class has an injection point of type UserTransaction and qualifier @Default, and may not validly make use of the JTA UserTransaction according to the Java EE platform specification
ILLEGAL_INJECTING_INJECTIONPOINT_TYPE=Java EE component class supporting injection that is not a bean has an injection point of type InjectionPoint and qualifier @Default
ILLEGAL_QUALIFIER_IN_STEREOTYPE=Stereotypes cannot declare qualifier annotations (except @Named)

#Messages for Progress Monitor
SEARCHING_RESOURCES=project "{0}"; searching resources for validation (CDI Validator).
VALIDATING_RESOURCE=project "{0}"; resource "{1}" (CDI Validator)
VALIDATING_PROJECT=project "{0}" (CDI Validator)