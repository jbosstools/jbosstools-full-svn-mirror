<?xml version="1.0" encoding="UTF-8"?>
<Schema rootElement="tiles-definitions"
  uri="-//Apache Software Foundation//DTD Tiles Configuration 1.1//EN" url="http://jakarta.apache.org/struts/dtds/tiles-config_1_1.dtd">
  <ElementType endTag="required" name="component-definitions" startTag="required">
    <description> deprecated: use tiles-definitions instead.</description>
    <element type="definition"/>
  </ElementType>
  <ElementType endTag="required" name="tiles-definitions" startTag="required">
    <description> The &quot;tiles-definitions&quot; element is the root
      of the configuration file hierarchy, and contains nested
      elements for all of the other configuration settings. </description>
    <element type="definition"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="definition" startTag="required">
    <description> The &quot;definition&quot; element describes a
      definition that can be inserted in a jsp page. This
      definition is identified by its logical name. A definition allows
      to define all the attributes that can be set in &lt;insert&gt; tag
      from a jsp page.      <!-- controllerClass The fully qualified Java
      class name of the controller                      subclass to call
      immediately before the tiles is inserted.
      Only one of controllerClass or controllerUrl should be
      specified.       controllerUrl   The context-relative path to the
      resource used as controller                      called
      immediately before the tiles is inserted.
      Only one of controllerClass or controllerUrl should be
      specified.       extends         Name of a definition that is used
      as ancestor of this definition.                      All
      attributes from the ancestor are available to the new
      definition. Any attribute inherited from the ancestor can
      be overloaded by providing a new value.       name            The
      unique identifier for this definition.       page            Same
      as path.       path            The context-relative path to the
      resource used as tiles to                      insert. This tiles
      will be inserted and a tiles context
      containing appropriate attributes will be available.       role
      Security role name that is allowed access to this definition
      object. The definition is inserted only if the role name is
      allowed.       template        Same as path. For compatibility
      with the template tag library. --></description>
    <AttributeType default="" name="name" required="true"/>
    <attribute default="" required="true" type="name"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <AttributeType default="" name="extends" required="false"/>
    <attribute default="" required="false" type="extends"/>
    <AttributeType default="" name="role" required="false"/>
    <attribute default="" required="false" type="role"/>
    <AttributeType default="" name="controllerUrl" required="false"/>
    <attribute default="" required="false" type="controllerUrl"/>
    <AttributeType default="" name="controllerClass" required="false"/>
    <attribute default="" required="false" type="controllerClass"/>
    <AttributeType default="" name="page" required="false"/>
    <attribute default="" required="false" type="page"/>
    <AttributeType default="" name="template" required="false"/>
    <attribute default="" required="false" type="template"/>
    <AttributeType default="" name="path" required="false"/>
    <attribute default="" required="false" type="path"/>
    <element type="icon"/>
    <element type="display-name"/>
    <element type="description"/>
    <element type="put"/>
    <element type="putList"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="put" startTag="required">
    <description> The &quot;put&quot; element describes an attribute of
      a definition. It allows to specify the tiles attribute name
      and its value. The tiles value can be specified as an xml
      attribute, or in the body of the &lt;put&gt; tag.   <!--    content
      Same as value. For compatibility with the template tag library.
      direct          Same as type=&quot;string&quot;. For compatibility
      with the template                      tag library.       name
      The unique identifier for this put.       type            The type
      of the value. Can be: string, page, template or definition.
      By default, no type is associated to a value. If a type is
      associated, it will be used as a hint to process the value
      when the attribute will be used in the inserted tiles.       value
      The value associated to this tiles attribute. The value should
      be specified with this tag attribute, or in the body of the tag. --></description>
    <AttributeType default="" name="name" required="true"/>
    <attribute default="" required="true" type="name"/>
    <AttributeType default="" name="type" required="false"
      type="enumeration" values="string,page,template,definition"/>
    <attribute default="" required="false" type="type"/>
    <AttributeType default="" name="content" required="false"/>
    <attribute default="" required="false" type="content"/>
    <AttributeType default="" name="value" required="false"/>
    <attribute default="" required="false" type="value"/>
    <AttributeType default="" name="direct" required="false"
      type="enumeration" values="true,false"/>
    <attribute default="" required="false" type="direct"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="putList" startTag="required">
    <description> The &quot;putList&quot; element describes a list
      attribute of a definition. It allows to specify an attribute
      that is a java List containing any kind of values. In the
      config file, the list elements are specified by nested
      &lt;add&gt;, &lt;item&gt; or &lt;putList&gt;. name
      The unique identifier for this put list. </description>
    <AttributeType default="" name="name" required="true"/>
    <attribute default="" required="true" type="name"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="add"/>
    <element type="item"/>
    <element type="bean"/>
    <element type="putList"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="add" startTag="required">
    <description> The &quot;add&quot; element describes an element of a
      list. It is similar to the &lt;put&gt; element.<!-- content
      Same as value. For compatibility with the template tag library.
      direct          Same as type=&quot;string&quot;. For compatibility
      with the template                      tag library.       type
      The type of the value. Can be: string, page, template or
      definition.                      By default, no type is associated
      to a value. If a type is                      associated, it will
      be used as a hint to process the value                      when
      the attribute will be used in the inserted tiles.       value
      The value associated to this tiles attribute. The value should
      be specified with this tag attribute, or in the body of the tag. --></description>
    <AttributeType default="" name="type" required="false"
      type="enumeration" values="string,page,template,definition"/>
    <attribute default="" required="false" type="type"/>
    <AttributeType default="" name="content" required="false"/>
    <attribute default="" required="false" type="content"/>
    <AttributeType default="" name="value" required="false"/>
    <attribute default="" required="false" type="value"/>
    <AttributeType default="" name="direct" required="false"
      type="enumeration" values="true,false"/>
    <attribute default="" required="false" type="direct"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType endTag="required" name="bean" startTag="required">
    <description> The &quot;bean&quot; element describes an element of a
      list. It create a bean of the specified java classtype. This
      bean is initialized with appropriate nested
      &lt;set-property&gt;. classtype The fully qualified
      classname for this bean. </description>
    <AttributeType default="" name="classtype" required="true"/>
    <attribute default="" required="true" type="classtype"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="set-property"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="set-property" startTag="required">
    <description> The &quot;set-property&quot; element specifies the
      method name and initial value of a bean property. When the
      object representing the surrounding element is instantiated,
      the accessor for the indicated property is called and passed
      the indicated value.   <!-- property Name of the JavaBeans
      property whose setter method will be called.
      value           String representation of the value to which this
      property will be set, after suitable type conversion --></description>
    <AttributeType default="" name="value" required="true"/>
    <attribute default="" required="true" type="value"/>
    <AttributeType default="" name="property" required="true"/>
    <attribute default="" required="true" type="property"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="item" startTag="required">
    <description> The &quot;item&quot; element describes an element of a
      list. It create a bean added as      element to the list. Each
      bean can contain different properties: value, link,      icon,
      tooltip. These properties are to be interpreted by the jsp page
      using them. By default the bean is of type
      &quot;org.apache.struts.tiles.beans.SimpleMenuItem&quot;. <!--This
      bean is useful to      create a list of beans used as menu items.
      classtype       The fully qualified classtype for this bean.
      If specified, the classtype must be a subclass of the interface
      &quot;org.apache.struts.tiles.beans.MenuItem&quot;.       icon
      The bean &apos;icon&apos; property.       link            The bean
      &apos;link&apos; property.       tooltip         The bean
      &apos;tooltip&apos; property.       value           The bean
      &apos;value&apos; property. --></description>
    <AttributeType default="" name="icon" required="false"/>
    <attribute default="" required="false" type="icon"/>
    <AttributeType default="" name="link" required="true"/>
    <attribute default="" required="true" type="link"/>
    <AttributeType default="" name="value" required="true"/>
    <attribute default="" required="true" type="value"/>
    <AttributeType default="" name="tooltip" required="false"/>
    <attribute default="" required="false" type="tooltip"/>
    <AttributeType default="" name="classtype" required="false"/>
    <attribute default="" required="false" type="classtype"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="description" startTag="required">
    <description> The &quot;description&quot; element contains
      descriptive (paragraph length) text      about the surrounding
      element, suitable for use in GUI tools. </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="display-name" startTag="required">
    <description> The &quot;display-name&quot; element contains a short
      (one line) description of      the surrounding element, suitable
      for use in GUI tools. </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="icon" startTag="required">
    <description> The &quot;icon&quot; element contains a small-icon and
      large-icon element which specify the location, relative to
      the Struts configuration file, for small and large images
      used to represent the surrounding element in GUI tools. </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="small-icon"/>
    <element type="large-icon"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="large-icon" startTag="required">
    <description> The &quot;large-icon&quot; element specifies the
      location, relative to the Struts configuration file, of a
      resource containing a large (32x32 pixel) icon image. </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="small-icon" startTag="required">
    <description> The &quot;small-icon&quot; element specifies the
      location, relative to the Struts configuration file, of a
      resource containing a small (16x16 pixel)      icon image. </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
</Schema>
