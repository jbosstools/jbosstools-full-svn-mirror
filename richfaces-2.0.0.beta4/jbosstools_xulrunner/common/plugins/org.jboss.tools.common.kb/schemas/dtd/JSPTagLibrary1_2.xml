<?xml version="1.0" encoding="UTF-8"?>
<Schema rootElement="taglib" uri="-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN" url="http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">
  <ElementType bodyContent="allowed" endTag="required" name="taglib" startTag="required">
    <description> The taglib tag is the document root, it defines:
      tlib-version the version of the tag library implementation
      jsp-version the version of JSP the tag library depends upon
      short-name a simple default short name that could be used by   a
      JSP authoring tool to create names with a mnemonic   value <!-- for
      example, the it may be used as the prefered   prefix value in
      taglib directives  uri  a uri uniquely identifying this taglib
      display-name    the display-name element contains a short name
      that                 is intended to be displayed by tools
      small-icon      optional small-icon that can be used by tools
      large-icon      optional large-icon that can be used by tools
      description a simple string describing the &quot;use&quot; of this
      taglib,   should be user discernable  validator       optional
      TagLibraryValidator information  listener        optional event
      listener specification  --> </description>
    <AttributeType
      default="http://java.sun.com/JSP/TagLibraryDescriptor"
      name="xmlns" required="false"/>
    <attribute default="http://java.sun.com/JSP/TagLibraryDescriptor"
      required="false" type="xmlns"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="tlib-version"/>
    <element type="jsp-version"/>
    <element type="short-name"/>
    <element type="uri"/>
    <element type="display-name"/>
    <element type="small-icon"/>
    <element type="large-icon"/>
    <element type="description"/>
    <element type="validator"/>
    <element type="listener"/>
    <element type="tag"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="tlib-version" startTag="required">
    <description> Describes this version (number) of the taglibrary
      (dewey decimal)  #PCDATA ::= [0-9]*{ &quot;.&quot;[0-9] }0..3 </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="jsp-version" startTag="required">
    <description> Describes the JSP version (number) this taglibrary
      requires in order to function (dewey decimal)  The default is 1.2
      #PCDATA ::= [0-9]*{ &quot;.&quot;[0-9] }0..3 </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="short-name" startTag="required">
    <description> Defines a short (default) short-name to be used for
      tags and variable names used/created by this tag library.  Do not
      use white space, and do not start with digits or underscore.
      #PCDATA ::= NMTOKEN </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="uri" startTag="required">
    <description> Defines a public URI that uniquely identifies this
      version of the taglibrary.  Leave it empty if it does not apply. </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="description" startTag="required">
    <description> Defines an arbitrary text string descirbing the tag
      library </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="validator" startTag="required">
    <description>  Defines an optional validator that can be used to
      validate the conformance of a JSP page to using this tag library. </description>
    <element type="validator-class"/>
    <element type="init-param"/>
    <element type="description"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="validator-class" startTag="required">
    <description>  Defines the TagLibraryValidator class that can be
      used to validate the conformance of a JSP page to using this tag
      library. </description>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="init-param" startTag="required">
    <description>  The init-param element contains a name/value pair as
      an initialization param </description>
    <element type="param-name"/>
    <element type="param-value"/>
    <element type="description"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="param-name" startTag="required">
    <description>  The param-name element contains the name of a
      parameter. </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="param-value" startTag="required">
    <description>  The param-value element contains the value of a
      parameter. </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType endTag="required" name="listener" startTag="required">
    <description>  Defines an optional event listener object to be
      instantiated and registered automatically. </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="listener-class"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="listener-class" startTag="required">
    <description>  The listener-class element declares a class in the
      application that must be registered as a web application listener
      bean.  See the Servlet 2.3 specification for details. </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="tag" startTag="required">
    <description> The tag defines a unique tag in this tag library.  It
      has one attribute, id.  <!--The tag element may have several
      subelements defining:  name              The unique action name
      tag-class         The tag handler class implementing
      javax.servlet.jsp.tagext.Tag  tei-class         An optional
      subclass of
      javax.servlet.jsp.tagext.TagExtraInfo  body-content      The body
      content type  display-name      A short name that is intended to
      be displayed                   by tools  small-icon
      Optional small-icon that can be used by tools  large-icon
      Optional large-icon that can be used by tools  description
      Optional tag-specific information  variable          Optional
      scripting variable information  attribute         All attributes
      of this action  example           Optional informal description of
      an example of a                   use of this tag  --></description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="name"/>
    <element type="tag-class"/>
    <element type="tei-class"/>
    <element type="body-content"/>
    <element type="display-name"/>
    <element type="small-icon"/>
    <element type="large-icon"/>
    <element type="description"/>
    <element type="variable"/>
    <element type="attribute"/>
    <element type="example"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="tag-class" startTag="required">
    <description> Defines the subclass of javax.serlvet.jsp.tagext.Tag
      that implements the request time semantics for this tag.
      (required)  #PCDATA ::= fully qualified Java class name </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="tei-class" startTag="required">
    <description> Defines the subclass of
      javax.servlet.jsp.tagext.TagExtraInfo for this tag. (optional)  If
      this is not given, the class is not consulted at translation time.
      #PCDATA ::= fully qualified Java class name </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="body-content" startTag="required">
    <description> Provides a hint as to the content of the body of this
      tag. Primarily intended for use by page composition tools.  <!--There
      are currently three values specified:  tagdependent The body of
      the tag is interpreted by the tag   implementation itself, and is
      most likely in a   different &quot;langage&quot;, e.g embedded SQL
      statements.  JSP  The body of the tag contains nested JSP syntax
      empty  The body must be empty  The default (if not defined) is JSP
      #PCDATA ::=  tagdependent | JSP | empty  --></description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="display-name" startTag="required">
    <description>  The display-name element contains a short name that
      is intended to be displayed by tools. </description>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="large-icon" startTag="required">
    <description>  The large-icon element contains the name of a file
      containing a large (32 x 32) icon image.  The file name is a
      relative path within the tag library.  The image must be either in
      the JPEG or GIF format, and the file name must end with the suffix
      &quot;.jpg&quot; or &quot;.gif&quot; respectively. The icon can be
      used by tools. </description>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="small-icon" startTag="required">
    <description>  The small-icon element contains the name of a file
      containing a large (32 x 32) icon image.  The file name is a
      relative path within the tag library.  The image must be either in
      the JPEG or GIF format, and the file name must end with the suffix
      &quot;.jpg&quot; or &quot;.gif&quot; respectively. The icon can be
      used by tools. </description>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="example" startTag="required">
    <description>  The example element contains an informal description
      of an example of the use of a tag. </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="variable" startTag="required">
    <description>  The variable tag provides information on the
      scripting variables defined by this tag.  <!--It is a (translation
      time) error for a tag that has one or more variable subelements to
      have a TagExtraInfo class that returns a non-null object.  The
      subelements of variable are of the form:  name-given
      The variable name as a constant  name-from-attribute      The name
      of an attribute whose (translation                          time)
      value will give the name of the                          variable.
      One of name-given or                          name-from-attribute
      is required.  variable-class           Name of the class of the
      variable.                          java.lang.String is default.
      declare                  Whether the variable is declared or not.
      True is the default.  scope                    The scope of the
      scripting varaible                          defined.  NESTED is
      default.  description              Optional description of this
      variable  --></description>
    <element type="name-given"/>
    <element type="name-from-attribute"/>
    <element type="variable-class"/>
    <element type="declare"/>
    <element type="scope"/>
    <element type="description"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="name-given" startTag="required">
    <description>  The name for the scripting variable.  One of
      name-given or name-from-attribute is required. </description>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="name-from-attribute" startTag="required">
    <description>  The name of an attribute whose (translation-time)
      value will give the name of the variable.  One of name-given or
      name-from-attribute is required. </description>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="variable-class" startTag="required">
    <description>  The optional name of the class for the scripting
      variable.  The default is java.lang.String. </description>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="declare" startTag="required">
    <description>  Whether the scripting variable is to be defined or
      not.  See TagExtraInfo for details.  This element is optional and
      &quot;true&quot; is the default. </description>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="scope" startTag="required">
    <description>  The scope of the scripting variable.  See
      TagExtraInfo for details. The element is optional and
      &quot;NESTED&quot; is the default.  Other legal values are
      &quot;AT_BEGIN&quot; and &quot;AT_END&quot;. </description>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="attribute" startTag="required">
    <description> The attribute tag defines an attribute for the nesting
      tag  <!--An attribute definition is composed of:  - the attributes
      name (required)  - if the attribute is required or optional
      (optional)  - if the attributes value may be dynamically
      calculated at runtime   by a scriptlet expression (optional)  -
      the type of the attributes value (optional)  - an informal
      description of the meaning of the attribute (optional)--> </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="name"/>
    <element type="required"/>
    <element type="rtexprvalue"/>
    <element type="type"/>
    <element type="description"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="name" startTag="required">
    <description> Defines the canonical name of a tag or attribute being
      defined  #PCDATA ::= NMTOKEN </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="required" startTag="required">
    <description> Defines if the nesting attribute is required or
      optional.  #PCDATA ::= true | false | yes | no  If not present
      then the default is &quot;false&quot;, i.e the attribute is
      optional. </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="rtexprvalue" startTag="required">
    <description> Defines if the nesting attribute can have scriptlet
      expressions as a value, i.e the value of the attribute may be
      dynamically calculated at request time, as opposed to a static
      value determined at translation time.  <!--#PCDATA ::= true | false |
      yes | no  If not present then the default is &quot;false&quot;,
      i.e the attribute has a static value --></description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="type" startTag="required">
    <description>  Defines the Java type of the attributes value.  For
      static values (those determined at translation time) the type is
      always java.lang.String. </description>
  </ElementType>
</Schema>