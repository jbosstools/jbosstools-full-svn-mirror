<?xml version="1.0" encoding="UTF-8"?>
<Schema rootElement="struts-config" uri="-//Apache Software Foundation//DTD Struts Configuration 1.1//EN" url="http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd">
  <ElementType bodyContent="allowed" endTag="required"
    name="struts-config" startTag="required">
    <description> The &quot;struts-config&quot; element is the root of
      the configuration file       hierarchy, and contains nested
      elements for all of the other       configuration settings.  </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="data-sources"/>
    <element type="form-beans"/>
    <element type="global-exceptions"/>
    <element type="global-forwards"/>
    <element type="action-mappings"/>
    <element type="controller"/>
    <element type="message-resources"/>
    <element type="plug-in"/>
  </ElementType>
  <ElementType endTag="required" name="data-sources" startTag="required">
    <description> The &quot;data-sources&quot; element describes a set
      of DataSource objects [JDBC 2.0       Standard Extension]. The
      individual DataSource objects are configured through       nested
      &lt;data-source&gt; elements.  </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="data-source"/>
  </ElementType>
  <ElementType endTag="required" name="data-source" startTag="required">
    <description> The &quot;data-source&quot; element describes a
      DataSource object [JDBC 2.0 Standard       Extension] that will be
      instantiated, configured, and made available as a       servlet
      context attribute (or &quot;application-scope bean&quot;). Any
      object can be       specified so long as it implements
      [javax.sql.DataSource] and can be       configured entirely from
      JavaBean properties. <!--The following attributes       are required:
      className       The configuration bean for this DataSource object.
      If                       specified, the object must be a subclass
      of the default                       configuration bean.
      [&quot;org.apache.struts.config.DataSourceConfig&quot;]
      key             Servlet context attribute key under which this
      data source                       will be stored.  Default is the
      value specified by string                       constant defined
      by Globals.DATA_SOURCE_KEY. The application
      module prefix (if any) is appended to the key
      (${key}$prefix}).
      [org.apache.struts.Globals.DATA_SOURCE_KEY]
      NOTE: The application module prefix includes the leading
      slash, so the default datasource for a module named
      &quot;foo&quot; is                       stored under
      &quot;org.apache.struts.action.DATA_SOURCE/foo&quot;.         type
      Fully qualified Java class name for this data source object.
      The class must implement DataSource [javax.sql.DataSource],
      and the object must be configurable entirely from JavaBean
      properties.  --></description>
    <AttributeType default="" name="key" required="false"/>
    <attribute default="" required="false" type="key"/>
    <AttributeType default="" name="type" required="false"/>
    <attribute default="" required="false" type="type"/>
    <AttributeType default="" name="className" required="false"/>
    <attribute default="" required="false" type="className"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="set-property"/>
  </ElementType>
  <ElementType endTag="required" name="form-beans" startTag="required">
    <description> The &quot;form-beans&quot; element describes the set
      of form bean descriptors for this       application module. <!--The
      following attributes are defined:         type            Fully
      qualified Java class to use when instantiating
      ActionFormBean objects. If specified, the object must be a
      subclass of the default class type.
      DEPRECATED.                         WARNING:  For Struts 1.0, this
      value is ignored.  You                       can set the default
      implementation class name with the
      &quot;formBean&quot; initialization parameter to the Struts
      controller servlet.  --></description>
    <AttributeType default="" name="type" required="false"/>
    <attribute default="" required="false" type="type"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="form-bean"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="form-bean" startTag="required">
    <description> The &quot;form-bean&quot; element describes an
      ActionForm subclass       [org.apache.struts.action.ActionForm]
      that can be referenced by an &quot;action&quot;       element.
      The &quot;form-bean&quot; element describes a particular form
      bean, which is a       JavaBean that implements the
      org.apache.struts.action.ActionForm       class.  <!--The following
      attributes are defined:         className       The configuration
      bean for this form bean object. If
      specified, the object must be a subclass of the default
      configuration bean.
      [&quot;org.apache.struts.config.FormBeanConfig&quot;]
      dynamic         If the form bean type is a  DynaActionForm
      subclass (that you                       created), then (and only
      then) set this attribute to &quot;true&quot;.
      If the type is set to the default DynaActionForm or any
      conventional ActionForm subclass, then this attribute can be
      omitted.                       [true] if type is
      &quot;org.apache.struts.action.DynaActionForm&quot;
      [false] otherwise  DEPRECATED - THIS IS NOW DETERMINED
      DYNAMICALLY BASED ON THE SPECIFIED IMPLEMENTATION CLASS.
      name            The unique identifier for this form bean.
      Referenced by the                       &lt;action&gt; element to
      specify which form bean to use with its
      request.         type            Fully qualified Java class name
      of the ActionForm subclass                       to use with this
      form bean.  --></description>
    <AttributeType default="" name="name" required="true"/>
    <attribute default="" required="true" type="name"/>
    <AttributeType default="" name="type" required="true"/>
    <attribute default="" required="true" type="type"/>
    <AttributeType default="" name="className" required="false"/>
    <attribute default="" required="false" type="className"/>
    <AttributeType default="" name="dynamic" required="false"
      type="enumeration" values="true,false,yes,no"/>
    <attribute default="" required="false" type="dynamic"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="icon"/>
    <element type="display-name"/>
    <element type="description"/>
    <element type="set-property"/>
    <element type="form-property"/>
  </ElementType>
  <ElementType endTag="required" name="form-property" startTag="required">
    <description> The &quot;form-property&quot; element describes a
      JavaBean property that can be used to       configure an instance
      of a DynaActionForm or a subclass thereof. This element       is
      only utilized when the &quot;type&quot; attribute of the enclosing
      &quot;form-bean&quot; element       is
      [org.apache.struts.action.DynaActionForm] or a subclass of
      DynaActionForm. If       a custom DynaActionForm subclass is used,
      then the &quot;dynamic&quot; attribute of the       enclosing
      &lt;form-bean&gt; element must be set to &quot;true&quot;. Since
      Struts 1.1.      <!--   className       The configuration bean for
      this form property object. If                       specified, the
      object must be a subclass of the default
      configuration bean.
      [&quot;org.apache.struts.config.FormPropertyConfig&quot;]
      initial         String representation of the initial value for
      this property.                       If not specified, primitives
      will be initialized to zero and                       objects
      initialized to the zero-argument instantiation of that
      object class.  For example, Strings will be initialized to
      &quot;&quot;           name            The name of the JavaBean
      property described by this element.         size            The
      number of array elements to create if the value of the
      &quot;type&quot; attribute specifies an array, but there is no
      value                       specified for the &quot;initial&quot;
      attribute.         type            Fully qualified Java class name
      of the field underlying this                       property,
      optionally followed by &quot;[]&quot; to indicate that the
      field is indexed.  --></description>
    <AttributeType default="" name="name" required="true"/>
    <attribute default="" required="true" type="name"/>
    <AttributeType default="" name="initial" required="false"/>
    <attribute default="" required="false" type="initial"/>
    <AttributeType default="" name="size" required="false"/>
    <attribute default="" required="false" type="size"/>
    <AttributeType default="" name="type" required="true"/>
    <attribute default="" required="true" type="type"/>
    <AttributeType default="" name="className" required="false"/>
    <attribute default="" required="false" type="className"/>
    <element type="set-property"/>
  </ElementType>
  <ElementType endTag="required" name="global-exceptions" startTag="required">
    <description> The &quot;global-exceptions&quot; element describes a
      set of exceptions that might be       thrown by an Action object.
      <!--The handling of individual exception types is       configured
      through nested exception elements. An &lt;action&gt; element may
      override a global exception handler by registering a local
      exception handler       for the same exception type. Since Struts
      1.1.  --></description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="exception"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="exception" startTag="required">
    <description> The &quot;exception&quot; element registers an
      ExceptionHandler for an exception type.      <!-- The following
      attributes are defined:        bundle           Servlet context
      attribute for the message resources bundle
      associated with this handler. The default attribute is the
      value specified by the string constant declared at
      Globals.MESSAGES_KEY.
      [org.apache.struts.Globals.MESSAGES_KEY]        className
      The configuration bean for this ExceptionHandler object.
      If specified, className must be a subclass of the default
      configuration bean
      [&quot;org.apache.struts.config.ExceptionConfig&quot;]
      handler          Fully qualified Java class name for this
      exception handler.
      [&quot;org.apache.struts.action.ExceptionHandler&quot;]        key
      The key to use with this handler&apos;s message resource bundle
      that will retrieve the error message template for this
      exception.        path             The module-relative URI to the
      resource that will complete                       the
      request/response if this exception occurs.        scope
      The context (&quot;request&quot; or &quot;session&quot;) that is
      used to access                       the ActionError object
      [org.apache.struts.action.ActionError]                       for
      this exception.        type             Fully qualified Java class
      name of the exception type to                       register with
      this handler.  --></description>
    <AttributeType default="" name="bundle" required="false"/>
    <attribute default="" required="false" type="bundle"/>
    <AttributeType default="" name="key" required="true"/>
    <attribute default="" required="true" type="key"/>
    <AttributeType default="" name="type" required="true"/>
    <attribute default="" required="true" type="type"/>
    <AttributeType default="" name="scope" required="false"/>
    <attribute default="" required="false" type="scope"/>
    <AttributeType default="" name="handler" required="false"/>
    <attribute default="" required="false" type="handler"/>
    <AttributeType default="" name="className" required="false"/>
    <attribute default="" required="false" type="className"/>
    <AttributeType default="" name="path" required="false"/>
    <attribute default="" required="false" type="path"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="icon"/>
    <element type="display-name"/>
    <element type="description"/>
    <element type="set-property"/>
  </ElementType>
  <ElementType endTag="required" name="global-forwards" startTag="required">
    <description> The &quot;global-forwards&quot; element describes a
      set of ActionForward objects
      [org.apache.struts.action.ActionForward] that are available to all
      Action       objects as a return value. The individual
      ActionForwards are configured       through nested &lt;forward&gt;
      elements. An &lt;action&gt; element may override a global
      forward by defining a local &lt;forward&gt; of the same name.
      <!--type            Fully qualified Java class to use when
      instantiating                       ActionForward objects.  If
      specified, the object must be a                       subclass of
      the default class type.                       DEPRECATED.
      WARNING:  For Struts 1.0, this value is ignored.  You
      can set the default implementation class name with the
      &quot;forward&quot; initialization parameter to the Struts
      controller servlet.  --></description>
    <AttributeType default="" name="type" required="false"/>
    <attribute default="" required="false" type="type"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="forward"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="forward" startTag="required">
    <description> The &quot;forward&quot; element describes an
      ActionForward that is to be made       available to an Action as a
      return value. An ActionForward is referenced by       a logical
      name and encapsulates a URI. A &quot;forward&quot; element may be
      used to       describe both global and local ActionForwards.
      Global forwards are available       to all the Action objects in
      the application module. Local forwards can be       nested within
      an &lt;action&gt; element and only available to an Action object
      when it is invoked through that ActionMapping.   <!--      className
      Fully qualified Java class name of ActionForward
      subclass to use for this object.
      [&quot;org.apache.struts.action.ActionForward&quot;]
      contextRelative  Set this to &quot;true&quot; if, in a modular
      application, the path                       attribute starts with
      a slash &quot;/&quot; and should be considered
      relative to the entire web application rather than the module.
      Since Struts 1.1.                       [false]         name
      The unique identifier for this forward. Referenced by the
      Action object at runtime to select - by its logical name -
      the resource that should complete the request/response.
      path            The module-relative or context-relative path to
      the resources                       that is encapsulated by the
      logical name of this ActionForward.                       If the
      path is to be considered context-relative when used in
      a modular application, then the contextRelative attribute
      should be set to &quot;true&quot;. This value should begin with a
      slash                       (&quot;/&quot;) character.
      redirect        Set to &quot;true&quot; if a redirect instruction
      should be issued to                       the user-agent so that a
      new request is issued for this
      forward&apos;s resource. If true,  RequestDispatcher.Redirect is
      called. If &quot;false&quot;, RequestDispatcher.forward is called
      instead.                       [false]  --></description>
    <AttributeType default="" name="name" required="true"/>
    <attribute default="" required="true" type="name"/>
    <AttributeType default="" name="className" required="false"/>
    <attribute default="" required="false" type="className"/>
    <AttributeType default="" name="contextRelative" required="false"
      type="enumeration" values="true,false,yes,no"/>
    <attribute default="" required="false" type="contextRelative"/>
    <AttributeType default="" name="path" required="true"/>
    <attribute default="" required="true" type="path"/>
    <AttributeType default="" name="redirect" required="false"
      type="enumeration" values="true,false,yes,no"/>
    <attribute default="" required="false" type="redirect"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="icon"/>
    <element type="display-name"/>
    <element type="description"/>
    <element type="set-property"/>
  </ElementType>
  <ElementType endTag="required" name="action-mappings" startTag="required">
    <description> The &quot;action-mappings&quot; element describes a
      set of ActionMapping objects
      [org.apache.struts.action.ActionMapping] that are available to
      process       requests matching the url-pattern our ActionServlet
      registered with the       container. The individual ActionMappings
      are configured through nested       &lt;action&gt; elements.<!-- The
      following attributes are defined:         type           Fully
      qualified Java class to use when instantiating
      ActionMapping objects. If specified, the object must be a
      subclass of the default class type.
      WARNING:  For Struts 1.0, this value is ignored.  You
      can set the default implementation class name with the
      &quot;mapping&quot; initialization parameter to the Struts
      controller servlet.  --></description>
    <AttributeType default="" name="type" required="false"/>
    <attribute default="" required="false" type="type"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="action"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="action" startTag="required">
    <description> The &quot;action&quot; element describes an
      ActionMapping object that is to be used       to process a request
      for a specific module-relative URI. <!--The following       attributes
      are defined:         attribute       Name of the request-scope or
      session-scope attribute that                       is used to
      access our ActionForm bean, if it is other than
      the bean&apos;s specified &quot;name&quot;. Optional if
      &quot;name&quot; is specified,                       else not
      valid.         className       The fully qualified Java class name
      of the ActionMapping                       subclass to use for
      this action mapping object. Defaults to                       the
      type specified by the enclosing &lt;action-mappings&gt;
      element or to &quot;org.apache.struts.action.ActionMapping&quot;
      if                       not specified.
      [&quot;org.apache.struts.action.ActionMapping&quot;]
      forward         Module-relative path of the servlet or other
      resource that                       will process this request,
      instead of the Action class                       specified by
      &quot;type&quot;.  The path WILL NOT be processed
      through the &quot;forwardPattern&quot; attribute that is
      configured                       on the &quot;controller&quot;
      element for this application module.                       Exactly
      one of &quot;forward&quot;, &quot;include&quot;, or
      &quot;type&quot; must be                       specified.
      include         Module-relative path of the servlet or other
      resource that                       will process this request,
      instead of the Action class                       specified by
      &quot;type&quot;.  The path WILL NOT be processed
      through the &quot;forwardPattern&quot; attribute that is
      configured                       on the &quot;controller&quot;
      element for this application module.                       Exactly
      one of &quot;forward&quot;, &quot;include&quot;, or
      &quot;type&quot; must be                       specified.
      input           Module-relative path of the action or other
      resource to                       which control should be returned
      if a validation error is                       encountered. Valid
      only when &quot;name&quot; is specified. Required
      if &quot;name&quot; is specified and the input bean returns
      validation errors. Optional if &quot;name&quot; is specified and
      the                       input bean does not return validation
      errors.         name            Name of the form bean, if any,
      that is associated with this                       action mapping.
      path            The module-relative path of the submitted request,
      starting                       with a &quot;/&quot; character, and
      without the filename extension if                       extension
      mapping is used.                         NOTE:  Do *not* include a
      period in your path name,                       because it will
      look like a filename extension and                       cause
      your Action to not be located.         parameter
      General-purpose configuration parameter that can be used to
      pass extra information to the Action object selected by
      this action mapping.         prefix          Prefix used to match
      request parameter names to ActionForm
      property names, if any. Optional if &quot;name&quot; is specified,
      else not allowed.         roles           Comma-delimited list of
      security role names that are allowed                       access
      to this ActionMapping object. Since Struts 1.1.         scope
      The context (&quot;request&quot; or &quot;session&quot;) that is
      used to                       access our ActionForm bean, if any.
      Optional if &quot;name&quot; is                       specified,
      else not valid.         suffix          Suffix used to match
      request parameter names to ActionForm                       bean
      property names, if any. Optional if &quot;name&quot; is
      specified, else not valid.         type            Fully qualified
      Java class name of the Action subclass
      [org.apache.struts.action.Action] that will process requests
      for this action mapping. Not valid if either the
      &quot;forward&quot;                       or &quot;include&quot;
      attribute is specified.  Exactly one of
      &quot;forward&quot;, &quot;include&quot;, or &quot;type&quot; must
      be specified.         unknown         Set to &quot;true&quot; if
      this object should be configured as the
      default action mapping for this module. If a request does not
      match another object, it will be passed to the ActionMapping
      object with unknown set to &quot;true&quot;. Only one
      ActionMapping                       can be marked as
      &quot;unknown&quot; within a module.                       [false]
      validate        Set to &quot;true&quot; if the validate method of
      the ActionForm bean                       should be called prior
      to calling the Action object for this                       action
      mapping, or set to &quot;false&quot; if you do not want the
      validate method called.                       [true]  --></description>
    <AttributeType default="" name="unknown" required="false"
      type="enumeration" values="true,false,yes,no"/>
    <attribute default="" required="false" type="unknown"/>
    <AttributeType default="" name="name" required="false"/>
    <attribute default="" required="false" type="name"/>
    <AttributeType default="" name="include" required="false"/>
    <attribute default="" required="false" type="include"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <AttributeType default="" name="attribute" required="false"/>
    <attribute default="" required="false" type="attribute"/>
    <AttributeType default="" name="roles" required="false"/>
    <attribute default="" required="false" type="roles"/>
    <AttributeType default="" name="forward" required="false"/>
    <attribute default="" required="false" type="forward"/>
    <AttributeType default="" name="prefix" required="false"/>
    <attribute default="" required="false" type="prefix"/>
    <AttributeType default="" name="className" required="false"/>
    <attribute default="" required="false" type="className"/>
    <AttributeType default="" name="type" required="false"/>
    <attribute default="" required="false" type="type"/>
    <AttributeType default="" name="validate" required="false"
      type="enumeration" values="true,false,yes,no"/>
    <attribute default="" required="false" type="validate"/>
    <AttributeType default="" name="input" required="false"/>
    <attribute default="" required="false" type="input"/>
    <AttributeType default="" name="parameter" required="false"/>
    <attribute default="" required="false" type="parameter"/>
    <AttributeType default="" name="suffix" required="false"/>
    <attribute default="" required="false" type="suffix"/>
    <AttributeType default="" name="scope" required="false"
      type="enumeration" values="request,session"/>
    <attribute default="" required="false" type="scope"/>
    <AttributeType default="" name="path" required="true"/>
    <attribute default="" required="true" type="path"/>
    <element type="icon"/>
    <element type="display-name"/>
    <element type="description"/>
    <element type="set-property"/>
    <element type="exception"/>
    <element type="forward"/>
  </ElementType>
  <ElementType endTag="required" name="controller" startTag="required">
    <description> The &quot;controller&quot; element describes the
      ControllerConfig bean
      [org.apache.struts.config.ControllerConfig] that encapsulates
      an application module&apos;s runtime configuration. <!--The following
      attributes are defined:         bufferSize      The size of the
      input buffer used when processing                       file
      uploads.                       [4096]         className
      Fully qualified Java class name of the
      ControllerConfig subclass for this controller object.
      If specified, the object must be a subclass of the
      default class.
      [&quot;org.apache.struts.config.ControllerConfig&quot;]
      contentType     Default content type (and optional character
      encoding) to                       be set on each response. May be
      overridden by the Action,                       JSP, or other
      resource to which the request is forwarded.
      [&quot;text/html&quot;]         debug           Debugging detail
      level for this module. [0]                       DEPRECATED -
      configure the logging detail level                       in your
      underlying logging implementation.         forwardPattern
      Replacement pattern defining how the &quot;path&quot; attribute of
      a                       &lt;forward&gt; element is mapped to a
      context-relative URL when                       it starts with a
      slash (and when the contextRelative                       property
      is false). This value may consist of any
      combination of the following:                       -
      &quot;$M&quot; - Replaced by the module prefix of this module
      - &quot;$P&quot; - Replaced by the &quot;path&quot; attribute of
      the  selected                       &quot;forward&quot; element
      - &quot;$$&quot; - Causes a literal dollar sign to be rendered
      - &quot;$x&quot; - (Where &quot;x&quot; is any character not
      defined above)                       Silently swallowed, reserved
      for future use                       If not specified, the default
      forwardPattern is &quot;$M$P&quot;,                       which is
      consistent with the previous behavior of
      forwards.  Since Struts 1.1.  [&quot;$M$P&quot;]
      inputForward    Set to &quot;true&quot; if you want the
      &quot;input&quot; attribute of
      &lt;action&gt; elements to be the name of a local or global
      ActionForward, which will then be used to calculate the
      ultimate URL. Set to &quot;false&quot; (the default) to treat the
      &quot;input&quot; parameter of &lt;action&gt; elements as a
      module-relative path to the resource                       to be
      used as the input form. Since Struts 1.1.
      [false]         locale          Set to &quot;true&quot; if you
      want a Locale object stored in the
      user&apos;s session if not already present.
      [true]         maxFileSize     The maximum size (in bytes) of a
      file to be accepted as a                       file upload.  Can
      be expressed as a number followed by a
      &quot;K&quot;, &quot;M&quot;, or &quot;G&quot;, which are
      interpreted to mean kilobytes,                       megabytes, or
      gigabytes, respectively.                       [&quot;250M&quot;]
      memFileSize     The maximum size (in bytes) of a file whose
      contents will                       be retained in memory after
      uploading. Files larger than                       this threshold
      will be written to some alternative storage
      medium, typically a hard disk. Can be expressed as a number
      followed by a &quot;K&quot;, &quot;M&quot;, or &quot;G&quot;,
      which are interpreted to                       mean kilobytes,
      megabytes, or gigabytes, respectively.
      [&quot;256K&quot;]         multipartClass  The fully qualified
      Java class name of the multipart                       request
      handler class to be used with this module.
      [&quot;org.apache.struts.upload.CommonsMultipartRequestHandler&quot;]
      nocache         Set to &quot;true&quot; if you want the controller
      to add HTTP                       headers for defeating caching to
      every response from                       this module.  [false]
      pagePattern     Replacement pattern defining how the
      &quot;page&quot; attribute of                       custom tags
      using it is mapped to a context-relative URL
      of the corresponding resource.  This value may consist of
      any combination of the following:                       -
      &quot;$M&quot; - Replaced by the module prefix of this module
      - &quot;$P&quot; - Replaced by the value of the &quot;page&quot;
      attribute                       - &quot;$$&quot; - Causes a
      literal dollar sign to be rendered                       -
      &quot;$x&quot; - (Where &quot;x&quot; is any character not defined
      above)                                Silently swallowed, reserved
      for future use                       If not specified, the default
      forwardPattern is                       &quot;$M$P&quot;, which is
      consistent with previous hard coded                       behavior
      of URL evaluation for &quot;page&quot; attributes.
      [&quot;$M$P&quot;]         processorClass  The fully qualified
      Java class name of the                       RequestProcessor
      subclass to be used with this module.
      [&quot;org.apache.struts.action.RequestProcessor&quot;]
      tempDir         Temporary working directory to use when processing
      file uploads.                       [{Directory provided by
      servlet container}]  --></description>
    <AttributeType default="" name="debug" required="false"/>
    <attribute default="" required="false" type="debug"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <AttributeType default="" name="memFileSize" required="false"/>
    <attribute default="" required="false" type="memFileSize"/>
    <AttributeType default="" name="bufferSize" required="false"/>
    <attribute default="" required="false" type="bufferSize"/>
    <AttributeType default="" name="inputForward" required="false"
      type="enumeration" values="true,false,yes,no"/>
    <attribute default="" required="false" type="inputForward"/>
    <AttributeType default="" name="maxFileSize" required="false"/>
    <attribute default="" required="false" type="maxFileSize"/>
    <AttributeType default="" name="pagePattern" required="false"/>
    <attribute default="" required="false" type="pagePattern"/>
    <AttributeType default="" name="multipartClass" required="false"/>
    <attribute default="" required="false" type="multipartClass"/>
    <AttributeType default="" name="processorClass" required="false"/>
    <attribute default="" required="false" type="processorClass"/>
    <AttributeType default="" name="tempDir" required="false"/>
    <attribute default="" required="false" type="tempDir"/>
    <AttributeType default="" name="nocache" required="false"
      type="enumeration" values="true,false,yes,no"/>
    <attribute default="" required="false" type="nocache"/>
    <AttributeType default="" name="className" required="false"/>
    <attribute default="" required="false" type="className"/>
    <AttributeType default="" name="locale" required="false"
      type="enumeration" values="true,false,yes,no"/>
    <attribute default="" required="false" type="locale"/>
    <AttributeType default="" name="contentType" required="false"/>
    <attribute default="" required="false" type="contentType"/>
    <AttributeType default="" name="forwardPattern" required="false"/>
    <attribute default="" required="false" type="forwardPattern"/>
    <element type="set-property"/>
  </ElementType>
  <ElementType endTag="required" name="message-resources" startTag="required">
    <description> The &quot;message-resources&quot; element describes a
      MessageResources object with       message templates for this
      module. <!--The following attributes are defined:         className
      The configuration bean for this message resources object.
      If specified, the object must be a subclass of the default
      configuration bean.
      [&quot;org.apache.struts.config.MessageResourcesConfig&quot;]
      factory         Fully qualified Java class name of the
      MessageResourcesFactory subclass to use for this message
      resources object.
      [&quot;org.apache.struts.util.PropertyMessageResourcesFactory&quot;]
      key             Servlet context attribute under which this message
      resources bundle will be stored. The default attribute is
      the value specified by the string constant at
      [Globals.MESSAGES_KEY]. The application module prefix (if
      any) is appended to the key (${key}${prefix}).
      [org.apache.struts.Globals.MESSAGES_KEY]
      NOTE: The application module  prefix includes the leading
      slash, so the default message resource bundle for a module
      named &quot;foo&quot; is stored under
      &quot;org.apache.struts.action.MESSAGE/foo&quot;.         null
      Set to &quot;true&quot; if you want our message resources to
      return a                       null string for unknown message
      keys, or &quot;false&quot; to return a
      message with the bad key value.         parameter
      Configuration parameter to be passed to the createResources
      method of our factory object.  --></description>
    <AttributeType default="" name="null" required="false"
      type="enumeration" values="true,false,yes,no"/>
    <attribute default="" required="false" type="null"/>
    <AttributeType default="" name="factory" required="false"/>
    <attribute default="" required="false" type="factory"/>
    <AttributeType default="" name="key" required="false"/>
    <attribute default="" required="false" type="key"/>
    <AttributeType default="" name="className" required="false"/>
    <attribute default="" required="false" type="className"/>
    <AttributeType default="" name="parameter" required="true"/>
    <attribute default="" required="true" type="parameter"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="set-property"/>
  </ElementType>
  <ElementType endTag="required" name="plug-in" startTag="required">
    <description> The &quot;plug-in&quot; element specifies the fully
      qualified class name of a       general-purpose application
      plug-in module that receives notification of       application
      startup and shutdown events. An instance of the specified class
      is created for each element, and can be configured with nested
      &lt;set-property&gt;       elements.<!-- The following attributes are
      supported:         className       Fully qualified Java class name
      of the plug-in class; must                       implement
      [org.apache.struts.action.PlugIn].  --></description>
    <AttributeType default="" name="className" required="true"/>
    <attribute default="" required="true" type="className"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="set-property"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="description" startTag="required">
    <description> The &quot;description&quot; element contains
      descriptive (paragraph length) text       about the surrounding
      element, suitable for use in GUI tools.  </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="display-name" startTag="required">
    <description> The &quot;display-name&quot; element contains a short
      (one line) description of       the surrounding element, suitable
      for use in GUI tools.  </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="icon" startTag="required">
    <description> The &quot;icon&quot; element contains a small-icon and
      large-icon element which       specify the location, relative to
      the Struts configuration file, for small       and large images
      used to represent the surrounding element in GUI tools.  </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
    <element type="small-icon"/>
    <element type="large-icon"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="large-icon" startTag="required">
    <description> The &quot;large-icon&quot; element specifies the
      location, relative to the Struts       configuration file, of a
      resource containing a large (32x32 pixel)       icon image.  </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required"
    name="set-property" startTag="required">
    <description> The &quot;set-property&quot; element specifies the
      method name and initial value of       an additional JavaBean
      configuration property. <!--When the object representing       the
      surrounding element is instantiated, the accessor for the
      indicated       property is called and passed the indicated value.
      The &quot;set-property&quot;       element is especially useful
      when a custom subclass is used with       &lt;data-source&gt;,
      &lt;forward&gt;, &lt;action&gt;, or &lt;plug-in&gt; elements. The
      subclass       can be passed whatever other properties may be
      required to configure the       object without changing how the
      struts-config is parsed.         property        Name of the
      JavaBeans property whose setter method                       will
      be called.         value           String representation of the
      value to which this                       property will be set,
      after suitable type conversion  --></description>
    <AttributeType default="" name="value" required="true"/>
    <attribute default="" required="true" type="value"/>
    <AttributeType default="" name="property" required="true"/>
    <attribute default="" required="true" type="property"/>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
  <ElementType bodyContent="allowed" endTag="required" name="small-icon" startTag="required">
    <description> The &quot;small-icon&quot; element specifies the
      location, relative to the Struts       configuration file, of a
      resource containing a small (16x16 pixel)       icon image.  </description>
    <AttributeType default="" name="id" required="false"/>
    <attribute default="" required="false" type="id"/>
  </ElementType>
</Schema>