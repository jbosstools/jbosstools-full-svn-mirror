<project name="Build specific targets and properties" default="noDefault" >

	<taskdef name="updateVersions" classname="org.jboss.ide.eclipse.releng.UpdateVersionsTask" classpath="../../bin"/>
	
	<taskdef classpath="../../lib/ant-contrib.jar" resource="net/sf/antcontrib/antlib.xml"/>
	<import file="../common/common.xml"/>
	
<!-- ===================================================================== -->
<!-- Run a given ${target} on all elements being built -->
<!-- Add on <ant> task for each top level element being built. -->
<!-- ===================================================================== -->
<target name="allElements">
	<ant antfile="${genericTargets}" target="${target}" >
		<property name="type" value="feature" />
		<property name="id" value="org.jboss.ide.eclipse.jdt.aop.feature" />
	</ant>
</target>

<!-- ===================================================================== -->
<!-- Targets to assemble the built elements for particular configurations  -->
<!-- These generally call the generated assemble scripts (named in -->
<!-- ${assembleScriptName}) but may also add pre and post processing -->
<!-- Add one target for each root element and each configuration -->
<!-- ===================================================================== -->

<target name="assemble.org.jboss.ide.eclipse.jdt.aop.feature">
	<property name="archiveName" value="JBossIDE-AOP-Developer-${versionTag}.zip"/>
	<ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
</target>

<!-- ===================================================================== -->
<!-- Check out map files from correct repository -->
<!-- Replace values for cvsRoot, package and mapVersionTag as desired. -->
<!-- ===================================================================== -->
<target name="getMapFiles">
	<!-- we need to export the map file w/ the correct CVS tags -->
	<copyMapFile builder="aop" buildDirectory="${buildDirectory}" cvsTag="${cvsTag}"/>
</target>

<!-- ===================================================================== -->
<!-- Steps to do before setup -->
<!-- ===================================================================== -->
<target name="preSetup">
	<!-- clean up the build directory -->
	<!--delete failonerror="true" includeemptydirs="true">
		<fileset dir="${buildDirectory}" defaultexcludes="false"/>
	</delete-->
</target>

<!-- ===================================================================== -->
<!-- Steps to do after setup but before starting the build proper -->
<!-- ===================================================================== -->
<target name="postSetup">
</target>

<!-- ===================================================================== -->
<!-- Steps to do before fetching the build elements -->
<!-- ===================================================================== -->
<target name="preFetch">
</target>

<!-- ===================================================================== -->
<!-- Steps to do after fetching the build elements -->
<!-- ===================================================================== -->
<target name="postFetch">
	<condition property="append" else="false">
		<not>
			<equals arg1="${buildType}" arg2="R"/>
		</not>
	</condition>
	<updateVersions type="feature" version="${versionTag}" append="${append}" updateAssembleScript="false" recursivePlugins="true">
		<fileset dir="${buildDirectory}/features">
			<include name="*aop*"/>
		</fileset>
	</updateVersions>
</target>

<!-- ===================================================================== -->
<!-- Steps to do before generating the build scripts. -->
<!-- ===================================================================== -->
<target name="preGenerate">
</target>

<!-- ===================================================================== -->
<!-- Steps to do after generating the build scripts. -->
<!-- ===================================================================== -->
<target name="postGenerate">
</target>


<!-- ===================================================================== -->
<!-- Steps to do before running the build.xmls for the elements being built. -->
<!-- ===================================================================== -->
<target name="preProcess">
	<!-- Update the versions in all features -->
	<!--updateVersions type="feature" version="${versionTag}" append="true" updateAssembleScript="true">
		<fileset dir="${buildDirectory}/features">
			<include name="*aop*"/>
		</fileset>
	</updateVersions-->
	
	<!-- Update the versions in all plugins (including META-INF/MANIFEST.MF and plugin.xml) -->
	<!--updateVersions type="plugin" version="${versionTag}" append="true">
		<fileset dir="${buildDirectory}/plugins">
			<include name="*aop*"/>
		</fileset>
	</updateVersions-->
	
	<!-- For the AOP plugin we need to run the jaxb compiler -->

	<property name="aopbase" value="${buildDirectory}/plugins"/>
	<property name="aopcorebase" value="${aopbase}/org.jboss.ide.eclipse.jdt.aop.core"/>
	<property name="aopuibase" value="${aopbase}/org.jboss.ide.eclipse.jdt.aop.ui"/>

	<mkdir dir="${aopcorebase}/generated"/>
	<delete includeemptydirs="true" failonerror="false">
		<fileset dir="${aopcorebase}/${ignoreSourceDirectory}"	defaultexcludes="false"/>
		<fileset dir="${aopuibase}/${ignoreSourceDirectory}"	defaultexcludes="false"/>
	</delete>
	<exec executable="${jwsdp.home}/jaxb/bin/${jwsdp.xjcScriptName}">
		<arg line="-extension -d ${aopcorebase}/generated"/>
		<arg line="-p org.jboss.ide.eclipse.jdt.aop.core.jaxb"/>
		<arg line="${aopcorebase}/aop-report.xsd"/>
		<arg line="${aopcorebase}/jboss-aop.xsd"/>
	</exec>
</target>

<!-- ===================================================================== -->
<!-- Steps to do after running the build.xmls for the elements being built. -->
<!-- ===================================================================== -->
<target name="postProcess">
</target>


<!-- ===================================================================== -->
<!-- Steps to do before running assemble. -->
<!-- ===================================================================== -->
<target name="preAssemble">
</target>

<!-- ===================================================================== -->
<!-- Steps to do after  running assemble. -->
<!-- ===================================================================== -->
<target name="postAssemble">
</target>

<!-- ===================================================================== -->
<!-- Steps to do after the build is done. -->
<!-- ===================================================================== -->
<target name="postBuild">
	<!-- upload the build -->
	<!--property name="archiveName" value="JBossIDE-AOP-${versionTag}.zip"/>
	<property name="archiveFullPath" value="${buildDirectory}/${buildLabel}/${archiveName}"/>
	<echo>uploading ${archiveFullPath} into ${ftpBaseDir}/${uploadBuildDirectory}...</echo>
	<ftp server="${ftpServer}"
		userid="${ftpUser}"
		password="${ftpPassword}"
		remotedir="${ftpBaseDir}/${uploadBuildDirectory}">

		<fileset file="${archiveFullPath}"/>
	</ftp-->	
</target>

<!-- ===================================================================== -->
<!-- Steps to do to test the build results -->
<!-- ===================================================================== -->
<target name="test">
</target>

<!-- ===================================================================== -->
<!-- Steps to do to publish the build results -->
<!-- ===================================================================== -->
<target name="publish">
</target>

<!-- ===================================================================== -->
<!-- Default target                                                        -->
<!-- ===================================================================== -->
<target name="noDefault">
	<echo message="You must specify a target when invoking this file" />
</target>

</project>

