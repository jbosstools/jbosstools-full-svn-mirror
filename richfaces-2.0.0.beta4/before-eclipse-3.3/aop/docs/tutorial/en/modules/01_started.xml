 <chapter id="GettingStarted">
	<title>Getting Started</title>
	
	<section><title>Installation</title>
		<para> You install the JBoss AOP IDE in the same way as any other Eclipse plugin.</para>
		<itemizedlist mark='opencircle'>
		
		
		<listitem><para>Make sure you have Eclipse 3.1.x installed, and start it up.</para></listitem>
		<listitem><para>Select Help > Software Updates > Find and Install in the Eclipse workbench.</para></listitem>
		<listitem><para>In the wizard that opens, click on the "Search for new features to install" radio button, and click Next.</para></listitem>
		<listitem><para>On the next page you will need to add a new update site for JBossIDE. Click the "New Remote Site.." button.</para></listitem>
		<listitem><para>Type in "JBossIDE" for the name, and "http://jboss.sourceforge.net/jbosside/updates" for the URL, and click OK.</para></listitem>
		<listitem><para>You should see a new site in the list now called JBossIDE. click the "+" sign next to it to show the platforms available.</para></listitem>
		<listitem><para>Now, depending if you just want to install the AOP IDE (if you don't know what JBoss-IDE is, go for this set of options):</para></listitem>
		<listitem>
		<itemizedlist mark='opencircle'>

		    <listitem><para>Check the "JBoss-IDE AOP Standalone" checkbox.</para></listitem>
		    <listitem><para>In the feature list you should check the "JBoss-IDE AOP Standalone 1.0" checkbox. </para></listitem>

			<para>If you have JBoss-IDE installed, or want to use all the other (non-AOP) features of JBoss-IDE:</para>

     <listitem><para>If you don't have JBossIDE installed, check the "JBoss-IDE 1.4/Eclipse 3.0" checkbox.</para></listitem>
     <listitem><para>Check the "JBoss-IDE AOP Extension" checkbox.</para></listitem>
     <listitem><para>In the feature list you should check the "JBoss-IDE AOP Extension 1.0" checkbox, and the JBoss-IDE (1.4.0) checkbox if you don't have JBossIDE installed. </para></listitem>
     </itemizedlist>
     </listitem>

		</itemizedlist>
	</section>
	
	
	<section>
		<title>Creating a new AOP Project</title>
	
		<informaltable frame="none">
			<tgroup cols="2" align="left" colsep="0" rowsep="0">
				<tbody>
					<row>
						<entry valign="top">
		<para>The first step is to create your project.
		Select <literal>file-&gt;new-&gt;other...</literal></para>
		
		<para>From the wizard that opens, expand the JBoss AOP group, 
		and select <literal>JBossAOP Project</literal>. 
		
		From there, the remainder of the project creation process
		is the same as for any generic Java project. </para>

		</entry>
		<entry><mediaobject><imageobject>
				<imagedata align="center" fileref="images/newproject.gif"/>
		</imageobject></mediaobject></entry>
</row></tbody></tgroup></informaltable>
	</section>
	
		<section><title>Exploring the Views</title>
		<informaltable frame="none">
			<tgroup cols="2" align="left" colsep="0" rowsep="0">
				<tbody>
					<row>
						<entry valign="top">
		<para>The first thing to do is open the two views that the AOP
		plugin has available for you. To do this, select 
		<literal>Window-&gt;Show View-&gt;Other..</literal> and 
		expand the JBoss AOP category. Select both views and click ok.</para>

		</entry>
		<entry><mediaobject><imageobject>
				<imagedata align="center" fileref="images/openViews.gif"/>
		</imageobject></mediaobject></entry>
		</row></tbody></tgroup></informaltable>
		
		
		<section><title>Project Structure</title>
		<informaltable frame="none">
			<tgroup cols="2" align="left" colsep="0" rowsep="0">
				<tbody>
					<row>
						<entry valign="top">
		<para>The Aop Project creation wizard has done a few things
		already for you. First, it has included all of the JBoss AOP 
		jar files. Secondly, it has created a descriptor file for you,
		which will store most of the aop functionality such as
		pointcut expressions, typedefs, introductions, and all
		other things available to you via the descriptor file. </para>

		</entry>
		<entry><mediaobject><imageobject>
				<imagedata align="center" fileref="images/projectStructure.gif"/>
		</imageobject></mediaobject></entry>
		</row></tbody></tgroup></informaltable>
		
		</section>
		
		<section><title>Aspect Manager View</title>
		<informaltable frame="none">
			<tgroup cols="2" align="left" colsep="0" rowsep="0">
				<tbody>
					<row>
						<entry valign="top">
			<para>The Aspect Manager View is the birds'-eye view of the 
			model that underlies the entire aop project. For the most part, all 
			of its data is gotten from the xml descriptor directly, and not
			from any other model elements. </para>

		</entry>
		<entry><mediaobject><imageobject>
				<imagedata align="center" fileref="images/aspectManagerView.gif"/>
		</imageobject></mediaobject></entry>
		</row></tbody></tgroup></informaltable>

			
			<para>Currently, not all elements represented in this view 
			have actions associated with them to assist in creating or 
			developing those elements. However, if you modify the descriptor
			file directly, the view will be updated.</para>

			<para>The Aspect Manager View represents its data in a tree
			structure, so when pointcuts, bindings, and other elements
			are found, they will be displayed. Currently, if you right-click on
			several elements (Bindings, Pointcuts, Typedefs, Introductions), 
			a menu item will appear offering to assist in the creation of those
			elements. These will be explored more later on.</para>
			
			<para>This view is updated automatically when the descriptor file
			is changed. If we were to change the descriptor xml file to contain 
			the string below, we would see a change in the Aspect Manager view.</para>
			
		<informaltable frame="none">
			<tgroup cols="2" align="left" colsep="0" rowsep="0">
				<tbody>
					<row>
						<entry valign="top">
			<programlisting>&lt;aop&gt;
  &lt;typedef expr="has(* *-&gt;someMethod(..))" 
    name="someName"/&gt;
&lt;/aop&gt;</programlisting>
		</entry>
		<entry><mediaobject><imageobject>
				<imagedata align="center" fileref="images/aspectManagerChanged1.gif"/>
		</imageobject></mediaobject></entry>
		</row></tbody></tgroup></informaltable>
			

		</section>
		
		
		<section><title>The Advised Members View</title>
		<informaltable frame="none">
			<tgroup cols="2" align="left" colsep="0" rowsep="0">
				<tbody>
					<row>
						<entry valign="top">
			<para>The Advised Members view shows data not directly available
			through the descriptor file, but rather represents how the descriptor
			data will be interpreted when your application is built and run.</para>
			
		</entry>
		<entry><mediaobject><imageobject>
				<imagedata align="center" fileref="images/advisedMembersView.gif"/>
		</imageobject></mediaobject></entry>
		</row></tbody></tgroup></informaltable>

			<para>Currently in the view, we see a category for Typedefs, and 
			a category for Introductions. More data, however, will be visible 
			when such data is available. Whenever you switch from one 
			file in your project to another, this view will automatically
			update, and show which member elements inside that java file
			are advised by some pointcut, as well as what interceptors
			are currently advising it. </para>
			
			<para>Underneath the Typedefs and Introductions categories 
			will be a list of which expressions of those types match the 
			currently active java file's main type (primary class).
			This will be demonstrated later. </para>
			



		</section>
	</section>
	

</chapter>