#csv list of test plugins to run
testPluginsToRun=\
org.jboss.tools.bpel.ui.test

# define which suite to run within each test plugin; or, include a test.xml script in 
# the test plugin to deviate from default one-suite-per-plugin operation
org.jboss.tools.bpel.ui.test.suite=org.jboss.tools.bpel.ui.test.BpelUIAllTests

# to use a different library-file than the default from org.eclipse.test/library.xml
library-file=${relengBuilderDir}/custom-library.xml

# to dump test properties into console log and separate file (for debugging purposes), set echotestproperties=true
echotestproperties=true

################################################################################################

#which (sub)project?
project=${subprojectName}

#target to call in test.xml:  runtests-local | runtests-remote
testTarget=runtests-local

#directory on test machine where automated testing framework will be installed
# testBase=/tmp/build/N200911122249/testing
# testDir=/tmp/build/N200911122249/testing/N200911122249
testDir=${testBase}/${buildLabel}

#name of zip file containing automated testing framework and JUnit test plug-ins
testFramework=${zipPrefix}-Automated-Tests${incubation}-${buildAlias}.zip

#directory where test scripts are launched
# executionDir=/tmp/build/N200911122249/testing/N200911122249/testing
executionDir=${testDir}/testing

#name of Update & Master Zip or runtime/SDK/all-in-one to install and test
updateZip=${zipPrefix}-Update${incubation}-${buildAlias}.zip
MasterZip=${zipPrefix}-Master${incubation}-${buildAlias}.zip
# backup if update zip does not exist
SDKZip=${zipPrefix}-SDK${incubation}-${buildAlias}.zip

#used by org.eclipse.build.tools/scripts/test.xml; must be set (but no longer used)
runtime=${zipPrefix}-Update${incubation}-${buildAlias}.zip

# path to java
vmExecutable=${JAVA_HOME}/bin/java

#hack to override unneeded function in releng.basebuilder/plugins/org.eclipse.build.tools/scripts/test.xml
vmUrl=
vmDest=/dev/null
vmInstallExecutable=${vmExecutable}
vmInstallCommand=-version

#eclipse platforms:  win32 | linux.motif | linux.gtk | aix.motif | hpux.motif |solaris.motif
platform=${baseos}.${basews}

#name of file that captures console output from running JUnit plug-in tests
consolelog=${baseos}.${basews}_consolelog.txt

#Works with IBM and Sun JDKs, 1.4+
#name of script to execute
testExecutable=bash

Xflags= -Xms512m -Xmx1024m -XX:PermSize=128m -XX:MaxPermSize=256m
#see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=106396 for rationale for "-Dosgi.bundlefile.limit=100"
Dflags=-Dosgi.bundlefile.limit=100

#arguments to ${testExecutable} - .sh script + args
args=${executionDir}/${shell} -vmExecutable ${vmExecutable} -consolelog ${consolelog} ${Xflags} ${Dflags} 

# vmargs and extraVMargs are used by library.xml (or your own custom version) 
#vmargs= -Xms512m -Xmx1024m -XX:PermSize=128m -XX:MaxPermSize=256m 
#extraVMargs= -Xms512m -Xmx1024m -XX:PermSize=128m -XX:MaxPermSize=256m
# could also add things like: -Xbootclasspath/a:/path/to/emma.jar ?
