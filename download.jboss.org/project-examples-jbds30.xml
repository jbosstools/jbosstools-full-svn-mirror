<projects>
<project>
		<category>ESB for SOA-P 5.0</category>
		<name>helloworld</name>
		<shortDescription>JBoss ESB HelloWorld Example - ESB</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is a runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	This example is to prove that the ESB is is properly configured and happy.  
As well as to demonstrate the needed  minimal files to make a basic ESB component execute.</description>
		<size>59000</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/helloworld.zip
		</url>
	</project>	
	
	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>helloworld_testclient</name>
		<shortDescription>JBoss ESB HelloWorld Example - Client</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace. 
	This example is to demonstrate how to invoke the deployed HelloWorld ESB. It requires the helloworld project.</description>
		<size>1000000</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/helloworld_testclient.zip
		</url>
	</project>
	
	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>helloworld_action</name>
		<shortDescription>JBoss ESB HelloWorld Action Example - ESB</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	This sample is to demonstrate the use of multiple action invocations from a single configuration.  You can use
  a single Action class and make multiple method calls or use multiple Action
  classes.</description>
		<size>7100</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/helloworld_action.zip
		</url>
	</project>
	
	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>helloworld_action_client</name>
		<shortDescription>JBoss ESB HelloWorld Action Example - Client</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	This sample is to test the deployed helloworld_action ESB. It requires the helloworld_action project</description>
		<size>18694</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/helloworld_action_client.zip
		</url>
	</project>	
	
	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>helloworld_file_action</name>
		<shortDescription>JBoss ESB HelloWorld File Action Example - ESB</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	This is a basic example of using the File gateway feature of the JBoss ESB.
  Files that are found in a particular directory with a particular extension
  are sent to a JMS queue with actions for processing. Before deploy the project, please change some properties according to the readme.txt file.</description>
		<size>7920</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/helloworld_file_action.zip
		</url>
	</project>	
	
	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>helloworld_file_action_client</name>
		<shortDescription>JBoss ESB HelloWorld File Action Example - Client</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	This sample is to test the deployed helloworld_file_action ESB. It requires the helloworld_file_action project.</description>
		<size>18694</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/helloworld_file_action_client.zip
		</url>
	</project>	
	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>webservice_consumer1</name>
		<shortDescription>JBoss ESB Web Service consumer1 Example</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	This example demonstrates how to consume a 181 Web Service in an ESB action.
    This ESB will make a webservice request that requires a single "toWhom" string parameter.
    The webservice will return a greeting response. The ESB simply dislays the response on the 
    console.</description>
		<size>22500</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/webservice_consumer1.zip
		</url>
	</project>

	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>webservice_consumer1_client</name>
		<shortDescription>JBoss ESB Web Service consumer1 Example - Client</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	This sample is to test the deployed a comsumer web service.It requires the webservice_consumer1 project.</description>
		<size>1000000</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/webservice_consumer1_client.zip
		</url>
	</project>

	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>webservice_producer</name>
		<shortDescription>JBoss ESB Web Service producer Example</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	This sample demonstrates how to deploy a JSR181 Webservice endpoint on
  JBossESB using the SOAPProcessor action.</description>
		<size>53000</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/webservice_producer.zip
		</url>
	</project>

	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>webservice_producer_client</name>
		<shortDescription>JBoss ESB Web Service producer Example - Client</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	This sample is to test the deployed a web service endpoint.It requires the webservice_producer project.</description>
		<size>14200</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/webservice_producer_client.zip
		</url>
	</project>

	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>transform_CSV2XML</name>
		<shortDescription>JBoss ESB Smooks CSV->XML Example</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	This sample demonstrates how to transform a comma separated value (CSV) file to an xml.
  The tranformation is done by configuring Smooks and performing two transformation, one
  transformation from CSV to an intermediate xml format, and a second transformation from 
  the intermediate xml format to the target xml.</description>
		<size>7200</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/transform_CSV2XML.zip
		</url>
	</project>

	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>transform_CSV2XML_client</name>
		<shortDescription>JBoss ESB Smooks CSV->XML Example - Client</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	This sample is to test the JBoss ESB smooks CSV->XML transformation.It requires the transform_CSV2XML project.</description>
		<size>16600</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/transform_CSV2XML_client.zip
		</url>
	</project>	

	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>transform_XML2POJO</name>
		<shortDescription>JBoss ESB Smooks XML->POJO Example</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	The purpose of the simple_transformation sample is to illustrate the
use of Smooks performing a simple transformation by converting a XML file into
Java POJOs.</description>
		<size>26600</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/transform_XML2POJO.zip
		</url>
	</project>

	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>transform_XML2POJO_client</name>
		<shortDescription>JBoss ESB Smooks XML->POJO Example - Client</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	This sample is to test the JBoss ESB smooks XML->POJO transformation.It requires the transform_XML2POJO project.</description>
		<size>22400</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/transform_XML2POJO_client.zip
		</url>
	</project>

	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>transform_XML2XML_date_manipulation</name>
		<shortDescription>JBoss ESB Smooks XML->XML date-manipulation Example</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	This is another simple sample of how to manually define and apply a Message
  Transformation within JBoss ESB.  

  This sample is an extension of the "transformation_XML2XML_simple"
  Quickstart, demonstrating how  JBoss ESB Transformations can simplify your
  XSLT transformations by combining the power of XSLT with Java.  In this
  Quickstart, we use Java to perform the ugly string manipulation on the
  SampleOrder date field (see OrderDate.java) and use XSLT for what it's good at
  i.e. Templating.  Again, the transformed SampleOrder.xml message is just
  printed to the Java console (message before and after).</description>
		<size>13600</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/transform_XML2XML_date_manipulation.zip
		</url>
	</project>

	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>transform_XML2XML_date_manipulation_client</name>
		<shortDescription>JBoss ESB Smooks XML->XML date-manipulation Example - Client</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	This sample is to test the JBoss ESB XML->XML date-manipulation transformation.It requires the transform_XML2XML_date_manipulation project.</description>
		<size>18600</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/transform_XML2XML_date_manipulation_client.zip
		</url>
	</project>

	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>transform_XML2XML_simple</name>
		<shortDescription>JBoss ESB Smooks XML->XML Example</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	This is a very basic sample of how to manually define and apply a Message
  Transformation within JBoss ESB.  It applies a very simple XSLT to a
  SampleOrder.xml message and prints the before and after XML to the console.</description>
		<size>6700</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/transform_XML2XML_simple.zip
		</url>
	</project>

	<project>
		<category>ESB for SOA-P 5.0</category>
		<name>transform_XML2XML_simple_client</name>
		<shortDescription>JBoss ESB Smooks XML->XML Example - Client</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is runtime named "jboss-soa-p.5.0 Runtime" in the workspace.
	This sample is to test the JBoss ESB XML->XML transformation.It requires the transform_XML2XML_simple project.</description>
		<size>17800</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/transform_XML2XML_simple_client.zip
		</url>
	</project>
</projects>

