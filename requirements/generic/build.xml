<project default="build.driver">
	
	<property name="requirement" value="${requirement.name}"/>
	<property name="driver.properties" value="${basedir}/build.properties" />
	<loadproperties srcFile="${driver.properties}"/>
	
	<property name="driver.dest" value="${requirement.download.root}/${requirement}"/>
	
	<target name="init">
		<condition property="output.dir" value="${WORKSPACE}/results" else="${basedir}">
		<available file="${WORKSPACE}/results" />
		</condition>

		<condition property="COMMON_TOOLS" value="/home/hudson/static_build_env/jbds/tools" else="${java.io.tmpdir}">
			<available file="/home/hudson/static_build_env/jbds" type="dir" />
		</condition>
		<mkdir dir="${COMMON_TOOLS}" />

		<available file="${COMMON_TOOLS}/ant-contrib.jar" type="file" property="ant-contrib.jar.exists" />
		<antcall target="get.ant-contrib" />
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="${COMMON_TOOLS}/ant-contrib.jar" />
			</classpath>
		</taskdef>
	</target>

	<target name="get.ant-contrib" unless="ant-contrib.jar.exists">
		<property name="ANTCONTRIB_MIRROR" value="http://sourceforge.net/projects/ant-contrib/files/ant-contrib/ant-contrib-1.0b2" />
		<get usetimestamp="true" dest="${COMMON_TOOLS}/ant-contrib-1.0b2-bin.zip" src="${ANTCONTRIB_MIRROR}/ant-contrib-1.0b2-bin.zip" />
		<touch file="${COMMON_TOOLS}/ant-contrib-1.0b2-bin.zip" />
		<mkdir dir="${java.io.tmpdir}/ant-contrib-1.0b2-bin.zip_" />
		<unzip src="${COMMON_TOOLS}/ant-contrib-1.0b2-bin.zip" dest="${java.io.tmpdir}/ant-contrib-1.0b2-bin.zip_" overwrite="true" />
		<copy file="${java.io.tmpdir}/ant-contrib-1.0b2-bin.zip_/ant-contrib/lib/ant-contrib.jar" tofile="${COMMON_TOOLS}/ant-contrib.jar" failonerror="true" />
		<delete dir="${java.io.tmpdir}/ant-contrib-1.0b2-bin.zip_" includeemptydirs="true" quiet="true" />
	</target>

	<target name="build.requirement" depends="build.driver" />

	<target name="unpack.requirement" depends="unzip.archive" />	
	
	<target name="download.requirement" depends="download.archive" />
	
	<target name="build.driver" depends="unzip.archive" />	
	
	<target name="unzip.archive" depends="download.archive,defaults">
		<property name="ext" value="zip"/>
		<echo level="debug">Unpacking ${driver.dest}/${build.archive} to ${unzip.dest}</echo>
		<if>
			<available file="${driver.dest}/${build.archive}" />
			<then>
				<antcall target="unpack-${ext}" />
				<tstamp/>
				<antcall target="post.unpack.requirement"/>
			</then>
		</if>
		
	</target>

	<target name="post.unpack.requirement">
	</target>
	
	<target name="unpack-tar.gz" depends="defaults">
		<untar compression="gzip" src="${driver.dest}/${build.archive}" dest="${unzip.dest}"  />
	</target>
	
	<target name="unpack-zip" depends="defaults">
		<unzip src="${driver.dest}/${build.archive}" dest="${unzip.dest}" />
	</target>
	
	<target name="defaults">
		<if>
			<or>
				<contains string="${driver.dest}" substring="{requirement.download.root"/>
				<contains string="${driver.dest}" substring="{requirement"/>
			</or>
			<then>
				<var name="driver.dest" unset="true"/>
				<var name="requirement.name" unset="true"/>
				<var name="requirement" unset="true"/>
				<basename property="requirement.name" file="${basedir}"/>
				<basename property="requirement" file="${basedir}"/>
				<property name="driver.dest" value="${basedir}/../download/${requirement.name}"/>
				<echo>WARING! requirement, requirement.name, and driver.dest are not specified in 
	requirements/${requirement.name}/build.properties or 
	requirements/${requirement.name}/buildRequirement.xml.
	Falling back to default assumptions.
-
requirement = ${requirement}
driver.dest = ${driver.dest}</echo>
			</then>
		</if>
		<if>
			<or>
				<not>
					<isset property="unzip.dest"/>
				</not>
				<contains string="${unzip.dest}" substring="{unzip.dest"/>
			</or>
			<then>
				<var name="unzip.dest" unset="true"/>
				<var name="unzip.dest" value="${basedir}/../target/${requirement}"/>
				<echo>WARING! unzip.dest is not specified in 
	requirements/${requirement.name}/build.properties or 
	requirements/${requirement.name}/buildRequirement.xml.
	Falling back to default assumption.
-
unzip.dest = ${unzip.dest}</echo>
			</then>
		</if>
	</target>

	<target name="check.archive" depends="init,defaults">
		<echo>Checking the requirement's archive ${build.archive}</echo>
		<if>
			<available file="${driver.dest}/${build.archive}" />
			<then>
				<if>
					<isset property="md5" />
					<then>
						<echo>Archive is downloaded and MD5 checksum is provided</echo>
						<echo level="verbose">Calcualting checksum for downloaded archive</echo>
						<checksum file="${driver.dest}/${build.archive}" property="current.md5"/>
						<echo level="verbose">${current.md5} calculated</echo>
						<echo level="verbose">${md5} provided</echo>
						<condition property="archive.exists" >
							<equals arg1="${current.md5}" arg2="${md5}"/>
						</condition>
						<if>
							<isset property="archive.exists" />
							<then>
								<echo>Downloaded archive is correct, download is not required</echo>
							</then>
							<else>
								<echo>Downloaded archive checksum is not correct, new download required</echo>
							</else>
						</if>
					</then>
					<else>
						<echo>Archive is downloaded and no MD5 checksum is provided</echo>
						<property name="archive.exists" value="true"/>
					</else>
				</if>
			</then>
			<else>
				<echo>Archive has not downloaded yet, download required</echo>
			</else>
		</if>
	</target>

	<target name="download.archive" depends="check.archive" unless="archive.exists">
		<if>
			<or>
				<equals arg1="${settings.offline}" arg2="true" />
				<equals arg1="${maven.test.skip}" arg2="true" />
				<equals arg1="${skipDownload}" arg2="true" />
			</or>
			<then>
				<echo>Skip download for ${build.uri}/${build.archive}</echo>
			</then>
			<else>
				<mkdir dir="${driver.dest}"/>
				<get taskname="download ${requirement}"
					src="${build.uri}/${build.archive}" 
					dest="${driver.dest}/${build.archive}" />
				<antcall target="post.download.requirement"/>
			</else>
		</if>
	</target>

	<target name="post.download.requirement">
	</target>	

</project>
