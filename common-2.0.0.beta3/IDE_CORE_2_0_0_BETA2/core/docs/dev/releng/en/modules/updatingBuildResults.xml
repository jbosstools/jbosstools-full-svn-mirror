<chapter id="updatingBuildResults">
	<title>Adding your builders artifacts to the build results page</title>
	
	<section>
		<title>Editing the buildResults.xml ant script</title>
		<para>You will first need to take a look at the ant script <literal>builders/product/buildResults.xml</literal></para>
		<orderedlist>
			<listitem>
				Add your builder's properties to the <literal>get.build.properties</literal> target.
				<orderedlist>
					<listitem>
						Load the version tag for your builder into the <literal>&lt;your-builder-name&gt;.versionTag</literal> property.
						This is easily done by adding a call the macro <literal>get.version.tag</literal>, i.e.:
						<programlisting>
&lt;get.version.tag builder="your-builder-name" property="your-builder-name.versionTag"/></programlisting>
					</listitem>
					<listitem>
						Set a filename property that contains the generated zip file for your builder. The filename should match the <literal>archiveName</literal>
						property from your <literal>customTargets.xml</literal> in the <literal>assemble.your_feature_name</literal> target.
						Follow the example of the other builders, i.e.:
						<programlisting>
&lt;property name="jbosside-your-builder-name-filename" value="JBossIDE-YourBuilderName-${your-builder-name.versionTag}.zip"/&gt;</programlisting>
					</listitem>
					<listitem>
						Set a status property that indicates the failure or success of your builder's execution.
						Again, you will need to follow the example of the other builders, i.e.:
						<programlisting>
&lt;get.status file="${product.build.directory}/your-builder-name/${jbosside-your-builder-name-filename}" property="jbosside-your-builder-name-status"/&gt;</programlisting>
					</listitem>
				</orderedlist>			
			</listitem>
			<listitem>
				Add matching filter tokens for your properties in the <literal>build.results</literal> target.
				<orderedlist>
					<listitem>
						You will need to add filters for both your status and filename properties that you set above.
						These will again follow the pattern of the other builders, i.e.:
						<programlisting>
&lt;filter token="jbosside-your-builder-name-status" value="${jbosside-your-builder-name-status}"/&gt;
&lt;filter token="jbosside-your-builder-name-filename" value="${jbosside-your-builder-name-filename}"/&gt;</programlisting>
					</listitem>
				</orderedlist>
			</listitem>
		</orderedlist>
	</section>
	
	<section>
		<title>Updating the html page</title>
		<para>The html page is actually a template file where all of the variables listed in the buildResults.xml ant script get replaced, and then copied into a final
		buildResults.html. In order to edit the html output of the results page, you will need to edit <literal>builders/product/buildResults.html.template</literal></para>
		
		<para>
		The most basic thing you can do to update the html results page is to add 2 rows to the bottom table which includes download links for each specific component.
		Again, it's easiest to start with what the other builders already have; your builder should follow this basic template:
		<programlisting>
&lt;tr&gt;&lt;td class="status"&gt;&lt;b&gt;Status&lt;/b&gt;&lt;/td&gt;&lt;td class="platform"&gt;&lt;b&gt;Platform&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Download&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="status"&gt;&lt;img src="images/%jbosside-your-builder-name-status%.gif"/&gt;&lt;/td&gt;&lt;td class="platform"&gt;ALL&lt;/td&gt;&lt;td&gt;&lt;a href="%jbosside-download-root%/your-builder-name/%jbosside-your-builder-name-filename%"&gt;%jbosside-your-builder-name-filename%&lt;/a&gt; (&lt;a href="%jbosside-download-root%/your-builder-name/%jbosside-your-builder-name-filename%.MD5"&gt;md5&lt;/a&gt;)&lt;/td&gt;&lt;/tr&gt;
		</programlisting>
		</para>
		
	</section>
</chapter>