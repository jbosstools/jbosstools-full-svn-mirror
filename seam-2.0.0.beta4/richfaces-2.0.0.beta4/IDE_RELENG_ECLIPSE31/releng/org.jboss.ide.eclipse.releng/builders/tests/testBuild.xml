<project name="JBossIDE tests" default="testBuild">
	<property name="builder.root" value="${build.root}/builders"/>
	
	<taskdef classpath="${builder.root}/../lib/ant-contrib.jar" resource="net/sf/antcontrib/antlib.xml"/>
	
	<property file="${builder.root}/../global.properties"/>
	<property file="${builder.root}/product/build.properties"/>
	
	<property name="product.build.directory" value="${product.build.root}/${product.versionTag}"/>
	
	<property file="${product.build.root}/buildData.properties"/>
	<property file="${builder.root}/tests/build.properties"/>
	
	<import file="../common/scp.xml"/>
	<import file="../common/common.xml"/>
	
	<target name="testBuild">
		<!--  note that in order to run the unit tests for JBossIDE, the build process must first be completed -->
		<property name="test-root" value="${product.build.directory}/tests"/>
		<property name="test-eclipse-root" value="${test-root}/eclipse"/>
		<property name="test-results-root" value="${test-root}/test-results"/>
		
		<echo>Extracting test eclipse workbench to ${test-root}</echo>
		<ant target="unzipEclipse" antfile="../../requirements/eclipse/buildRequirement.xml">
			<property name="eclipseInstallDir" value="${test-root}"/>
			<property name="eclipseDownloadTo" value="${product.build.root}"/>
		</ant>
		
		<echo>Copying test framework</echo>
		<unzip dest="${test-root}">
			<fileset dir="../../requirements/testframework">
				<include name="eclipse-test-framework-*.zip"/>
			</fileset>
		</unzip>
		
		<unzip dest="${test-root}">
			<fileset dir="${product.build.directory}/all">
				<include name="**/*.zip"/>
			</fileset>
		</unzip>
		
		<unzip dest="${test-eclipse-root}">
			<fileset dir="${product.build.directory}/tests">
				<include name="*.zip"/>
			</fileset>
		</unzip>
		
		<property name="test-library"
			value="${test-eclipse-root}/plugins/org.eclipse.test_3.1.0/library.xml"/>
		
		<for list="${test.plugins}" param="test.plugin">
			<sequential>
				<propertyregex override="true" property="test-type"
					input="@{test.plugin}"
					regexp="^([^:]+):"
					select="\1"/>
				<propertyregex override="true" property="plugin-name"
					input="@{test.plugin}"
					regexp=":([^:]+):"
					select="\1"/>
				<propertyregex override="true" property="classname"
					input="@{test.plugin}"
					regexp=":([^:]+)$"
					select="\1"/>
			
				<property name="plugin-path" value="${test-eclipse-root}/plugins"/>
					
				<echo>performing "${test-type}" test on plugin "${plugin-name}" class "${classname}"</echo>
				<runtarget target="${test-type}-test"/>
			</sequential>
		</for>
		
		<mkdir dir="${test-results-root}" />
		
		<ant target="collect" antfile="${test-library}" dir="${test-eclipse-root}">
			<property name="includes" value="org.*.xml"/>
			<!-- for some reason junitreport requires this filename to be relative -->
			<property name="output-file" value="../test-results/org.jboss.ide.eclipse.tests.xml"/>
		</ant>

		<runtarget target="apply-stylesheet"/>
		<runtarget target="clean-test-eclipse"/>
	</target>
	
	<target name="apply-stylesheet">
		<style basedir="${test-results-root}" destdir="${test-results-root}" includes="*.xml"
			extension=".html" style="${build.root}/builders/tests/junit.xsl"/>

		<style basedir="${test-results-root}" destdir="${test-results-root}" includes="*.xml"
			extension=".properties" style="${build.root}/builders/tests/junit-properties.xsl"/>
	</target>
	
	<target name="core-test">
		<antcall target="eclipse-test">
			<param name="application" value="org.eclipse.test.coretestapplication"/>
		</antcall>
	</target>
	
	<target name="ui-test">
		<antcall target="eclipse-test">
			<param name="application" value="org.eclipse.test.uitestapplication"/>
		</antcall>
	</target>
	
	<target name="eclipse-test">
		<if>
			<equals arg1="${debug-tests}" arg2="true"/>
			<then>
				<property name="debug-params" value="-Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=y"/>
			</then>
			<else>
				<property name="debug-params" value=""/>
			</else>
		</if>
		<java dir="${test-eclipse-root}" fork="true" classname="org.eclipse.core.launcher.Main">
			<classpath><fileset file="${test-eclipse-root}/startup.jar"/></classpath>
			<jvmarg line="${debug-params}"/>
			<arg line="-application ${application} -dev bin -data ${test-root}/workspace"/>
			<arg line="formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,${classname}.xml"/>
			<arg line="-testPluginName ${plugin-name} -classname ${classname}"/>
		</java>
	</target>
		
	<target name="clean-test-eclipse">
		<delete includeemptydirs="true">
			<fileset defaultexcludes="false" dir="${test-eclipse-root}">
				<include name="**/*"/>
			</fileset>
			<!--fileset defaultexcludes="false" dir="${test-root}/workspace">
				<include name="**/*"/>
			</fileset-->
		</delete>
	</target>
</project>
