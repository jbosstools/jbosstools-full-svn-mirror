<?xml version="1.0" encoding="UTF-8"?>
<chapter id="ManageJBossASFromRedHatDeveloperStudio" xreflabel="ManageJBossASFromRedHatDeveloperStudio">
  <?dbhtml filename="ManageJBossASFromRedHatDeveloperStudio.html"?>
  <chapterinfo>
    <keywordset>
      <keyword>Red Hat Developer Studio</keyword>
      <keyword>Eclipse</keyword>
      <keyword>Deploy</keyword>
      <keyword>Deployment</keyword>
      <keyword>JBoss</keyword>
    </keywordset>
  </chapterinfo>
 <title>Manage JBoss AS from Red Hat Developer Studio</title>
 <para>Red Hat Developer Studio ships with <property>JBoss EAP v.4.2</property> bundled. When you followed the default installation of Red Hat Developer Studio, you should already have a <property>JBoss 4.2 server</property> installed and defined. To run <property>JBoss AS 4.2</property> you need JDK 1.5., JDK 6 is not formally supported yet, although you may be able to start the server with it.</para>
 <section id="JBossbundled">
  <?dbhtml filename="JBossbundled.html"?>
  <title>How to Manage the JBoss AS Bundled in RHDS</title>
  <para></para>
  <section id="StartingServer">
  <?dbhtml filename="StartingServer.html"?>
  <title>Starting JBoss server</title>
  <para>Starting <property>JBoss server</property> is quite simple. Red Hat Developer Studio allows you to control its behaviour with the help of a special toolbar: where you could start it in a regular or debug mode, stop it, or restart it.</para>
  <itemizedlist>
  <listitem><para>To launch the server click the green-with-white-arrow icon on the <property>JBoss Server View </property>or right click server name in this view and select <emphasis><property>Start</property></emphasis>. If this view is not open, select <emphasis>Window &gt; Show View &gt; Other &gt; Server &gt; JBoss Server View</emphasis></para></listitem>
  </itemizedlist>
  <figure>
<title>Starting From Icon</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/startingfromicon.png"/>
        </imageobject>
</mediaobject>
</figure>

<figure>
<title>Starting from JBoss Server View</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/startingfromserversview.png"/>
        </imageobject>
</mediaobject>
</figure>

<para>While launching, Server output is written to the Console view:</para>

<figure>
<title>Console output</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/consoleoutput.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>When the server is started you should see &quot;Started&quot; right to its name in <property>JBoss Server</property> view (column &quot;Status&quot;).</para>
<figure>
<title>Server is Started</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/serverstarted.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>To see event log after the server is started, expand &quot;Event Log&quot; branch beneath <property>JBoss Server</property> View:</para>
<figure>
<title>Event Log</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/eventlog.png"/>
        </imageobject>
</mediaobject>
</figure>
  </section>
  <section id="StoppingJBoss">
  <?dbhtml filename="StoppingJBoss.html"?>
  <title>Stopping JBoss server</title>
  <para>To stop the server, click the <emphasis><property>Stop</property></emphasis> icon in <property>JBoss Server View </property> or right click the server name and press <emphasis><property>Stop</property></emphasis>.</para>
  <figure>
<title>Stopping server</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/stoppingserver2.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>When the server is stopped you will see &quot;Stopped&quot; next to its name in the Status column.</para>
  </section>
  <section id="ServerPreferences">
  <?dbhtml filename="ServerPreferences.html"?>
  <title>Server Container Preferences</title>
  <para>You can control how Red Hat Developer Studio interacts with servlet containers in Preferences. In order to do this, select <emphasis>Window &gt; Preferences &gt; JBoss Tools &gt; JBoss Servers</emphasis> and switch to the desired server:</para>
  <figure>
<title>Server preferences</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/serverpreferences.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>Also you can double click the server name in <property>JBoss Server</property> view and open an overview of the server. Here you can specify some common settings: host name, server name, runtime and so on.</para>
<figure>
<title>Server overview</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/serveroverview.png"/>
        </imageobject>
</mediaobject>
</figure>

  </section>
  </section>
  <section id="JBossInstances">
  <?dbhtml filename="JBossInstances.html"?>
  <title>How to Manage JBoss AS Instances in RHDS</title>
  <para>Although Red Hat Developer Studio works closely with <property>JBoss EAP 4.2</property> we do not ultimately tie you to any particular server for deployment. There are some servers that Studio supports directly (via the bundled Eclipse WTP plug-ins). Suppose you want to deploy the application to <property>JBoss 4.2.1 server</property>. First of all you need to install it.</para>
 <section id="JBossInstalling">
  <?dbhtml filename="JBossInstalling.html"?>
  <title>JBoss AS Installation</title>
  <itemizedlist>
<listitem><para>Download the binary package of <property>JBoss 4.2.1</property> and save it on your computer: <ulink url="http://labs.jboss.com/jbossas/downloads">http://labs.jboss.com/jbossas/downloads</ulink></para></listitem>
</itemizedlist>
<para>It does not matter where on your system you install <property>JBoss</property>. Note, however, that installing <property>JBoss</property> into a directory that has a name containing spaces causes problems in some situations with Sun-based VMs. Thus, try to avoid using installation folders that have spaces in their names.</para>
<para>There is no requirement for root access to run <property>JBoss</property> on UNIX/Linux systems because none of the default ports are within the 0-1023 privileged port range.</para>
<itemizedlist continuation="continues">
<listitem><para>After you have the binary archive you want to install, use the JDK jar tool (or any other ZIP extraction tool) to extract the jboss-4.2.1.zip archive contents into a location of your choice. The jboss-4.2.1.tgz  archive is a gzipped tar file that requires a gnutar compatible tar which can handle the long pathnames in the archive. The extraction process will create a jboss-4.2.1 directory. </para></listitem>
</itemizedlist>
</section>
 
 <section id="AddingJBossServer">
  <?dbhtml filename="AddingJBossServer.html"?>
  <title>Adding and configuring JBoss server</title>
  <para>Now we should add just installed server into server manager in Red Hat Developer Studio.</para>
  <itemizedlist>
  <listitem><para>Open the <property>JBoss Server</property> View by selecting <emphasis>Window &gt; Show View &gt; Other &gt; Server &gt; JBoss Server View</emphasis>. You will see <property>JBoss Server</property> view.</para></listitem>
  <listitem><para>Right click anywhere in this view and select New Server.</para></listitem>
<listitem><para>Select <emphasis>JBoss, a division of Red Hat &gt; JBoss v4.2</emphasis> and click the &quot;Installed Runtimes&quot; button to select a new installed runtime.</para></listitem>
</itemizedlist>
<figure>
<title>Selecting server type</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/servertype.png"/>
        </imageobject>
</mediaobject>
</figure>
     
     <itemizedlist continuation="continues">
         <listitem><para>Click &quot;Add&quot; button to add a new jboss runtime.</para></listitem>
         <listitem><para>Select <emphasis>JBoss, a division of Red Hat &gt; JBoss v4.2</emphasis> and press Next.</para></listitem>
     </itemizedlist>

     <figure>    
<title>Installed Runtimes</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/jbossruntime2.png"/>
        </imageobject>
</mediaobject>
</figure>



<itemizedlist continuation="continues">
<listitem><para>In the next step make Red Hat Developer Studio to know where you have installed the server and define JRE.</para></listitem>
</itemizedlist>
<figure>
<title>Defining JBoss Runtime</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/jbossruntime.png"/>
        </imageobject>
</mediaobject>
</figure>
<note>
    <title>Note:</title>
    <para>When adding a new server you will need to specify what JRE to use. It is important to set this value to a full JDK, not JRE. Again, you need a full JDK to run Web applications, JRE will not be enough.</para>
</note>
<itemizedlist continuation="continues">
  <listitem><para>In the following window leave all settings default or give your name to a new jboss server and press Finish.</para></listitem>
</itemizedlist>
<figure>
<title>Adding new runtime</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/addingjbossserver.png"/>
        </imageobject>
</mediaobject>
</figure>
  <para>A new runtime will now appear in the <emphasis>Preferences &gt; Server &gt; Installed Runtimes</emphasis> dialog.</para>
<figure>
<title>Runtime is added</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/addedruntime.png"/>
        </imageobject>
</mediaobject>
</figure>

<itemizedlist continuation="continues">
  <listitem><para>Click OK. Then select a new added runtime in Server runtime drop down list and click Next button twice.</para></listitem>
</itemizedlist>
<figure>
<title>Choosing runtime</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/choosingruntime.png"/>
        </imageobject>
</mediaobject>
</figure>
  <itemizedlist continuation="continues">
  <listitem><para>In the last wizard&apos;s dialog modify the projects that are configured on the server and click Finish.</para></listitem>
  </itemizedlist>
  <figure>
<title>Configuring Projects</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/configuringprojects.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>A new <property>JBoss server</property> should now appear in <property>JBoss Server</property> View.</para>  
<figure>
<title>New JBoss Server</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/newjbossserver.png"/>
        </imageobject>
</mediaobject>
</figure>

  </section>

 
  </section>
   
    
    <section id="Server Manager Features">
        <?dbhtml filename="JBossbundled.html"?>
        <title>Server Manager Features</title>
    <para>The JBoss AS Perspective is similar to the Java perspective, but it contains a few additional views, as well as an addition to the workbench toolbar. Two of the additional views are standard views, specifically the <property>Console view</property> and the <property>Properties view</property>. The other two views that are added are the <property>Archives View</property>  and the <property>JBoss Servers View</property>.</para>
        
          
      <section id="JBossServersView">
            <?dbhtml filename="JBossServerView.html"?>
            <title>The JBoss Servers View</title>
          <para>This chapter will focus on the the JBoss Server's View and it's related workbench toolbar actionsets. The JBoss Servers View is based on the Webtool's view, Servers View. The top half of the JBoss Servers View essentially embeds the original Servers View directly into it, making slight changes to the context menu.
            A second half was added to provide additional information about the server selected in the top half. In the image provided, categories in the second half include which modules are currently deployed.</para>
            
            <figure>
                <title>The JBoss Servers View</title>
                <mediaobject> 
                    <imageobject>
                        <imagedata fileref="images/jbossserverview.png"/>
                    </imageobject>
                </mediaobject>
            </figure>
      
    
    <para>In order to access the view's preferences, you should access <emphasis><property>Window -> Preferences -> JBoss IDE -> JBoss Servers
        -> View</property></emphasis>. This preference page allows you to select which view extensions you want on or off, the order they appear
        in the view, as well as any other extension-specific preferences that may be available.</para>
    <figure>
        <title>View Preferences</title>
        <mediaobject> 
            <imageobject>
                <imagedata fileref="images/Enableprefer.png"/>
            </imageobject>
        </mediaobject>
    </figure>
    <para>Extender is meant to provide additional functionality relevent to the server selected in the top half of the view. If a standard server element is selected from above, some
        of the extensions may still provide the additional information. Others may not. 
       
        So, let's look at the currently available extensions to the JBoss Server's View.</para>
    <figure>
        <title>View Extensions</title>
        <mediaobject> 
            <imageobject>
                <imagedata fileref="images/JBVExtensions.png"/>
            </imageobject>
        </mediaobject>
    </figure>
    <para>The <property>modules</property> section shows what modules are currently deployed to the server, and allows you to remove them
        from the server, or force a full republish upon them. It only shows which modules have been deployed through eclipse,
        not any and all modules that happen to be in the deploy directory.</para>
    <figure>
    <title>Modules Action</title>
    <mediaobject> 
        <imageobject>
            <imagedata fileref="images/JBVModulesactions.png"/>
        </imageobject>
    </mediaobject>
    </figure>
    <para>The Event Log will show relevent information to your server's startup, shutdown, and publish processes. This allows
        you to keep an eye on what's going on (such as automatic incremental deployment if you have it enabled).
        The only action available is to clear the event log. However if the properties view is opened, you can receive further
        information on each event log item (when available).</para>
    <figure>
        <title>Event Log Actions</title>
        <mediaobject> 
            <imageobject>
                <imagedata fileref="images/JBVEventlogactions.png"/>
            </imageobject>
        </mediaobject>
    </figure>
    <figure>
        <title></title>
        <mediaobject> 
            <imageobject>
                <imagedata fileref="images/JBVServerisstopped.png"/>
            </imageobject>
        </mediaobject>
    </figure>
    <para>The XML Configuration category allows you to quickly browse to descriptor files in your server's deploy directory and
        check or change the values. It's use requires the properties view. Basically, an xpath is a path used to access
        some specific part of an xml document.</para>
    <figure>
        <title>XML Configuration and Properties</title>
        <mediaobject> 
            <imageobject>
                <imagedata fileref="images/JBVxmlconfigandprop.png"/>
            </imageobject>
        </mediaobject>
    </figure>
          <para>The view itself contains only a list of categories. By right-clicking on XML Configuration, you can create a new category.
              Ports is provided by default and is filled with many of the most commonly used ports in the JBoss Server</para>
          <figure>
              <title>Adding New Category</title>
              <mediaobject> 
                  <imageobject>
                      <imagedata fileref="images/JBSVaddingcategory.png"/>
                  </imageobject>
              </mediaobject>
          </figure>
          <para>The view itself contains only a list of categories. By right-clicking on XML XPaths, you can create a new category.
              Ports is provided by default and is filled with many of the most commonly used ports in the JBoss Server.</para>
          <figure>
              <title>Adding New XPath</title>
              <mediaobject> 
                  <imageobject>
                      <imagedata fileref="images/JBSVAddxpath.png"/>
                  </imageobject>
              </mediaobject>
          </figure>
          <para>To begin, you can either right-click on a category in the view, or when browsing a category in the properties view,
              right-clicking anywhere. This will allow you to select New XPath. After that, the dialog shown below will appear.</para>
          <figure>
              <title>Adding New XPath</title>
              <mediaobject> 
                  <imageobject>
                      <imagedata fileref="images/JBSVAddinganxpath.png"/>
                  </imageobject>
              </mediaobject>
          </figure>
          <para>As you type, the fields autocomplete to help you locate exactly what xpath you're looking for. The goal here is to
              get an end result where the xpath matches up with an easily changed property. With that in mind, if the property
              you want to change is the text of an element, then the final field Attribute Name
                  should be left blank and your xpath should end with port.
                  If, on the other hand, your desired field is the port attribute of &lt;fieldName port="35"&gt;, then your xpath will end
                      with fieldName and your Attribute Name will be "port".
                      When finished, you can click preview to see how many matches you have for that particular xpath, as shown below.</para>
          <figure>
             <title>XPath Preview</title>
              <mediaobject> 
                  <imageobject>
                      <imagedata fileref="images/JBSVxpathpreview.png"/>
                  </imageobject>
              </mediaobject>
          </figure>
      </section>
    
    <section id="Deploy to Server">
        <?dbhtml filename="DeployToServer.html"?>
        <title>Deploy to Server</title>
        <para>There is a <property>Deploy to server</property> in the context menu of files to allow single file deployement. To deploy these non-WTP files/projects right click on the file (-ds.xml, .ear, .jar etc.) and select <emphasis><property>Deploy To server</property></emphasis> and it will be automatically deployed.</para>
        <figure>
            <title>Deploy to Sever</title>
            <mediaobject> 
                <imageobject>
                    <imagedata fileref="images/deploytoserver.png"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>The deployed files are listed side-by-side with other <property>modules</property> that are deployed to the server.</para>
    </section>
</section>
</chapter>
