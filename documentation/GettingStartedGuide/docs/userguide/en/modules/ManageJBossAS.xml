<?xml version="1.0" encoding="UTF-8"?>
<chapter id="ManageJBossASFromRedHatDeveloperStudio" xreflabel="ManageJBossASFromRedHatDeveloperStudio">
  <?dbhtml filename="ManageJBossASFromRedHatDeveloperStudio.html"?>
  <chapterinfo>
    <keywordset>
      <keyword>Red Hat Developer Studio</keyword>
      <keyword>Eclipse</keyword>
      <keyword>Deploy</keyword>
      <keyword>Deployment</keyword>
      <keyword>JBoss</keyword>
    </keywordset>
  </chapterinfo>
 <title>Manage JBoss AS from Red Hat Developer Studio</title>
    <para>Red Hat Developer Studio ships with <property>JBoss EAP v.4.2</property> bundled. When you followed the default installation of Red Hat Developer Studio, you should already have a JBoss 4.2 server installed and defined. To run JBoss AS 4.2 you need JDK 1.5, JDK 6 is not formally supported yet, although you may be able to start the server with it.</para>
 <section id="JBossbundled">
  <?dbhtml filename="JBossbundled.html"?>
  <title>How to Manage the JBoss AS Bundled in RHDS</title>
  <para></para>
  <section id="StartingServer">
  <?dbhtml filename="StartingServer.html"?>
  <title>Starting JBoss server</title>
  <para>Starting <property>JBoss server</property> is quite simple. Red Hat Developer Studio allows you to control its behaviour with the help of a special toolbar: where you could start it in a regular or debug mode, stop it or restart it.</para>
  <itemizedlist>
      <listitem><para>To launch the server click the green-with-white-arrow icon on the <property>JBoss Server View </property>or right click server name in this view and select <emphasis><property>Start</property></emphasis>. If this view is not open, select <emphasis><property>Window &gt; Show View &gt; Other &gt; Server &gt; JBoss Server View</property></emphasis></para></listitem>
  </itemizedlist>
  <figure>
<title>Starting from Icon</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/startingfromicon.png"/>
        </imageobject>
</mediaobject>
</figure>

<figure>
<title>Starting from JBoss Server View</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/startingfromserversview.png"/>
        </imageobject>
</mediaobject>
</figure>

<para>While launching, server output is written to the Console view:</para>

<figure>
<title>Console Output</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/consoleoutput.png"/>
        </imageobject>
</mediaobject>
</figure>
      <para>When the server is started you should see <emphasis><property>Started</property></emphasis> right to its name in <property>JBoss Server View</property> (column &quot;Status&quot;).</para>
<figure>
<title>Server Is Started</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/serverstarted.png"/>
        </imageobject>
</mediaobject>
</figure>
      <para>To see event log after the server is started, expand <property>Event Log</property> branch beneath JBoss Server View:</para>
<figure>
<title>Event Log</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/eventlog.png"/>
        </imageobject>
</mediaobject>
</figure>
  </section>
  <section id="StoppingJBoss">
  <?dbhtml filename="StoppingJBoss.html"?>
  <title>Stopping JBoss Server</title>
  <para>To stop the server, click the <emphasis><property>Stop</property></emphasis> icon in JBoss Server View  or right click the server name and press <emphasis><property>Stop</property></emphasis>.</para>
  <figure>
<title>Stopping Server</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/stoppingserver2.png"/>
        </imageobject>
</mediaobject>
</figure>
      <para>When the server is stopped you will see <emphasis><property>Stopped</property></emphasis> next to its name in the Status column.</para>
  </section>
  <section id="ServerPreferences">
  <?dbhtml filename="ServerPreferences.html"?>
  <title>Server Container Preferences</title>
      <para>You can control how Red Hat Developer Studio interacts with servlet containers in Preferences. Select <emphasis><property>Window > Preferences > JBoss Tools > JBoss Servers</property></emphasis> and switch to the desired server:</para>
  <figure>
<title>Server Preferences</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/serverpreferences.png"/>
        </imageobject>
</mediaobject>
</figure>
      <para>Also you can double click the server name in JBoss Server View and open an overview of the server. Here you can specify some common settings: host name, server name, runtime and so on.</para>
<figure>
<title>Server Overview</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/serveroverview.png"/>
        </imageobject>
</mediaobject>
</figure>

  </section>
  </section>
  <section id="JBossInstances">
  <?dbhtml filename="JBossInstances.html"?>
  <title>How to Manage JBoss AS Instances in RHDS</title>
  <para>Although Red Hat Developer Studio works closely with <property>JBoss EAP 4.2</property> we do not ultimately tie you to any particular server for deployment. There are some servers that Studio supports directly (via the bundled Eclipse WTP plug-ins). Suppose you want to deploy the application to <property>JBoss 4.2.1 server</property>. First of all you need to install it.</para>
 <section id="JBossInstalling">
  <?dbhtml filename="JBossInstalling.html"?>
  <title>JBoss AS Installation</title>
  <itemizedlist>
<listitem><para>Download the binary package of <property>JBoss 4.2.1</property> and save it on your computer: <ulink url="http://labs.jboss.com/jbossas/downloads">http://labs.jboss.com/jbossas/downloads</ulink></para></listitem>
</itemizedlist>
     <para>It does not matter where on your system you install JBoss server.</para>
     
     <note>
         <title>Note:</title>
         <para>The installation of JBoss server into a directory that has a name containing spaces provokes problems in some situations with Sun-based VMs. Try to avoid using installation folders that have spaces in their names.</para>
     </note>
    
 <para>There is no requirement for root access to run JBoss Server on UNIX/Linux systems because none of the default ports are within the 0-1023 privileged port range.</para>
<itemizedlist continuation="continues">
<listitem><para>After you have the binary archive you want to install, use the JDK jar tool (or any other ZIP extraction tool) to extract the jboss-4.2.1.zip archive contents into a location of your choice. The jboss-4.2.1.tgz  archive is a gzipped tar file that requires a gnutar compatible tar which can handle the long pathnames in the archive. The extraction process will create a jboss-4.2.1 directory. </para></listitem>
</itemizedlist>
</section>
 
 <section id="AddingJBossServer">
  <?dbhtml filename="AddingJBossServer.html"?>
  <title>Adding and configuring JBoss server</title>
  <para>Now we should add just installed server into server manager in Red Hat Developer Studio.</para>
  <itemizedlist>
  <listitem><para>Open the JBoss Server View by selecting <emphasis><property>Window > Show View > Other > Server > JBoss Server View</property></emphasis>. You will see JBoss Server view.</para></listitem>
      <listitem><para>Right click anywhere in this view and select <emphasis><property>New Server</property></emphasis>.</para></listitem>
      <listitem><para>Select <emphasis><property>JBoss, a division of Red Hat > JBoss v4.2</property></emphasis> and click the <emphasis><property>Installed Runtimes</property></emphasis> button to select a new installed runtime.</para></listitem>
</itemizedlist>
<figure>
<title>Selecting Server Type</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/servertype.png"/>
        </imageobject>
</mediaobject>
</figure>
     
     <itemizedlist continuation="continues">
         <listitem><para>Click <emphasis><property>Add</property></emphasis> button to add a new jboss runtime.</para></listitem>
         <listitem><para>Select <emphasis><property>JBoss, a division of Red Hat > JBoss v4.2</property></emphasis> and press <emphasis><property>Next</property></emphasis>.</para></listitem>
     </itemizedlist>

     <figure>    
<title>Installed Runtimes</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/jbossruntime2.png"/>
        </imageobject>
</mediaobject>
</figure>



<itemizedlist continuation="continues">
<listitem><para>In the next step make Red Hat Developer Studio to know where you have installed the server and define JRE.</para></listitem>
</itemizedlist>
<figure>
<title>Defining JBoss Runtime</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/jbossruntime.png"/>
        </imageobject>
</mediaobject>
</figure>
<note>
    <title>Note:</title>
    <para>When adding a new server you will need to specify what JRE to use. It is important to set this value to a full JDK, not JRE. Again, you need a full JDK to run Web applications, JRE will not be enough.</para>
</note>
<itemizedlist continuation="continues">
    <listitem><para>In the following window leave all settings default or give your name to a new jboss server and press <emphasis><property>Finish</property></emphasis>.</para></listitem>
</itemizedlist>
<figure>
<title>Adding New Runtime</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/addingjbossserver.png"/>
        </imageobject>
</mediaobject>
</figure>
     <para>A new runtime will now appear in the <emphasis><property>Preferences > Server > Installed Runtimes</property></emphasis> dialog.</para>
<figure>
<title>Runtime Is Added</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/addedruntime.png"/>
        </imageobject>
</mediaobject>
</figure>

<itemizedlist continuation="continues">
    <listitem><para>Click <emphasis><property>OK</property></emphasis>. Then select a new added runtime in Server runtime drop down list and click <emphasis><property>Next</property></emphasis> button twice.</para></listitem>
</itemizedlist>
<figure>
<title>Choosing Runtime</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/choosingruntime.png"/>
        </imageobject>
</mediaobject>
</figure>
<itemizedlist>
      <listitem><para>In the next dialog verify a <property>JBoss</property> runtime information and if something is unfair go back and correct it.</para></listitem>
  </itemizedlist>
  <figure>
<title>Configuring Projects</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/choosingruntime23.png"/>
        </imageobject>
</mediaobject>
</figure>
  <itemizedlist>
      <listitem><para>In the last wizard&apos;s dialog modify the projects that are configured on the server and click <emphasis><property>Finish</property></emphasis>.</para></listitem>
  </itemizedlist>
  <figure>
<title>Configuring Projects</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/configuringprojects.png"/>
        </imageobject>
</mediaobject>
</figure>
     <para>A new JBoss server should now appear in JBoss Server View.</para>  
<figure>
<title>New JBoss Server</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/newjbossserver.png"/>
        </imageobject>
</mediaobject>
</figure>

  </section>

 
  </section>
   
    
    <section id="Server Manager Features">
        <?dbhtml filename="ServerManagerFeatures.html"?>
        <title>Server Manager Features</title>
        
        <section id="JBossASPerspective">
            <title>JBoss AS Perspective</title>
            <para>The <property>JBoss AS</property> Perspective is similar to the Java perspective, but it contains a few additional views. Two of the additional views are standard views, specifically the <property>Console </property> view and the <property>Properties</property> view. 
                The other two views that are added are the <property>Project archives</property> view  and the <property>JBoss Servers View</property>.</para>
      
      <section id="JBossServersView">
            <?dbhtml filename="JBossServerView.html"?>
            <title>The JBoss Servers View</title>
          <para>This chapter will focus on the the JBoss Server's View. The JBoss Servers View is based on the Webtool's view, Servers View. The top half of the JBoss Servers View essentially embeds the original Servers View directly into it, making slight changes to the context menu.
            A second half was added to provide additional information about the server selected in the top half. In the image provided, categories in the second half include which modules are currently deployed.</para>
            
            <figure>
                <title>The JBoss Servers View</title>
                <mediaobject> 
                    <imageobject>
                        <imagedata fileref="images/jbossserverview.png"/>
                    </imageobject>
                </mediaobject>
            </figure>
      
    
    <para>In order to access the view's preferences, you should access <emphasis><property>Window > Preferences > JBoss Tools > JBoss Servers > View</property></emphasis>. 
        This preference page allows you to select which view extensions you want on or off, the order they appear
        in the view, as well as any other extension-specific preferences that may be available.</para>
    <figure>
        <title>View Preferences</title>
        <mediaobject> 
            <imageobject>
                <imagedata fileref="images/Enableprefer.png"/>
            </imageobject>
        </mediaobject>
    </figure>
    <para>Extender is meant to provide additional functionality relevent to the server selected in the top half of the view. If a standard server element is selected from above, some
        of the extensions may still provide the additional information. Others may not. 
       
        So, let's look at the currently available extensions to the JBoss Server's View.</para>
    <figure>
        <title>View Extensions</title>
        <mediaobject> 
            <imageobject>
                <imagedata fileref="images/JBVExtensions.png"/>
            </imageobject>
        </mediaobject>
    </figure>
    <para>The <property>Modules</property> section shows what modules are currently deployed to the server, and allows you to remove them
        from the server, or force a full republish upon them. It only shows which modules have been deployed through Eclipse,
        not any and all modules that happen to be in the deploy directory.</para>
    <figure>
    <title>Modules Action</title>
    <mediaobject> 
        <imageobject>
            <imagedata fileref="images/JBVModulesactions.png"/>
        </imageobject>
    </mediaobject>
    </figure>
          <para>The <property>Event Log</property> will show relevent information to your server's startup, shutdown, and publish processes. This allows
        you to keep an eye on what's going on (such as automatic incremental deployment if you have it enabled).
        The only action available is to clear the event log. However if the properties view is opened, you can receive further
        information on each event log item (when available).</para>
    <figure>
        <title>Event Log Actions</title>
        <mediaobject> 
            <imageobject>
                <imagedata fileref="images/JBVEventlogactions.png"/>
            </imageobject>
        </mediaobject>
    </figure>
    <figure>
        <title>Stopping the Server</title>
        <mediaobject> 
            <imageobject>
                <imagedata fileref="images/JBVServerisstopped.png"/>
            </imageobject>
        </mediaobject>
    </figure>
          <para>The <property>XML Configuration</property> category allows you to quickly browse to descriptor files in your server's deploy directory and
        check or change the values. Its use requires the Properties view. Basically, XML Configuration are XML XPaths where a xpath is a path used to access
        some specific part of an xml document.</para>
    <figure>
        <title>XML Configuration and Properties View</title>
        <mediaobject> 
            <imageobject>
                <imagedata fileref="images/JBVxmlconfigandprop.png"/>
            </imageobject>
        </mediaobject>
    </figure>
          <para>The view itself contains only a list of categories. By right-clicking on <emphasis><property>XML Configuration</property></emphasis>, you can create a new category.
              Ports are provided by default and is filled with many of the most commonly used ports in the JBoss Server.</para>
          <figure>
              <title>Adding New Category</title>
              <mediaobject> 
                  <imageobject>
                      <imagedata fileref="images/JBSVaddingcategory.png"/>
                  </imageobject>
              </mediaobject>
          </figure>
          <para>By right-clicking on <emphasis><property>Ports</property></emphasis>, you can create a new XPaths.</para>
          <figure>
              <title>Adding New XPath</title>
              <mediaobject> 
                  <imageobject>
                      <imagedata fileref="images/JBSVAddxpath.png"/>
                  </imageobject>
              </mediaobject>
          </figure>
          <para>After that, the dialog shown below will appear.</para>
          <figure>
              <title>Adding New XPath</title>
              <mediaobject> 
                  <imageobject>
                      <imagedata fileref="images/JBSVAddinganxpath.png"/>
                  </imageobject>
              </mediaobject>
          </figure>
          <para>As you type, the fields autocomplete to help you locate exactly what xpath you're looking for. The goal here is to
              get an end result where the xpath matches up with an easily changed property. With that in mind, if the property
              you want to change is the text of an element, then the final field Attribute Name
                  should be left blank and your xpath should end with port.
                  If, on the other hand, your desired field is the port attribute of &lt;fieldName port="35"&gt;, then your xpath will end
                      with fieldName and your Attribute Name will be "port".
                      When finished, you can click <emphasis><property>Preview</property></emphasis> to see how many matches you have for that particular xpath, as shown below.</para>
          <figure>
             <title>XPath Preview</title>
              <mediaobject> 
                  <imageobject>
                      <imagedata fileref="images/JBSVxpathpreview.png"/>
                  </imageobject>
              </mediaobject>
          </figure>
      </section>
            <section id="Project_archivesView">
                <title>Project archives View</title>
                <para>Every application, whether plain old Java, J2EE, or some other language altogether, needs to be packaged in some way. In Java-related projects, 
                    many people use ANT. Red Hat Developer Studio comes with our own archives tool with a bit easier and less-verbose XML and a handy user interface.</para>
                <para>The Project Archives plugin consists primarily of a view to set up each packaging configuration. Each project can enable or disable its builder, or depend on the global setting.</para>
                <para>The packaging configuration for each project is stored in that project's root folder, and is in a file named <property>.packages</property>, which has a fairly simple XML
                    structure. Modifying the file by hand is neither required nor reccommended, and using the UI is the official way of modifying your packaging structure.</para>
                <para>Aside from the builder, the other preferences for the plugin are mostly cosmetic, allowing you to show full or truncated paths, show the project at the
                    root, etc. None of these have any effect on the functionality of the packaging plugin.</para>
                
                <section id="Creating an archive">
                    <title>Creating an Archive</title>
                    <para>When creating a new archive, you have some different options at your disposal. If the project has no <property>.packages</property> file, your 
                        options will be presented to you all at once for you to choose from (as above). Otherwise you will right-click inside the view and select <emphasis><property>New Archive</property></emphasis>
                        to see your archive type options.</para>
                    <figure>
                        <title>Create an Archive</title>
                        <mediaobject> 
                            <imageobject>
                                <imagedata fileref="images/archives1.png"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                    <para>JAR is the standard archive type, and does very little configuration, leaving most of the work up to you. You can customize the name, add folders, 
                    filesets, and inner jars to it.</para>
                    <para>The other types, for the most part, simply start off with a default setting, usually the jar with some specific children based on an expected
                    structure of the project. For example, if the project is a dynamic web project, and you create a WAR archive, the archive will be created with a few filesets relevant to the known structure of the project.</para>
                    
                    <para>Because the first page of all new archive wizards are the same, and it is also the only page in the New Jar Wizard, that page is shown below.</para>
                    <figure>
                        <title>New JAR Wizard</title>
                        <mediaobject> 
                            <imageobject>
                                <imagedata fileref="images/archives2.png"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                    
                    <para>The page is pretty simple. All it asks is for the name of your new archive, a destination, which we'll get to in a moment, and whether the archive 
                    is exploded or packaged up.</para>
                    <para>The destination of an archive can be anywhere on the filesystem, anywhere in the workspace, inside some other archive, or inside a folder
                        declared inside an archive. You can browse to workspace or filesystem destinations by clicking on their respective buttons. To select a destination
                        inside some other archive, you'll need to press the <property>Workspace...</property> button. At the bottom of the list, you'll see archives that have been declared in the
                        workspace.</para>
                    <section id="CreatingaFolder">
                        <title>Creating a Folder</title>
                        <para>Creating a folder is much easier. You simply right-click on an archive or folder you want your new folder to be a child under. The only piece of 
                            required information is naming the file.</para>
                    </section>
                    <section id="CreatingaFileSet">
                        <title>Creating a FileSet</title>
                        <para>To create a new fileset, you click on an available target location such as an archive, a nested archive, or a folder within an archive, and select 
                            New Fileset. The New Fileset Wizard requires a destination (where the files will go), and a root directory (or where the files are coming from). 
                            The source can be anywhere in the workspace or from the filesystem at large.</para>
                        <para>Below that, the fileset requires only an includes pattern and an excludes pattern. As you type in either of these fields, the preview viewer should
                            update itself with which files are matched.</para>
                    </section>
                    </section>
                <section id="View Actions">
                    <title>View Actions</title>
                    <figure>
                        <title>Context Menu on the Item</title>
                        <mediaobject> 
                            <imageobject>
                                <imagedata fileref="images/archives3.png"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                    <para>The context menu on the items in the view is extendable, but there are several that come standard. The first is the <property>Build Archive</property> action, enabled
                        only on top-level archives, which initiates a full build on that archive. Editing and deleting nodes are also standard actions, with deletion not needing
                        an explanation. The edit action brings up the wizard associated with that particular node type and allows the details to be changed. The final action
                        contribution here is the ability to publish to a declared server.</para>
                </section>
                <section id="PublishToServer">
                    <title>Publish to Server</title>
                    <figure>
                        <title>Context menu on the item</title>
                        <mediaobject> 
                            <imageobject>
                                <imagedata fileref="images/archives4.png"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                    <para>The dialog above appears after selecting <property>Publish To Server</property>. To simply publish once, you just select the server(s) that you want, and finish. 
                        If you want the Publish to Server action on that particular Archive to always publish to that set of servers, then check the appropriate checkbox. 
                        And finally, to enable automatic publishing upon build events, check the last checkbox.</para>
                    <para>The automatic publishing feature is nice if, for example, your package's destination (where it is built) is a temporary folder and you want the 
                        archive published to several servers. If you only really want your archive published to one server, it might be easier to have the archive's destination
                        folder be the deploy folder of the server.</para>
                </section>
            </section>
      </section>
        
    <section id="Deploy to Server">
        <?dbhtml filename="DeployToServer.html"?>
        <title>Deploy to Server</title>
        <para>In the context menu of files there is a <property>Deploy To Server</property> option that allows a single file deployment. To deploy these non-WTP files/projects right click on the file (-ds.xml, .ear, .jar etc.) and select <emphasis><property>Deploy To server</property></emphasis> and it will be automatically deployed.</para>
        <figure>
            <title>Deploy to Sever</title>
            <mediaobject> 
                <imageobject>
                    <imagedata fileref="images/deploytoserver.png"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>The deployed files are listed side-by-side with other modules that are deployed to the server.</para>
    </section>
</section>
</chapter>
