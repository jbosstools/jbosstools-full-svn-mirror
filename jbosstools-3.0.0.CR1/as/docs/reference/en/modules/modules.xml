<?xml version="1.0" encoding="ISO-8859-1"?>
<chapter id="modules">
	<title>Deploying Modules</title>

	<para>In this chapter it will be described how to deploy modules onto the server.</para>
	<para> First of all it is necessary to say that deploying to a server is mostly painless. There
		are several ways to do it provided by WTP, and some additional methods provided by JBoss
		Tools. These methods are described further in this chapter.</para>

	<section>
		<title>Deploying on the Package Explorer</title>

		<para>On the package explorer it is possible to publish either a project to a server or just
			a signal file. Let&apos;s look at how to do this.</para>
		<section id="run_on_server_wizard">
			<title>Deploying with Run On Server Wizard</title>
			<para> The first WTP method is to right-click on a project, such as a Dynamic Web
				project, EJB project, or EAR project and then select <emphasis>
					<property>Run As &gt; Run on Server</property>
				</emphasis>. The resulting dialog allows you to select which supporting server the
				project can be published to.</para>
			<figure>
				<title>Define a New Server</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/modules/modules_1.png"/>
					</imageobject>
				</mediaobject>
			</figure>
			<para>Click <emphasis>
					<property>Next</property>
				</emphasis> button to see add or remove projects page where you can choose projects
				to configure them on server.</para>
			<figure id="add_rem_proj">
				<title>Add or Remove Projects</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/modules/modules_2.png"/>
					</imageobject>
				</mediaobject>
			</figure>
			<para>This page of the wizard also allows to undeploy modules from the server. For that
				choose proper module(s) from the right and click <emphasis>
					<property> &lt; Remove</property>
				</emphasis>. The modules will be completely undeployed after restarting your server
				or republishing.</para>
			<para>Generally, for the JBoss AS Server Adapters, publishing using this method will
				force a default, best-guess, packaging configuration for your project. This
				best-guess does not publish incrementally, but instead repackages your entire
				project into a <emphasis>
					<property>.war</property>
				</emphasis>, <emphasis>
					<property>.jar</property>
				</emphasis>, or <emphasis>
					<property>.ear</property>
				</emphasis> as appropriate, and then copies that file into the proper deploy
				directory. For quicker smarter deployment, you will need to create archives using
				the <link linkend="Project_archivesView">Project Archives view</link> and customize
				packaging yourself.</para>
		</section>

		<section id="single_file_deployment">
			<?dbhtml filename="DeployToServer.html"?>
			<title>Deploying single files</title>

			<para>Sometimes it becomes necessary to deploy one or more files to a server. For
				that in order not to do a full republish in the context menu of files a <emphasis><property>Deploy To Server</property></emphasis>
				option is provided that allows a single file deployment. To deploy these non-WTP files/projects
				right click on the file (<emphasis>
					<property>-ds.xml</property></emphasis>, <emphasis>
						<property>.ear</property></emphasis>, <emphasis>
							<property>.jar</property></emphasis> etc.) and select <emphasis>
					<property>Deploy To Server</property>
				</emphasis> and it will be automatically deployed.</para>
			<figure>
				<title>Deploy to Sever</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/modules/modules_6.png"/>
					</imageobject>
				</mediaobject>
			</figure>
			<para>The deployed files are listed side-by-side with other modules that are deployed to
			the server.</para>
			
			<figure>
				<title>Deployed files on the Server</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/modules/modules_7.png"/>
					</imageobject>
				</mediaobject>
			</figure>

		</section>

	</section>
	<section>
		<title>Deploying with JBoss Server View</title>
		<para>As it has been already mentioned <property>JBoss Server View</property> contains two
			parts: the top part that displays all defined servers and the bottom part which provides
			categories with additional information. Thus, in this section we suggest two more ways
			to deploy resources onto the server.</para>
		<section>
			<title>Top part of JBoss Server View</title>
			<para>In the top part of the <property>JBoss Servers View</property> like in the Servers
				View you should right click on a server and select the <emphasis>
					<property>Add and Remove Projects</property>
				</emphasis> menu item.</para>
			<figure>
				<title>Add and Remove Projects</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/modules/modules_3.png"/>
					</imageobject>
				</mediaobject>
			</figure>

			<para>This will bring up a <link linkend="add_rem_proj">familiar dialog</link> allowing
				you to either publish projects or modules to a server, or remove them from the
				server. If the selected module is a project like a Dynamic Web project, EJB project,
				or EAR project, it will be published as through <emphasis>
					<property>Run on Server</property>
				</emphasis> wizard, with a best-guess full package. If, however, the selected
				element is an archive from the <link linkend="Project_archivesView">Project Archives
					view</link>, it will be published according to the rules of that module
			type.</para>
		</section>

		<section>
			<title>Bottom part of JBoss Server View</title>
			<para>In the bottom part of <emphasis>
					<property>JBoss Server View</property>
				</emphasis> there is a category called <emphasis>
					<property>Modules</property>
				</emphasis> which should display all currently-published modules on the server.
				Right-clicking on the desired module and selecting <emphasis>
					<property>Full Publish</property>
				</emphasis> will force a full rebuild of the entire module.</para>
			<figure>
				<title>Full Publish</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/modules/modules_4.png"/>
					</imageobject>
				</mediaobject>
			</figure>

			<para>Here, <emphasis>
					<property>Incremental Publish</property>
				</emphasis> is meant to enable publishing of only those parts where changes have
				been made.</para>
		</section>
	</section>
	<section>
		<title>Deploying with Project Archives View</title>
		<para>In the <property>Project Archives View</property> you can right-click on any declared
			archive and select the <emphasis>
				<property>Publish To Server</property>
			</emphasis> element. For more on this subject, see <link linkend="PublishToServer"
				>Publishing to Server</link> in the Project Archives View section.</para>
		<figure>
			<title>Publish to Server</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/modules/modules_5.png"/>
				</imageobject>
			</mediaobject>
		</figure>
		<para> The only way to ensure an <emphasis>
				<property>Incremental Build</property>
			</emphasis>, such as changes to one <emphasis>
				<property>.jsp</property>, </emphasis>
			<emphasis>
				<property>.html</property>, </emphasis> or <emphasis>
				<property>.class</property>
			</emphasis> file, is to enable the builder for that project. This is done by either
			changing the global preferences for the <property>Archives View</property>, or by
			enabling project-specific preferences and ensuring the builder is on.</para>
		<para>The last chapter covers a variety of methods on how you can deploy needed modules onto a
			server.</para>
	</section>
</chapter>
