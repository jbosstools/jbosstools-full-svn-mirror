<?xml version='1.0' encoding='UTF-8'?>
<chapter id="editors_features" xreflabel="editors_features">
    <?dbhtml filename="editors_features.html"?>
<title>Editors Features</title>
<para>JBoss Developer Studio has powerful editor features that help you easily navigate within your application and make use of content and code assist no matter what project file (jsp, xhtml, xml, css, etc.) you are working on.</para>
<section id="OpenOnSelection4Hyperlinknavigation">
<?dbhtml filename="OpenOnSelection(Hyperlinknavigation)"?>
<title>OpenOn</title>

<para><property>OpenOn</property> let&apos;s you easily navigate through your project without using the Package Explorer view (project tree). With OpenOn, you can simply click on a reference to another file and that file will be opened.</para>

<para>OpenOn is available for the following files:</para>
<itemizedlist>
<listitem><para>XML files</para></listitem>
<listitem><para>JSP/XHTML Pages</para></listitem>
    <listitem><para>Java files</para></listitem>
</itemizedlist>
<section id="XMLFiles232">
<?dbhtml filename="XMLFiles"?>
<title>XML Files</title>

<para>Press and hold down the Ctrl key. As you move the mouse cursor over different file references in 
the file, they display an underline. When you have the mouse cursor over the name of the file you want
 to open, click and the file will open in its own editor. In this example the managed bean NameBean will
  open.</para>
<figure>
<title>NameBean Managed Bean</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_1.png" />
        </imageobject>
</mediaobject>
</figure>
<para>This is the result of using  OpenOn</para>
<figure>
<title>NameBean Java Class</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_2.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>You can also try OpenOn with defined attributes.</para>
<figure>
<title>OpenOn With Defined Attributes</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_3.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>You can also open any JSP pages.</para>
<figure>
<title>JSP Page OpenOn</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_4.png"/>
        </imageobject>
</mediaobject>
</figure>
</section>
<section id="JSPPages223">
<?dbhtml filename="GettingStartedwithRHDS.html"?>
<title>JSP Pages</title>

<para><property>OpenOn</property> is also very useful in JSP pages. It will allow you to quickly jump to the reference
 instead of having to hunt around in the project structure.</para>

<para>You can easily open the imported property files.</para>
<figure>
<title>OpenOn With Imported Property Files</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_5.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>Use OpenOn to open a CSS file used with a JSP page:</para>
<figure>
<title>OpenOn With CSS File</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_6.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>Open managed beans:</para>
<figure>
<title>OpenOn With Maneaged Beans</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_7.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>For JSP files in a JSF project, you can also easily open the navigation rules by applying <property>OpenOn</property> to the JSF tag for the navigation outcome:</para>
<figure>
<title>OpenOn With JSF Tag</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_8.png"/>
        </imageobject>
</mediaobject>
</figure>
</section>
</section>

<section id="CodeAssistAndDynamicCodeAssist42BasedOnProjectData">
<?dbhtml filename="CodeAssistAndDynamicCodeAssist(BasedOnProjectData).html"?>
<title>Code Assist and Dynamic Code Assist (based on project data)</title>
<section id="ContentAssistFeatures321">
<?dbhtml filename="ContentAssistFeatures"?>
<title>Content Assist Features</title>
<section id="ContentAssist374">
<?dbhtml filename="ContentAssist.html"?>
<title>Content Assist</title>
<para><property>Content assist</property> is available when working with</para>

<itemizedlist>
<listitem><para>Seam project files</para></listitem>
<listitem><para>JSF project files</para></listitem>
<listitem><para>Struts project files</para></listitem>
<listitem><para>JSP files</para></listitem>
</itemizedlist>
</section>
<section id="JSFProjectFiles3087">
<?dbhtml filename="JSFProjectFiles.html"?>
<title>JSF Project Files</title>

    <para>When working with JSF project in JBoss Developer Studio, you can use various <property>Content Assist features</property> while developing:</para>
<itemizedlist>
<listitem><para>Content Assist for XML, JSP and JSF configuration files</para></listitem>
<listitem><para>Content Assist based on project data</para></listitem>
<listitem><para>Content Assist with graphical JSF editor</para></listitem>
</itemizedlist>
<section id="ContentAssistForXMLJSPAndJSFConfigurationFiles865">
<?dbhtml filename="ContentAssistForXMLJSPAndJSFConfigurationFiles.html"?>
<title>Content Assist for XML, JSP and JSF configuration files</title>

    <para>At any point when working with any XML, JSP and JSF configuration files Content Assist is available to help you. Simply type <emphasis><property>Ctrl-Space</property></emphasis> to see what is available.</para>

<para>Content Assist for JSF configuration file:</para>
<figure>
<title>Content Assist in JSF Configuration File</title>
<mediaobject> 
        <imageobject>
            <imagedata  fileref="images/editors_features/editors_features_9.png" />
        </imageobject>
</mediaobject>
</figure>
<para>Content Assist for JSF JSP file:</para>
<figure>
<title>Content Assist in JSP File</title>
<mediaobject> 
        <imageobject>
            <imagedata  fileref="images/editors_features/editors_features_10.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>Content Assist for other JSF XML project files (web.xml shown):</para>
<figure>
<title>Content Assist in web.xml File</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_11.png" />
        </imageobject>
</mediaobject>
</figure>
</section>
<section id="ContentAssistBasedOnProjectData86">
<?dbhtml filename="ContentAssistBasedOnProjectData.html"?>
<title>Content Assist Based on Project Data</title>

<para>JBoss Developer Studio takes Content Assist to the next level. Studio will
 constantly scan your project and you will be able to insert code into the JSP page from your project that
  includes:</para>
<itemizedlist>
<listitem><para>Values from Property files</para></listitem>
<listitem><para><emphasis role="italic"><property>&quot;Managed beans&quot;</property></emphasis> attributes and methods</para></listitem>
<listitem><para>Navigation Rule Outcomes</para></listitem>
    <listitem><para>JSF variables (context, request etc...)</para></listitem>
</itemizedlist>
<para>The first screenshot shows how to insert message from a Properties files. You simply put the cursor
 inside the <emphasis role="italic"><property>&quot;value&quot;</property></emphasis> attribute and press <emphasis><property>Ctrl-Space</property></emphasis>. JBoss Developer Studio will scan your project and show a list of possible values to insert.</para>
<figure>
<title>Inserting Message</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_12.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>In the following screen shot we are inserting a <emphasis role="italic"><property>&quot;Managed bean&quot;</property></emphasis> attribute value. Again, by simply clicking <emphasis><property>Ctrl-Space</property></emphasis>, JBoss Developer Studio will show a list of all possible values that you can insert:</para>

<para>Once you select a Managed bean, it will show you a list of all available attributes for the selected Managed bean (userBean).</para>
<figure>
<title>Attributes List</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_13.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>Code Assist based on project data will also prompt you for navigation rules that exist in your JSF
 configuration file.</para>
<figure>
<title>Code Assist</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_14.png"/>
        </imageobject>
</mediaobject>
</figure>
</section>
<section id="ContentAssistWithinJSFGraphicalEditor44">
<?dbhtml filename="ContentAssistWithinJSFGraphicalEditor.html"?>
<title>Content Assist within Tree JSF Editor</title>

<para>JBoss Developer Studio also provides Content Assist when working within the Tree JSF 
configuration editor. Just click <emphasis><property>Ctrl-Space</property></emphasis>.</para>
<figure>
<title>Content Assist in Tree JSF Configuration Editor</title>
<mediaobject> 
        <imageobject>
            <imagedata  fileref="images/editors_features/editors_features_15.png" />
        </imageobject>
</mediaobject>
</figure>
<para>If a field contains right class name and you click a link near the field you will come to the file with this class otherwise a new Java Class dialog will be shown:</para>
<figure>
<title>New Java Class</title>
<mediaobject> 
        <imageobject>
            <imagedata  fileref="images/editors_features/editors_features_16.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>If you entered an incorrect name in the field error markers will be shown for field labels and tree items:</para>
<figure>
<title>Error Markers</title>
<mediaobject> 
        <imageobject>
            <imagedata  fileref="images/editors_features/editors_features_17.png"/>
        </imageobject>
</mediaobject>
</figure>
<itemizedlist>
<listitem><para>To add a new property to a managed bean expand <emphasis><property>Managed Beans</property></emphasis> and select <emphasis role="bold"><property>&lt;name_of_bean&gt;</property></emphasis></para></listitem>
<listitem><para>Click <emphasis><property>Add</property></emphasis> button in the Properties panel</para></listitem>
<listitem><para>In the dialog Add Property define a new property. From here also you can generate setters and getters methods:</para></listitem>
</itemizedlist>
<figure>
<title>Create New Property</title>
<mediaobject> 
        <imageobject>
            <imagedata  fileref="images/editors_features/editors_features_18.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>Here you can also add an additional navigation rule to the faces-config.xml file.</para>
<itemizedlist>
<listitem><para>Select <emphasis><property>Navigation Rules</property></emphasis></para></listitem>
<listitem><para>Click <emphasis><property>Add</property></emphasis> button</para></listitem>
<listitem><para>In the dialog <emphasis><property>Add Rule</property></emphasis> define a view and give a name to the rule. Click Finish:</para></listitem>
</itemizedlist>
<figure>
<title>Add New Navigation Rule</title>
<mediaobject> 
        <imageobject>
            <imagedata  fileref="images/editors_features/editors_features_19.png"/>
        </imageobject>
</mediaobject>
</figure>

</section>
</section>
<section id="StrutsProjectFile46s3">
<?dbhtml filename="StrutsProjectFiles.html"?>
<title>Struts Project Files</title>
<section id="ContentAssistForStrutsConfigurationFile75">
<?dbhtml filename="ContentAssistForStrutsConfigurationFile.html"?>
<title>Content Assist for Struts Configuration File</title>
<figure>
<title>Struts Content Assist</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_20.png"/>
        </imageobject>
</mediaobject>
</figure>
</section>
<section id="ContentAssistForStrutsJSPFile07">
<?dbhtml filename="ContentAssistForStrutsJSPFile.html"?>
<title>Content Assist for Struts JSP File</title>
<figure>
<title>Struts JSP Content Assist</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_21.png"/>
        </imageobject>
</mediaobject>
</figure>
</section>
</section>
<section id="JSPPages434">
<?dbhtml filename="JSPPages.html"?>
<title>JSP Pages</title>
<section id="ContentAssistForJSFTags96">
<?dbhtml filename="ContentAssistForJSFTags.html"?>
<title>Content Assist for JSF Tags</title>
<para>JBDS provides full code completion for JSF tags:</para>

<figure>
<title>JSF Tags Content Assist</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_22.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>When the tag is selected the required attributes, if there any, are already inserted and the cursor is located to the first attribute. As this point you can ask for attribute proposals.</para>
<figure>
<title>Attributes Content Assist</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_23.png"/>
        </imageobject>
</mediaobject>
</figure>

</section>
<section id="ContentAssistForJSTLTags6332">
<?dbhtml filename="ContentAssistForJSTLTags.html"?>
<title>Content Assist for JSTL Tags</title>
<figure>
<title>JSTL Tags Content Assist</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_24.png"/>
        </imageobject>
</mediaobject>
</figure>
</section>
<section id="ContentAssistForHTMLTags7454">
<?dbhtml filename="ContentAssistForHTMLTags.html"?>
<title>Content Assist for HTML Tags</title>
<para>Content assist for HTML tags has the same mechanism as for JSF tags:</para>
<figure>
<title>HTML Tags Content Assist</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_25.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>You can use as well attributes proposals for HTML tags:</para>
<figure>
<title>HTML Tags Content Assist</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_26.png"/>
        </imageobject>
</mediaobject>
</figure>
</section>
<section id="ContentAssistForJavaScriptTags67433">
<?dbhtml filename="ContentAssistForJavaScriptTags.html"?>
<title>Content Assist for JavaScript Tags</title>
<figure>
<title>JavaScript Tags Content Assist</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_27.png"/>
        </imageobject>
</mediaobject>
</figure>
</section>

<section id="ContentAssistWithinConfigurationEditor743">
<?dbhtml filename="ContentAssistWithinConfigurationEditor.html"?>
<title>Content Assist within JSF Configuration Editor</title>
<figure>
<title>Content Assist in JSF Configuration Editor</title>
<mediaobject> 
        <imageobject>
            <imagedata  fileref="images/editors_features/editors_features_28.png"/>
        </imageobject>
</mediaobject>
</figure>
</section>
</section>
<section id="ContentAssistForRF">
<?dbhtml filename="ContentAssistForRF.html"?>
<title>Content Assist for Rich Faces components</title>
<para>JBDS indeed provides code completion for Rich Faces framework components. All you have to do is to install Rich Faces libraries into your project. See <ulink url="http://labs.jboss.com/file-access/default/members/jbossrichfaces/freezone/docs/devguide/en/html/GettingStarted.html">here</ulink> how to install.</para>
<figure>
<title>Content Assist for Rich Faces Components</title>
<mediaobject> 
        <imageobject>
            <imagedata  fileref="images/editors_features/editors_features_29.png"/>
        </imageobject>
</mediaobject>
</figure>
<itemizedlist>
  <listitem><para>To insert a Rich Faces component on a page expand <emphasis><property>JBoss Rich Faces</property></emphasis> group on the palette</para></listitem> 
  <listitem><para>Click on some component</para></listitem>
  <listitem><para>Put the needed attributes in the <emphasis><property>Insert Tag</property></emphasis> dialog and click <emphasis><property>Finish</property></emphasis> button
  <figure>
<title>Insert Tag</title>
<mediaobject> 
        <imageobject>
            <imagedata  fileref="images/editors_features/editors_features_30.png"/>
        </imageobject>
</mediaobject>
</figure>
  </para></listitem>
 </itemizedlist>
 <para>The Rich Faces tag will be inserted on your page displayed in source and visual modes: </para>
 <figure>
<title>Rich Faces Component</title>
<mediaobject> 
        <imageobject>
            <imagedata  fileref="images/editors_features/editors_features_31.png"/>
        </imageobject>
</mediaobject>
</figure>
</section>
</section>

<section id="AddingDynamicCodeAssistToCustomComponents8745">
<?dbhtml filename="AddingDynamicCodeAssistToCustomComponentsThatWereAddedToJBossToolsPalette.html"?>
<title>Adding dynamic code assist to custom components that were added to JBoss Tools Palette</title>
<para>Here is what you need to do to add project based code assist to a custom component added in 
JBoss Developer Studio:</para>
<orderedlist>
    <listitem><para>Create a new xml file in <emphasis><property>&lt;JBDS_home&gt;studio/eclipse/plugins/org.jboss.tools.common.kb_***/schemas/tld/</property></emphasis>. For example call it JeniaFaces.xml. The file should be written according to <emphasis><property>&lt;JBDS_home&gt;/studio/eclipse/plugins/org.jboss.tools.common.kb/kb.jar/org/jboss/tools/common/kb/kb-schema_1.0.dtd</property></emphasis></para></listitem>
</orderedlist>
        <para>Here is how you set what is available for code assist:</para>
<itemizedlist>
<listitem><para>Adds code assist for JSF pre-defined objects, such as value=<emphasis role="italic"><property>&quot;#{param}&quot;</property></emphasis>:</para></listitem>
</itemizedlist>
<programlisting role="XML"><![CDATA[<AttributeType ...>
       <proposal type="jsfVariables"/>
</AttributeType>
]]></programlisting>
    <itemizedlist>
<listitem><para>Adds bundle resource (property file) <property>code assist</property>:</para></listitem>
    </itemizedlist>
<programlisting role="XML"><![CDATA[<AttributeType ...>
       <proposal type="bundleProperty"/>
</AttributeType>
]]></programlisting>
    <itemizedlist>
<listitem><para>Adds managed bean property <property>code assist</property>:</para></listitem>
    </itemizedlist>
<programlisting role="XML"><![CDATA[<AttributeType ...>
       <proposal type="beanProperty"/>
</AttributeType>
]]></programlisting>
    <itemizedlist>
<listitem><para>Adds managed bean property but with a specified type:</para></listitem>
    </itemizedlist>
<programlisting role="XML"><![CDATA[<AttributeType ...>
       <proposal type="beanProperty">
          <param name="type" value="java.lang.Boolean"/>
       </proposal>
</AttributeType>
]]></programlisting>
    <itemizedlist>
<listitem><para>Adds managed bean method with a signature:</para></listitem>
    </itemizedlist>
<programlisting role="XML"><![CDATA[<AttributeType ...>
       <proposal type="beanMethodBySignature">
          <param name="paramType" value="javax.faces.context.FacesContext"/>
          <param name="paramType" value="javax.faces.component.UIComponent"/>
          <param name="paramType" value="java.lang.Object"/>
          <param name="returnType" value="void"/>
       </proposal>
</AttributeType>
]]></programlisting>
    <orderedlist continuation="continues">
        <listitem><para>Add information on your xml file in <emphasis><property>&lt;JBDS_home&gt;/studio/eclipse/plugins/org.jboss.common.kb_***/plugin.xml</property></emphasis></para></listitem>        
    </orderedlist>
    <programlisting role="XML"><![CDATA[
         <tld
            jsf="true"
            name="Jenia Faces"
            schema-location="schemas/tld/myJSF.xml"
            uri="http://www.jenia.org/jsf/dataTools"/>]]>
    </programlisting>
<orderedlist continuation="continues">
<listitem><para>Restart Eclipse. You should now have code assist for the component.</para></listitem>
 </orderedlist>
</section>
</section>
<section id="FullControlOverSourceFiles-SynchronizedSourcAndVisualEditing74">
<?dbhtml filename="FullControlOverSourceFiles-SynchronizedSourcAndVisualEditing.html"?>
<title>Full Control over Source Files - Synchronized Source and Visual Editing</title>

<para>JBoss Developer Studio offers the flexibility to edit any files in either source or extra visual
 modes at the same time.</para>

<para>The project is yours and so is the source. JBoss Developer Studio provides you many different
 graphical editors to speed your application development. At the same time, you always have full control
  over all project source files. Any changes you make in the source view, will immediately appear in
   the graphical view.</para>

<para>The JSF configuration file editor has three views: Diagram, Tree and Source. All views are 
synchronized, you can edit the file in any view.</para>
<figure>
<title>Diagram View</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_32.png"/>
        </imageobject>
</mediaobject>
</figure>
<figure>
<title>Tree View</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_33.png"/>
        </imageobject>
</mediaobject>
</figure>

<figure>
<title>Source View</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_34.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>The same applies to all other JBoss Developer Studio editors.</para>

<para>Web XML editor is shown. Web XML editor has a graphical view (Tree) and source (Source).</para>

<figure>
<title>Tree View</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_35.png"/>
        </imageobject>
</mediaobject>
</figure>
<figure>
<title>Source View</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_36.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>JBoss Developer Studio TLD file editor shown in Tree view. At any point you can edit the source by going
 switching to Source view.</para>
<figure>
<title>Tree Editor</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_37.png"/>
        </imageobject>
</mediaobject>
</figure>
<figure>
<title>Source Editor</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_38.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>The Struts configuration file editor has three views: Diagram, Tree and Source. All views are synchronized,
 you can edit the file in any view.</para>
<figure>
<title>Struts Diagram View</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_39.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>Source view. Any changes here will immediately appear in all other views.</para>
<figure>
<title>Struts Source View</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/editors_features/editors_features_40.png"/>
        </imageobject>
</mediaobject>
</figure>
</section>
</chapter>