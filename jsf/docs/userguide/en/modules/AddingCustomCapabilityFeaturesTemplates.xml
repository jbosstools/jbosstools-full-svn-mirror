<?xml version="1.0" encoding="UTF-8"?>
<chapter id="AddingCustomCapabilityFeaturesTemplates" xreflabel="AddingCustomCapabilityFeaturesTemplates">
  <?dbhtml filename="AddingCustomCapabilityFeaturesTemplates.html"?>
  <chapterinfo>
    <keywordset>
      <keyword>Red Hat Developer Studio</keyword>
      <keyword>Eclipse</keyword>
      <keyword>Java</keyword>
      <keyword>JBoss</keyword>
    </keywordset>
  </chapterinfo>
  <title>Adding Custom Capability, Features and Templates</title>
<section id="CreatingandUsingWithLibrarySets">
<?dbhtml filename="CreatingandUsingWithLibrarySets.html"?>
<title>Creating and Using With Library Sets</title>
<section id="WhatIsALibrarySet">
<?dbhtml filename="WhatIsALibrarySet.html"?>
<title>What is a library set?</title>

<para>A library set is just a collection of any Jar files. You can create as many library sets as you need. Library sets are used to create <property>Custom Capabilities</property> and new JSF or Struts environments.</para>

<para>A <property>Custom Capability</property> is just a collection of one or more Library Sets. When you add a <property>Custom Capability</property> to your project, the Jar files from Library Sets included in this Capability will be copied to project lib folder.</para>

<para>A new JSF or Struts environment is also just a collection of one or more Library Sets. When you create a
 new project based on this environment, all Jar files form Library Sets included in this environment will be copied to project lib folder. This also works during project import.</para>

<para>To create a new library set (or edit an existing), select <emphasis>Window/Preferences/Red Hat/Library Sets</emphasis></para>

<para>The top window shows all existing library sets. The lower window shows what Jar files are included in for
 a selected library set. </para>
 <figure>
<title>Library Sets</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/LibrarySets.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>To add a new library set, click <emphasis>Add</emphasis> for the top window.</para>
<para>To add new Jar files (libraries) to a library set, first select a library set and click <emphasis>Add</emphasis> for the 
lower window. Browse to the location of the Jar file you want to add. The file can be anywhere on your machine 
and will be copied to your Eclipse workspace. If you upgrade to a new Red Hat Developer Studio version, you will not lose
 your library sets.</para>
 </section>
</section>
<section id="CreatingAndWorkingCustomCapability">
<?dbhtml filename="CreatingAndWorkingWithCustomCapability.html"?>
<title>Creating and Working With Custom Capability</title>

<para>What is a <property>custom capability</property>? A custom capability is just a collection of Jars (libraries) that add some capability to a project. When you add a <property>custom capability</property> to a project, the Jar files will be added to project WEB-INF/lib directory.</para>

<para>A <property>custom capability</property> consists of one or more library sets. <link linkend="WhatIsALibrarySet">See how to create library sets</link>.</para>

<para>Steps to create a new capability:</para>

<orderedlist>
<listitem><para>Open <emphasis>Window/Preferences/Red Hat/Custom Capabilities</emphasis></para></listitem>
</orderedlist>
<figure>
<title>Custom Capabilities Window</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/CustomCapabilities.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>In the upper window you will see existing capabilities. In the lower window, under Library Sets tab you
 will see the library sets of which this capability consists. A <property>capability</property> can consist of any number of 
 libraries.</para>
<para>The Configuration File Additions lets you add configuration information that is related to this
 <property>capability</property>.</para>
 <orderedlist continuation="continues">
<listitem><para>Click <emphasis>Add</emphasis> in the upper window and enter <property>capability</property> name. The <property>capability</property> will now appear in the list.</para></listitem>
<listitem><para>Select the <property>capability</property> just created and click <emphasis>Add</emphasis> in the lower window.</para></listitem>
<listitem><para>Select library set to add to this <property>capability</property> Repeat the process to add as many library sets as you need.</para></listitem>
 </orderedlist>
<para>How to add <property>capability</property> to a project:</para>
<itemizedlist>
<listitem><para>From Package Explorer: right click a project and select <emphasis>Red Hat Developer Studio/Add Custom Capability...</emphasis> or</para></listitem>
<listitem><para>From Web Projects: right click the project and select <emphasis>Red Hat Developer Studio/Add Custom Capability...</emphasis>.</para></listitem>
</itemizedlist>
<orderedlist>
<listitem><para>Use check boxes to select <property>Custom Capabilities</property></para></listitem>
<listitem><para>Click on Finish button.</para></listitem>
</orderedlist>
<figure>
<title>Select Custom Capabilities</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/SelectCustomCap.png"/>
        </imageobject>
</mediaobject>
</figure>
<orderedlist continuation="continues">
<listitem><para>The following updates have been made to the project.</para></listitem>
</orderedlist>
<figure>
        <title>Added Custom Capabilities</title>
      <mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/AddedCustomCap.png"/>
        </imageobject>
    </mediaobject>
    </figure>

<para>When you add a <property>custom capability</property> it is possible to modify application configuration files with parameters related to the added <property>capability</property>.</para>

<figure>
        <title>Configuration File Addition</title>
      <mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/EditCustomCap.png"/>
        </imageobject>
    </mediaobject>
    </figure>
<orderedlist>
<listitem><para>Select Configuration File Additions tab. You will see an existing list of configuration file 
additions.</para></listitem>
<listitem><para>Click Add or Edit and enter or edit the following values:</para>
<itemizedlist>
<listitem><para>Label - the name of configuration value</para></listitem>
<listitem><para>File Name - to which file to add this configuration</para></listitem>
<listitem><para>X-Path</para></listitem>
<listitem><para>Text - the text to add to the configuration file</para></listitem>
</itemizedlist></listitem>
</orderedlist>
<para>When you add a <property>capability</property> and have defined configuration files additions values, these values will be added to the configuration files.</para>
 </section>
<section id="How To Add Any Custom Capability Including Oracle ADF, any custom component library or any custom support">
<?dbhtml filename="How To Add Any Custom Capability Including Oracle ADF, any custom component library or any custom support..html"?>
<title>How To Add Any Custom Capability Including Oracle ADF, any custom component library or any custom support</title>

</section>
<section id="CreateCustomPageTemplates">
<?dbhtml filename="CreateCustomPageTemplates.html"?>
<title>Create Custom Page Templates</title>
<section id="CreatingCustomJSPTemplates">
<?dbhtml filename="CreatingCustomJSPTemplates.html"?>
<title>Creating Custom JSP Templates</title>

<para>When creating a new JSP page, you can base the new page on a pre-existing template instead of a blank
 page. The template can contain common header/footer information for the page or really anything you want.</para>

<para>Separate sets of JSP page templates are associated with the different types of project you work on. The
 types of projects are:</para>
<itemizedlist>
<listitem><para>JSF</para></listitem>
<listitem><para>Struts</para></listitem>
</itemizedlist>
</section>
<section id="SavingJSPPageasATemplate">
<?dbhtml filename="CreatingCustomJSPTemplates.html"?>
<title>Saving JSP Page as a Template</title>
<para>Switch to WebProjects view and right click any JSP page. Select <emphasis>Save as Template...</emphasis>.</para>

<figure>
<title>Adding Page Template</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/AddTemplate.png"/>
        </imageobject>
</mediaobject>
</figure>
<para>Click Ok to create a template based on this page.</para>
</section>
<section id="UsingPreferenceSettingsToCreateATemplate">
<?dbhtml filename="UsingPreferenceSettingsToCreateATemplate.html"?>
<title>Using Preference Settings to Create a Template</title>


<para>Creating your own template based on a page that you have created within one of your projects in your 
Eclipse workspace is pretty easy.</para>

<orderedlist>
<listitem><para>Open the Preferences panel by selecting <emphasis>Windows/Preferences</emphasis> from the menu bar.</para></listitem>
<listitem><para>Navigate to the <emphasis>Red Hat/JSF/JSF Pages</emphasis> or <emphasis>Red Hat/Struts/Struts Pages</emphasis> section.</para></listitem>
<listitem><para>Click on the Add button to the right of the template list.</para></listitem>
<listitem><para>In the dialog box that appears, type in a name for the template and then use the <emphasis>Browse...</emphasis> button to select the location of the page you want to make into a template. </para></listitem>
</orderedlist>

<para>The location should be located within a project. (Once this is done it doesn&apos;t matter if you delete
 the original JSP page or the project containing it.)</para>

<figure>
<title>Editing Page Path</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/AddTemplateToPref.png"/>
        </imageobject>
</mediaobject>
</figure>
</section>
<section id="CreatingAJSPPageWithATemplate">
<?dbhtml filename="UsingPreferenceSettingsToCreateATemplate.html"?>
<title>Creating a JSP Page with a Template</title>
<section id="JSF">
<?dbhtml filename="JSF.html"?>
<title>JSF</title>
<orderedlist>
<listitem><para>In the Project Explorer view select the folder where you want to create JSP file.</para></listitem>
<listitem><para><emphasis>Right click &gt; New &gt; JSP File (or in the Web Projects view, right click the project folder &gt; New &gt; File &gt; JSP File)</emphasis></para></listitem>
<listitem><para>Expand Template field and select the template. </para></listitem>
</orderedlist>
<figure>
<title>File JSP</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/CreatingJSPwithTempl.png"/>
        </imageobject>
</mediaobject>
</figure>

<section id="JSFBasePage">
<?dbhtml filename="JSFBasePage.html"?>
<title>JSFBasePage</title>
<figure>
<title>JSFBasePage</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/JSFBasePage.png"/>
        </imageobject>
</mediaobject>
</figure>
</section>
<section id="JSPRedirect">
<?dbhtml filename="JSPRedirect.html"?>
<title>JSPRedirect</title>
<figure>
<title>JSPRedirect</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/JSPRedirect.png"/>
        </imageobject>
</mediaobject>
</figure>
</section>


<section id="Struts">
<?dbhtml filename="Struts.html"?>
<title>Struts</title>
<section id="StrutsForm">
<?dbhtml filename="StrutsForm.html"?>
<title>StrutsForm</title>
<figure>
<title>StrutsForm</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/StrutsForm.png"/>
        </imageobject>
</mediaobject>
</figure>
</section>
</section>
</section>
</section>
</section>
<section id="UsingTheFileSystemToCreateATemplate">
<?dbhtml filename="UsingTheFileSystemToCreateATemplate.html"?>
<title>Using the File System to Create a Template</title>

<para>Alternatively, you can create the template outside of Eclipse. Just open this folder:</para>

<para><emphasis>&lt;redhat&gt;\eclipse\plugins\org.jboss.tools.common.projecttemplates_X.X.X\templates</emphasis></para>

<para>Create a text file with the coding you want for the template. Name the file exactly as you want the
 template name to appear. Then, place the file inside the appropriate folder for the project type (jsf or
  struts). Or, place the file at the same level as the Blank file for the template to be available to either 
  project type.</para>

<para>After you restart Eclipse, your template will be available.</para>

</section>
<section id="AddingYourOwnProjectTemplates">
<?dbhtml filename="AddingYourOwnProjectTemplates.html"?>
<title>Adding Your Own Project Templates</title>
<para>Red Hat Developer Studio has a powerful templating <property>capability</property> for creating new and importing existing Struts and JSF projects. This templating facility has a variety of aspects to consider. But, let&apos;s start 
with the most straightforward case.</para>

<para>Let&apos;s say you have a project that you want to use as the basis for a new template. Follow these steps to make a template out of it:</para>

<orderedlist>
<listitem><para>In the Project Explorer, right-click the project and select <emphasis>Red Hat Developer Studio/Save as Template</emphasis>.</para></listitem>
<listitem><para>In the first dialog box, you can choose a name for the template (defaults to the project name) and confirm what run-time implementation of the project&apos;s technology will be used.</para></listitem>
<listitem><para>Select Next and you will be sent to a dialog box with your project structure displayed with check boxes. Here you can check only those parts and files in your project directory that should be part of the template.</para></listitem>
<listitem><para>At this point, unless you want to designate some extra files as having Velocity template coding inside them, you should select Finish.</para></listitem>
</orderedlist>

<para>That&apos;s it. Now, you can use this template with any new or imported project that uses the same 
run-time implementation as the project you turned into a template.</para>
</section>

<section id="Adding Your Own Project JSF and Struts Environments">
<?dbhtml filename="AddingYourOwnProjectJSFandStrutsEnvironments.html"?>

<title>Adding a Custom Project Environment</title>

<para>Any environment simply consists of a collection of Jar files. You can create any number of custom 
environments which consists of any number of Jar files.</para>

<para>Here is how you can do it for JSF.</para>

<orderedlist>
<listitem><para>Select <emphasis>Window/Preferences/Red Hat/JSF/JSF Environment</emphasis>. You will see all existing environments for creating JSF projects.</para></listitem>

<listitem><para>Click Add to add a new environment.</para></listitem>
</orderedlist>
<figure>
<title>JSF Environment</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/JSFEnvironment.png"/>
        </imageobject>
</mediaobject>
</figure>
<orderedlist continuation="continues">
<listitem><para>When you click Add, enter the following information:</para>
<itemizedlist>
<listitem><para>Name - enter the name of the new environment</para></listitem>
<listitem><para>Template Location - leave the default value. This environment will be saved under your workspace. If you upgrade Red Hat Developer Studio plug-in, you will keep all custom settings</para></listitem>
<listitem><para>Core Library - Select one core library (See <link linkend="CreatingandUsingWithLibrarySets">Library Sets</link> for more information)</para></listitem>
</itemizedlist></listitem>
</orderedlist>
<figure>
<title>Adding JSF Project Version</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/AddJSFProjectVersion.png"/>
        </imageobject>
</mediaobject>
</figure>

<orderedlist continuation="continues">
<listitem><para>Once you have that in place, just add as many library sets to this project as you need. When
 you create a project based on this environment, all Jar files from the library sets will be copied to project
  <emphasis>WEB-INF\lib</emphasis> directory.</para></listitem>
</orderedlist>
<figure>
<title>Adding Library Reference</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/AddLibraryReference.png"/>
        </imageobject>
</mediaobject>
</figure>
<orderedlist continuation="continues">
<listitem><para>Switch to Project Templates tab and click <emphasis>Add</emphasis> Before you can use the new environment, you need to  add at least one project template to it. You can use any existing project as a template or create a new  one.</para></listitem>
</orderedlist>
<figure>
<title>Defining Common Template Properties</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/AddJSFProjectTempl.png"/>
        </imageobject>
</mediaobject>
</figure>
<orderedlist continuation="continues">
<listitem><para>You can click Next to configure the template further or just Finish. In this step, you can
 select what directories to include in the template</para></listitem>
</orderedlist>
<figure>
<title>Selecting Folders and Files</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/SelectFolders.png"/>
        </imageobject>
</mediaobject>
</figure>
<orderedlist continuation="continues">
<listitem><para>Go back to create a new JSF project. When you select the new environment, you will also be
 able to select the template.</para></listitem>
</orderedlist>
<figure>
<title>Selecting New Enviroment</title>
<mediaobject> 
        <imageobject>
            <imagedata fileref="images/AddCustomCapab/CreateJSFProjectWithTempl.png"/>
        </imageobject>
</mediaobject>
</figure>
</section>
</chapter>