<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE kb-schema PUBLIC "-//Red Hat, Inc//DTD Knowledge Base 1.0//EN" "http://www.redhat.com/dtds/kb-schema_1_0.dtd">
<!-- 
	* Copyright (c) 2009 Red Hat, Inc.
	* Distributed under license by Red Hat, Inc. All rights reserved.
	* This program is made available under the terms of the
	* Eclipse Public License v1.0 which accompanies this distribution,
	* and is available at http://www.eclipse.org/legal/epl-v10.html
	*
	* Contributors:
	* Red Hat, Inc. - initial API and implementation
-->
<schema prefix="rich">

	<!-- Version 3.3 -->
	    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="calendar" start-tag="required">
        <description>
        	<![CDATA[The calendar component is a UI control used for creating graphical monthly calendar on a page.]]>
        </description>
        <attribute-type name="ajaxSingle" required="false">
            <description>
				boolean attribute which provides possibility to limit
				JSF tree processing(decoding, conversion/validation,
				value applying) to the component which send the request
				only.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
 	                <param value="true"/>
 	                <param value="false"/>
						</proposal>
        </attribute-type>
        <attribute type="ajaxSingle"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="boundaryDatesMode" required="false">
            <description>
				Used for the dates boundaries in the list. Valid values
				are "inactive" (Default) dates inactive and gray
				colored, "scroll" boundaries work as month scrolling
				controls, and "select" boundaries work in the same way
				as "scroll" but with the date clicked selection. Default
				value is "inactive".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="boundaryDatesMode"/>
        <attribute-type name="buttonClass" required="false">
            <description>
				Style Class attribute for the popup button
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="buttonClass"/>
        <attribute-type name="buttonIcon" required="false">
            <description>
				Defines icon for the popup button element. The attribute
				is ignored if the "buttonLabel" is set
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="buttonIcon"/>
        <attribute-type name="buttonIconDisabled" required="false">
            <description>
				Defines disabled icon for the popup button element. The
				attribute is ignored if the "buttonLabel" is set
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="buttonIconDisabled"/>
        <attribute-type name="buttonLabel" required="false">
            <description>
				Defines label for the popup button element. If the
				attribute is set "buttonIcon" and "buttonIconDisabled"
				are ignored
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="buttonLabel"/>
        <attribute-type name="bypassUpdates" required="false">
            <description>
				If "true", after process validations phase it skips
				updates of model beans on a force render response. It
				can be used for validating components input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bypassUpdates"/>
        <attribute-type name="cellHeight" required="false">
            <description>
				attribute to set fixed cells height
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cellHeight"/>
        <attribute-type name="cellWidth" required="false">
            <description>
				attribute to set fixed cells width
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cellWidth"/>
        <attribute-type name="converter" required="false">
            <description>
				Id of Converter to be used or reference to a Converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converter"/>
        <attribute-type name="converterMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the converter message,
				replacing any message that comes from the converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converterMessage"/>
        <attribute-type name="currentDate" required="false">
            <description>Defines current date</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="currentDate"/>
        <attribute-type name="currentDateChangeListener" required="false">
            <description>
				MethodBinding representing an action listener method
				that will be notified after date selection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
        </attribute-type>
        <attribute type="currentDateChangeListener"/>
        <attribute-type name="dataModel" required="false">
            <description>
				Used to provide data for calendar elements. If data is
				not provided, all Data Model related functions are
				disabled
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dataModel"/>
        <attribute-type name="datePattern" required="false">
            <description>
				Defines date pattern. Default value is "MMM d, yyyy".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="datePattern"/>
        <attribute-type name="dayStyleClass" required="false">
            <description>
				Should be binded to some JS function that will provide
				style classes for special sets of days highlighting.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dayStyleClass"/>
        <attribute-type name="defaultTime" required="false">
            <description>
				Defines time that will be used: 1) to set time when the
				value is empty 2) to set time when date changes and flag
				"resetTimeOnDateSelect" is true
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="defaultTime"/>
        <attribute-type name="direction" required="false">
            <description>
				Defines direction of the calendar popup (top-left,
				top-right, bottom-left, bottom-right (Default), auto).
				Default value is "bottom-right".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="direction"/>
        <attribute-type name="disabled" required="false">
            <description>
				If "true", rendered is disabled. In "popup" mode both
				controls are disabled. Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="disabled"/>
        <attribute-type name="enableManualInput" required="false">
            <description>
				If "true" calendar input will be editable and it will be
				possible to change the date manualy. If "false" value
				for this attribute makes a text field "read-only", so
				the value can be changed only from a handle. Default
				value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="enableManualInput"/>
        <attribute-type name="eventsQueue" required="false">
            <description>
				Name of requests queue to avoid send next request before
				complete other from same event. Can be used to reduce
				number of requests of frequently events (key press,
				mouse move etc.)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="eventsQueue"/>
        <attribute-type name="firstWeekDay" required="false">
            <description>
				Gets what the first day of the week is; e.g., SUNDAY in
				the U.S., MONDAY in France. Default value is
				"getDefaultFirstWeekDay()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="firstWeekDay"/>
        <attribute-type name="focus" required="false">
            <description>
				id of element to set focus after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="focus"/>
        <attribute-type name="horizontalOffset" required="false">
            <description>
				Sets the horizontal offset between button and calendar
				element conjunction point. Default value is "0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="horizontalOffset"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="ignoreDupResponses" required="false">
            <description>
				Attribute allows to ignore an Ajax Response produced by
				a request if the newest 'similar' request is in a queue
				already. ignoreDupResponses="true" does not cancel the
				request while it is processed on the server, but just
				allows to avoid unnecessary updates on the client side
				if the response isn't actual now
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ignoreDupResponses"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="inputClass" required="false">
            <description>
				Style Class attribute for the text field
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputClass"/>
        <attribute-type name="inputSize" required="false">
            <description>
				Defines the size of an input field. Similar to the
				"size" attribute of &amp;lt;h:inputText/&amp;gt;
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputSize"/>
        <attribute-type name="inputStyle" required="false">
            <description>Style attribute for text field</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputStyle"/>
        <attribute-type name="isDayEnabled" required="false">
            <description>
				Should be binded to some JS function that returns day
				state.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="isDayEnabled"/>
        <attribute-type name="jointPoint" required="false">
            <description>
				Set the corner of the button for the popup to be
				connected with (top-left, top-right, bottom-left
				(Default), bottom-right, auto). Default value is
				"bottom-left".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="jointPoint"/>
        <attribute-type name="label" required="false">
            <description>
				A localized user presentable name for this component.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="label"/>
        <attribute-type name="limitToList" required="false">
            <description>
				If "true", updates on client side ONLY elements from
				this 'reRender' property. If "false" (default) updates
				all rendered by ajax region components
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="limitToList"/>
        <attribute-type name="locale" required="false">
            <description>
				Used for locale definition. Default value is
				"getDefaultLocale()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="java.util.Locale"/>
            </proposal>
        </attribute-type>
        <attribute type="locale"/>
        <attribute-type name="minDaysInFirstWeek" required="false">
            <description>
				Gets what the minimal days required in the first week of
				the year are; e.g., if the first week is defined as one
				that contains the first day of the first month of a
				year, this method returns 1. If the minimal days
				required must be a full week, this method returns 7.
				Default value is "getDefaultMinDaysInFirstWeek()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="minDaysInFirstWeek"/>
        <attribute-type name="mode" required="false">
            <description>
				Valid values: ajax or client. Default value is "client".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="mode"/>
        <attribute-type name="monthLabels" required="false">
            <description>
				Attribute that allows to customize names of the months.
				Should accept list with the month names
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="monthLabels"/>
        <attribute-type name="monthLabelsShort" required="false">
            <description>
				Attribute that allows to customize short names of the
				months. Should accept list with the month names
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="monthLabelsShort"/>
        <attribute-type name="onbeforedomupdate" required="false">
            <description>
				JavaScript code for call before DOM has been updated on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforedomupdate"/>
        <attribute-type name="onchanged" required="false">
            <description>onChanged event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onchanged"/>
        <attribute-type name="oncollapse" required="false">
            <description>onCollapse event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncollapse"/>
        <attribute-type name="oncomplete" required="false">
            <description>
				JavaScript code for call after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncomplete"/>
        <attribute-type name="oncurrentdateselect" required="false">
            <description>onCurrentDateSelect event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncurrentdateselect"/>
        <attribute-type name="oncurrentdateselected" required="false">
            <description>
				onCurrentDateSelected event handler
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncurrentdateselected"/>
        <attribute-type name="ondatemouseout" required="false">
            <description>onDateMouseOut event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondatemouseout"/>
        <attribute-type name="ondatemouseover" required="false">
            <description>onDateMouseOver event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondatemouseover"/>
        <attribute-type name="ondateselect" required="false">
            <description>onDateSelect event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondateselect"/>
        <attribute-type name="ondateselected" required="false">
            <description>onDateSelected event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondateselected"/>
        <attribute-type name="onexpand" required="false">
            <description>onExpand event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onexpand"/>
        <attribute-type name="oninputblur" required="false">
            <description>input onBlur event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputblur"/>
        <attribute-type name="oninputchange" required="false">
            <description>input onChange event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputchange"/>
        <attribute-type name="oninputclick" required="false">
            <description>input onClick event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputclick"/>
        <attribute-type name="oninputfocus" required="false">
            <description>input onFocus event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputfocus"/>
        <attribute-type name="oninputkeydown" required="false">
            <description>input onKeyDown event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputkeydown"/>
        <attribute-type name="oninputkeypress" required="false">
            <description>input onKeyPress event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputkeypress"/>
        <attribute-type name="oninputkeyup" required="false">
            <description>input onKeyUp event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputkeyup"/>
        <attribute-type name="oninputselect" required="false">
            <description>input onSelect event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputselect"/>
        <attribute-type name="ontimeselect" required="false">
            <description>onTimeSelect event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ontimeselect"/>
        <attribute-type name="ontimeselected" required="false">
            <description>onTimeSelected event handler</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ontimeselected"/>
        <attribute-type name="popup" required="false">
            <description>
				If "true" calendar will be rendered initially as hidden
				with additional elements for calling as popup. Default
				value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="popup"/>
        <attribute-type name="preloadDateRangeBegin" required="false">
            <description>
				Define the initial range of date which will be loaded to
				client from dataModel under rendering. Default value is
				"getDefaultPreloadBegin(getCurrentDateOrDefault())".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="preloadDateRangeBegin"/>
        <attribute-type name="preloadDateRangeEnd" required="false">
            <description>
				Defines the last range of date which will be loaded to
				client from dataModel under rendering. Default value is
				"getDefaultPreloadEnd(getCurrentDateOrDefault())".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="preloadDateRangeEnd"/>
        <attribute-type name="process" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, processed at the phases 2-5 in case of
				AjaxRequest caused by this component. Can be single id,
				comma-separated list of Id's, or EL Expression with
				array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="process"/>
        <attribute-type name="reRender" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, rendered in case of AjaxRequest caused by
				this component. Can be single id, comma-separated list
				of Id's, or EL Expression with array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="reRender"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="requestDelay" required="false">
            <description>
				Attribute defines the time (in ms.) that the request
				will be wait in the queue before it is ready to send.
				When the delay time is over, the request will be sent to
				the server or removed if the newest 'similar' request is
				in a queue already
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requestDelay"/>
        <attribute-type name="required" required="false">
            <description>
				If "true", this component is checked for non-empty input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="required"/>
        <attribute-type name="requiredMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validation message for
				the "required" facility, if the "required" facility is
				used
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requiredMessage"/>
        <attribute-type name="resetTimeOnDateSelect" required="false">
            <description>
				If value is true then calendar should change time to
				defaultTime for newly-selected dates.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="resetTimeOnDateSelect"/>
        <attribute-type name="showApplyButton" required="false">
            <description>
				If false ApplyButton should not be shown. Default value
				is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showApplyButton"/>
        <attribute-type name="showFooter" required="false">
            <description>
				If false Calendar's footer should not be shown. Default
				value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showFooter"/>
        <attribute-type name="showHeader" required="false">
            <description>
				If false Calendar's header should not be shown. Default
				value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showHeader"/>
        <attribute-type name="showInput" required="false">
            <description>
				"false" value for this attribute makes text field
				invisible. If "true" - input field will be shown.
				Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showInput"/>
        <attribute-type name="showWeekDaysBar" required="false">
            <description>
				If false this bar should not be shown. Default value is
				"true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showWeekDaysBar"/>
        <attribute-type name="showWeeksBar" required="false">
            <description>
				If false this bar should not be shown. Default value is
				"true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showWeeksBar"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="timeZone" required="false">
            <description>
				Used for current date calculations. Default value is
				"getDefaultTimeZone()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="java.util.TimeZone"/>
            </proposal>
        </attribute-type>
        <attribute type="timeZone"/>
        <attribute-type name="timeout" required="false">
            <description>
				Response waiting time on a particular request. If a
				response is not received during this time, the request
				is aborted
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="timeout"/>
        <attribute-type name="todayControlMode" required="false">
            <description>
				Possible values are "scroll", "select", "hidden".
				Default value is "select".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="todayControlMode"/>
        <attribute-type name="toolTipMode" required="false">
            <description>
				Used to specify mode to load tooltips. Valid values are
				"none", "single" and "batch" Default value is "batch".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="toolTipMode"/>
        <attribute-type name="validator" required="false">
            <description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="javax.faces.el.MethodBinding"/>
            </proposal>
        </attribute-type>
        <attribute type="validator"/>
        <attribute-type name="validatorMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validator message,
				replacing any message that comes from the validator
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="validatorMessage"/>
        <attribute-type name="value" required="false">
            <description>
				The current value of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="valueChangeListener" required="false">
            <description>Listener for value changes</description>
            <proposal type="beanProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ValueChangeEvent"/>
            </proposal>
        </attribute-type>
        <attribute type="valueChangeListener"/>
        <attribute-type name="verticalOffset" required="false">
            <description>
				Sets the vertical offset between button and calendar
				element conjunction point. Default value is "0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="verticalOffset"/>
        <attribute-type name="weekDayLabels" required="false">
            <description>
				List of the day names displays on the days bar in the
				following way "Sun, Mon, Tue, Wed, "
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="weekDayLabels"/>
        <attribute-type name="weekDayLabelsShort" required="false">
            <description>
				Attribute that allows to customize short names of the
				weeks. Should accept list with the weeks names.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="weekDayLabelsShort"/>
        <attribute-type name="zindex" required="false">
            <description>
				Attribute is similar to the standard HTML attribute and
				can specify window placement relative to the content.
				Default value is "3".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="zindex"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="changeExpandListener" start-tag="required">
        <description>
        	<![CDATA[The changeExpandListener represents an action listener method that is notified on an expand/collapse event on the node.]]>
        </description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="column" start-tag="required">
        <description>
        	<![CDATA[The column is a UI component that represents a single column of data within a parent dataTable component.]]>
        </description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="breakBefore" required="false">
            <description>
				if "true" next column begins from the first row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="breakBefore"/>
        <attribute-type name="colspan" required="false">
            <description>
				Corresponds to the HTML colspan attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="colspan"/>
        <attribute-type name="comparator" required="false">
            <description>
				Defines value binding to the comparator that is used to
				compare the values
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="comparator"/>
        <attribute-type name="dir" required="false">
            <description>
				Direction indication for text that does not inherit
				directionality. Valid values are "LTR" (left-to-right)
				and "RTL" (right-to-left)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dir"/>
        <attribute-type name="filterBy" required="false">
            <description>
				Defines iterable object property which is used when
				filtering performed.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="filterBy"/>
        <attribute-type name="filterEvent" required="false">
            <description>
				Event for filter input that forces the filtration
				(default = onchange)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="filterEvent"/>
        <attribute-type name="filterExpression" required="false">
            <description>
				Attribute defines a bean property which is used for
				filtering of a column
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="filterExpression"/>
        <attribute-type name="filterMethod" required="false">
            <description>
				This attribute is defined with method binding. This
				method accepts on Object parameter and return boolean
				value
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="filterMethod"/>
        <attribute-type name="filterValue" required="false">
            <description>Defines current filtering value</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="filterValue"/>
        <attribute-type name="footerClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to any footer generated for this table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="footerClass"/>
        <attribute-type name="headerClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to any header generated for this table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerClass"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="lang" required="false">
            <description>
				Code describing the language used in the generated
				markup for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lang"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="rowspan" required="false">
            <description>
				Corresponds to the HTML rowspan attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowspan"/>
        <attribute-type name="selfSorted" required="false">
            <description>
				Manages if the header of the column is clickable, icons
				rendered and sorting is fired after click on the header.
				You need to define this attribute inside
				&amp;lt;rich:dataTable&amp;gt; component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selfSorted"/>
        <attribute-type name="sortBy" required="false">
            <description>
				Attribute defines a bean property which is used for
				sorting of a column
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortBy"/>
        <attribute-type name="sortExpression" required="false">
            <description>
				DEPRECATED(use sortBy)Attribute defines a bean property
				which is used for sorting of a column
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortExpression"/>
        <attribute-type name="sortIcon" required="false">
            <description>Defines sort icon</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortIcon"/>
        <attribute-type name="sortIconAscending" required="false">
            <description>
				Defines sort icon in ascending order
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortIconAscending"/>
        <attribute-type name="sortIconDescending" required="false">
            <description>
				Defines sort icon in descending order
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortIconDescending"/>
        <attribute-type name="sortOrder" required="false">
            <description>
				SortOrder is an enumeration of the possible sort
				orderings.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortOrder"/>
        <attribute-type name="sortable" required="false">
            <description>
				Boolean attribute. If "true" it's possible to sort the
				column content after click on the header. Default value
				is "true"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortable"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="title" required="false">
            <description>
				Advisory title information about markup elements
				generated for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="width" required="false">
            <description>
				Attribute defines width of column.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="columnGroup" start-tag="required">
        <description>
        	<![CDATA[The columnGroup component combines columns in one row to organize complex subparts of a table.]]>
        </description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="columnClasses" required="false">
            <description>
				Comma-delimited list of CSS style classes that are be
				applied to the columns of this table. A space separated
				list of classes may also be specified for any individual
				column. If the number of elements in this list is less
				than the number of columns specified in the "columns"
				attribute, no "class" attribute is output for each
				column greater than the number of elements in the list.
				If the number of elements in the list is greater than
				the number of columns specified in the "columns"
				attribute, the elements at the position in the list
				after the value of the "columns" attribute are ignored
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="columnClasses"/>
        <attribute-type name="dir" required="false">
            <description>
				Direction indication for text that does not inherit
				directionality. Valid values are "LTR" (left-to-right)
				and "RTL" (right-to-left)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dir"/>
        <attribute-type name="filterMethod" required="false">
            <description>
				This attribute is defined with method binding. This
				method accepts on Object parameter and return boolean
				value
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="filterMethod"/>
        <attribute-type name="filterValue" required="false">
            <description>Defines current filtering value</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="filterValue"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="lang" required="false">
            <description>
				Code describing the language used in the generated
				markup for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lang"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="rowClasses" required="false">
            <description>
				A comma-delimited list of CSS style classes that is
				applied to popup table rows. A space separated list of
				classes may also be specified for any individual row.
				The styles are applied, in turn, to each row in the
				table. For example, if the list has two elements, the
				first style class in the list is applied to the first
				row, the second to the second row, the first to the
				third row, the second to the fourth row, etc. In other
				words, we keep iterating through the list until we reach
				the end, and then we start at the beginning again
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowClasses"/>
        <attribute-type name="selfSorted" required="false">
            <description>
				Manages if the header of the column is clickable, icons
				rendered and sorting is fired after click on the header.
				You need to define this attribute inside
				&amp;lt;rich:dataTable&amp;gt; component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selfSorted"/>
        <attribute-type name="sortOrder" required="false">
            <description>
				SortOrder is an enumeration of the possible sort
				orderings.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortOrder"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="title" required="false">
            <description>
				Advisory title information about markup elements
				generated for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="columns" start-tag="required">
        <description>
        	<![CDATA[The columns is a component that allows to create a dynamic set of columns from your model.]]>
        </description>
        <attribute-type name="begin" required="false">
            <description>The first iteration item</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="begin"/>
        <attribute-type name="breakBefore" required="false">
            <description>
				if "true" next column begins from the first row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="breakBefore"/>
        <attribute-type name="colspan" required="false">
            <description>
				Corresponds to the HTML colspan attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="colspan"/>
        <attribute-type name="columns" required="false">
            <description>Number of columns to be rendered</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="columns"/>
        <attribute-type name="comparator" required="false">
            <description>
				Defines value binding to the comparator that is used to
				compare the values
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="comparator"/>
        <attribute-type name="dir" required="false">
            <description>
				Direction indication for text that does not inherit
				directionality. Valid values are "LTR" (left-to-right)
				and "RTL" (right-to-left)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dir"/>
        <attribute-type name="end" required="false">
            <description>The last iteration item</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="end"/>
        <attribute-type name="filterBy" required="false">
            <description>
				Defines iterable object property which is used when
				filtering performed.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="filterBy"/>
        <attribute-type name="filterEvent" required="false">
            <description>
				Event for filter input that forces the filtration
				(default = onchange)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="filterEvent"/>
        <attribute-type name="filterExpression" required="false">
            <description>
				Attribute defines a bean property which is used for
				filtering of a column
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="filterExpression"/>
        <attribute-type name="filterMethod" required="false">
            <description>
				This attribute is defined with method binding. This
				method accepts on Object parameter and return boolean
				value
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="filterMethod"/>
        <attribute-type name="filterValue" required="false">
            <description>Defines current filtering value</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="filterValue"/>
        <attribute-type name="footerClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to any footer generated for this table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="footerClass"/>
        <attribute-type name="headerClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to any header generated for this table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerClass"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="index" required="false">
            <description>The current counter</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="index"/>
        <attribute-type name="lang" required="false">
            <description>
				Code describing the language used in the generated
				markup for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lang"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="rowspan" required="false">
            <description>
				Corresponds to the HTML rowspan attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowspan"/>
        <attribute-type name="selfSorted" required="false">
            <description>
				Manages if the header of the column is clickable, icons
				rendered and sorting is fired after click on the header.
				You need to define this attribute inside
				&amp;lt;rich:dataTable&amp;gt; component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selfSorted"/>
        <attribute-type name="sortBy" required="false">
            <description>
				Attribute defines a bean property which is used for
				sorting of a column
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortBy"/>
        <attribute-type name="sortExpression" required="false">
            <description>
				DEPRECATED(use sortBy)Attribute defines a bean property
				which is used for sorting of a column
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortExpression"/>
        <attribute-type name="sortIcon" required="false">
            <description>Defines sort icon</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortIcon"/>
        <attribute-type name="sortIconAscending" required="false">
            <description>
				Defines sort icon in ascending order
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortIconAscending"/>
        <attribute-type name="sortIconDescending" required="false">
            <description>
				Defines sort icon in descending order
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortIconDescending"/>
        <attribute-type name="sortOrder" required="false">
            <description>
				SortOrder is an enumeration of the possible sort
				orderings.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortOrder"/>
        <attribute-type name="sortable" required="false">
            <description>
				Boolean attribute. If "true" it's possible to sort the
				column content after click on the header. Default value
				is "true"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortable"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="title" required="false">
            <description>
				Advisory title information about markup elements
				generated for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="var" required="false">
            <description>The current variable</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="var"/>
        <attribute-type name="width" required="false">
            <description>
				Attribute defines width of column.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="comboBox" start-tag="required">
        <description><![CDATA[The comboBox is a component, that provides editable combo box element on a page.]]></description>
        <attribute-type name="accesskey" required="false">
            <description>
				This attribute assigns an access key to an element. An
				access key is a single character from the document
				character set. Note: Authors should consider the input
				method of the expected reader when specifying an
				accesskey
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="accesskey"/>
        <attribute-type name="align" required="false">
            <description>
				left|center|right|justify [CI] Deprecated. This
				attribute specifies the horizontal alignment of its
				element with respect to the surrounding context.
				Possible values:

				* left: text lines are rendered flush left. * center:
				text lines are centered. * right: text lines are
				rendered flush right. * justify: text lines are
				justified to both margins.

				The default depends on the base text direction. For left
				to right text, the default is align=left, while for
				right to left text, the default is align=right
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="align"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="buttonClass" required="false">
            <description>
				Style Class attribute for the button
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="buttonClass"/>
        <attribute-type name="buttonDisabledClass" required="false">
            <description>
				Style Class attribute for the disabled button
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="buttonDisabledClass"/>
        <attribute-type name="buttonDisabledStyle" required="false">
            <description>
				CSS style rules to be applied to disabled button
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="buttonDisabledStyle"/>
        <attribute-type name="buttonIcon" required="false">
            <description>
				Defines icon for the button element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="buttonIcon"/>
        <attribute-type name="buttonIconDisabled" required="false">
            <description>
				Defines disabled icon for the button element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="buttonIconDisabled"/>
        <attribute-type name="buttonIconInactive" required="false">
            <description>
				Defines inactive icon for the button element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="buttonIconInactive"/>
        <attribute-type name="buttonInactiveClass" required="false">
            <description>
				Style Class attribute for the inactive button
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="buttonInactiveClass"/>
        <attribute-type name="buttonInactiveStyle" required="false">
            <description>
				CSS style rules to be applied to inactive button
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="buttonInactiveStyle"/>
        <attribute-type name="buttonStyle" required="false">
            <description>
				CSS style rules to be applied to button
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="buttonStyle"/>
        <attribute-type name="converter" required="false">
            <description>
				Id of Converter to be used or reference to a Converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converter"/>
        <attribute-type name="converterMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the converter message,
				replacing any message that comes from the converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converterMessage"/>
        <attribute-type name="defaultLabel" required="false">
            <description>
				Defines default label for the input field element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="defaultLabel"/>
        <attribute-type name="directInputSuggestions" required="false">
            <description>
				Defines the first value from the suggested in input
				field. Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="directInputSuggestions"/>
        <attribute-type name="disabled" required="false">
            <description>
				When set for a form control, this boolean attribute
				disables the control for your input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="disabled"/>
        <attribute-type name="enableManualInput" required="false">
            <description>
				Enables keyboard input, if "false" keyboard input will
				be locked. Default value is "true"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="enableManualInput"/>
        <attribute-type name="filterNewValues" required="false">
            <description>
				Defines the appearance of values in the list. Default
				value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="filterNewValues"/>
        <attribute-type name="hideDelay" required="false">
            <description>
				Delay between losing focus and pop-up list closing.
				Default value is "0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="hideDelay"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="inputClass" required="false">
            <description>
				Style Class attribute for the input field
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputClass"/>
        <attribute-type name="inputDisabledClass" required="false">
            <description>
				Style Class attribute for the disabled input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputDisabledClass"/>
        <attribute-type name="inputDisabledStyle" required="false">
            <description>
				CSS style rules to be applied to disabled input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputDisabledStyle"/>
        <attribute-type name="inputInactiveClass" required="false">
            <description>
				Style Class attribute for the inactive input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputInactiveClass"/>
        <attribute-type name="inputInactiveStyle" required="false">
            <description>
				CSS style rules to be applied to inactive input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputInactiveStyle"/>
        <attribute-type name="inputStyle" required="false">
            <description>
				CSS style rules to be applied to input field
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputStyle"/>
        <attribute-type name="itemClass" required="false">
            <description>
				Style Class attribute for the items
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="itemClass"/>
        <attribute-type name="itemSelectedClass" required="false">
            <description>
				Style Class attribute for the selected item
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="itemSelectedClass"/>
        <attribute-type name="listClass" required="false">
            <description>
				Style Class attribute for the popup list
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="listClass"/>
        <attribute-type name="listHeight" required="false">
            <description>
				Defines height of file pop-up list. Default value is
				"200px".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="listHeight"/>
        <attribute-type name="listStyle" required="false">
            <description>
				CSS style rules to be applied to popup list
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="listStyle"/>
        <attribute-type name="listWidth" required="false">
            <description>Defines width of file popup list</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="listWidth"/>
        <attribute-type name="onblur" required="false">
            <description>
				HTML: script expression; the element lost the focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onblur"/>
        <attribute-type name="onchange" required="false">
            <description>
				HTML: script expression; the element value was changed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onchange"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onfocus" required="false">
            <description>
				HTML: script expression; the element got the focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onfocus"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onlistcall" required="false">
            <description>
				A JavaScript event handler called on a list call
				operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onlistcall"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="onselect" required="false">
            <description>
				HTML: script expression; The onselect event occurs when
				you select some text in a text field. This attribute may
				be used with the INPUT and TEXTAREA elements
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onselect"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="required" required="false">
            <description>
				If "true", this component is checked for non-empty input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="required"/>
        <attribute-type name="requiredMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validation message for
				the "required" facility, if the "required" facility is
				used
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requiredMessage"/>
        <attribute-type name="selectFirstOnUpdate" required="false">
            <description>
				Defines if the first value from suggested is selected in
				pop-up list. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectFirstOnUpdate"/>
        <attribute-type name="showDelay" required="false">
            <description>
				Delay between event and pop-up list showing. Default
				value is "0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showDelay"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="suggestionValues" required="false">
            <description>Defines the suggestion collection</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="suggestionValues"/>
        <attribute-type name="tabindex" required="false">
            <description>
				This attribute specifies the position of the current
				element in the tabbing order for the current document.
				This value must be a number between 0 and 32767. User
				agents should ignore leading zeros
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tabindex"/>
        <attribute-type name="validator" required="false">
            <description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="javax.faces.el.MethodBinding"/>
            </proposal>
        </attribute-type>
        <attribute type="validator"/>
        <attribute-type name="validatorMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validator message,
				replacing any message that comes from the validator
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="validatorMessage"/>
        <attribute-type name="value" required="false">
            <description>
				The current value of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="valueChangeListener" required="false">
            <description>Listener for value changes</description>
            <proposal type="beanProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ValueChangeEvent"/>
            </proposal>
        </attribute-type>
        <attribute type="valueChangeListener"/>
        <attribute-type name="width" required="false">
            <description>
				Width of the component. Default value is "150".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="componentControl" start-tag="required">
        <description>
        	<![CDATA[The componentControl allows to call JavaScript API functions on components after some defined events.]]>
        </description>
        <attribute-type name="attachTiming" required="false">
            <description>
				Defines the page loading phase when componentControl is
				attached to another component. Default value is
				"onavailable"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="attachTiming"/>
        <attribute-type name="attachTo" required="false">
            <description>
				Client identifier of the component or id of the existing
				DOM element that is a source for given event. If
				attachTo is defined, the event is attached on the client
				according to the AttachTiming attribute. If attachTo is
				not defined, the event is attached on the server to the
				closest in the component tree parent component.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="attachTo"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="disableDefault" required="false">
            <description>
				Disable default action for target event ( append "return
				false;" to javascript )
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disableDefault"/>
        <attribute-type name="event" required="false">
            <description>
				The Event that is used to trigger the operation on the
				target component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="event"/>
        <attribute-type name="for" required="false">
            <description>
				Client identifier of the target component.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="for"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="name" required="false">
            <description>
				The optional name of the function that might be used to
				trigger the operation on the target component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="name"/>
        <attribute-type name="operation" required="false">
            <description>
				The function of Javascript API that will be invoked. The
				API method is attached to the 'component' property of
				the root DOM element that represents the target
				component. The function has two parameters - event and
				params. See: 'params' attribute for details.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="operation"/>
        <attribute-type name="params" required="false">
            <description>
				The set of parameters passed to the function of
				Javascript API that will be invoked. The JSON syntax is
				used to define the parameters, but without open and
				closed curve bracket. As an alternative, the set of
				f:param can be used to define the parameters passed to
				the API function. If both way are used to define the
				parameters, both set are concatenated. if names are
				equals, the f:param has a priority.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="params"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="contextMenu" start-tag="required">
        <description>
        	<![CDATA[The contextMenu component is used for creating multileveled context menus that are activated after a user defines an event ( "onmouseover" , "onclick" , etc.) on any element on the page.]]>
        </description>
        <attribute-type name="attachTiming" required="false">
            <description>
				Defines the timing when the menu is attached to the
				target element. Default value is "onavailable".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="attachTiming"/>
        <attribute-type name="attachTo" required="false">
            <description>
				Client identifier of the component or id of the existing
				DOM element that is a source for a given event. If
				attachTo is defined, the event is attached on the client
				according to the AttachTiming attribute. If both
				attached and attachTo attributes are defined, and
				attribute attached has value 'false', it is considered
				to have higher priority.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="attachTo"/>
        <attribute-type name="attached" required="false">
            <description>
				If the value of the "attached" attribute is true, the
				component is attached to the component, specified in the
				"attachTo" attribute or to the parent component, if
				"attachTo" is not defined. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="attached"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="disableDefaultMenu" required="false">
            <description>
				Forbids default handling for adjusted event. Default
				value "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disableDefaultMenu"/>
        <attribute-type name="disabledItemClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to disabled item of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledItemClass"/>
        <attribute-type name="disabledItemStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to disabled item when
				this component is rendered.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledItemStyle"/>
        <attribute-type name="event" required="false">
            <description>
				Defines an event on the parent element to display the
				menu. Default value is "oncontextmenu".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="event"/>
        <attribute-type name="hideDelay" required="false">
            <description>
				Delay between losing focus and menu closing. Default
				value is "800".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="hideDelay"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="itemClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to item of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="itemClass"/>
        <attribute-type name="itemStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to item when this
				component is rendered.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="itemStyle"/>
        <attribute-type name="oncollapse" required="false">
            <description>Event must occurs on menu closure</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncollapse"/>
        <attribute-type name="onexpand" required="false">
            <description>Event must occurs on menu opening</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onexpand"/>
        <attribute-type name="ongroupactivate" required="false">
            <description>
				HTML: script expression; some group was activated
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ongroupactivate"/>
        <attribute-type name="onitemselect" required="false">
            <description>
				HTML: script expression; some item was selected
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onitemselect"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: script expression; a pointer was moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: script expression; a pointer was moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: script expression; a pointer was moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="popupWidth" required="false">
            <description>
				Set minimal width for the all of the lists that will
				appear
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="popupWidth"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="selectItemClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to selected item of this component.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectItemClass"/>
        <attribute-type name="selectItemStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to selected item when
				this component is rendered.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectItemStyle"/>
        <attribute-type name="showDelay" required="false">
            <description>
				Delay between event and menu showing. Default value is
				"50".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showDelay"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="submitMode" required="false">
            <description>
				Sets the submission mode for all menu items of the menu
				except those where this attribute redefined. Possible
				value are "ajax","server", "none". Default value is
				"sever".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="submitMode"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="dataDefinitionList" start-tag="required">
        <description>
        	<![CDATA[The dataDefinitionList component is used for definition lists rendering. ]]>
        </description>
        <attribute-type name="ajaxKeys" required="false">
            <description>
				This attribute defines row keys that are updated after
				an AJAX request
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxKeys"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="columnClasses" required="false">
            <description>
				Comma-delimited list of CSS style classes that are be
				applied to the columns of this table. A space separated
				list of classes may also be specified for any individual
				column. If the number of elements in this list is less
				than the number of columns specified in the "columns"
				attribute, no "class" attribute is output for each
				column greater than the number of elements in the list.
				If the number of elements in the list is greater than
				the number of columns specified in the "columns"
				attribute, the elements at the position in the list
				after the value of the "columns" attribute are ignored
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="columnClasses"/>
        <attribute-type name="componentState" required="false">
            <description>
				It defines EL-binding for a component state for saving
				or redefinition
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="componentState"/>
        <attribute-type name="dir" required="false">
            <description>
				Direction indication for text that does not inherit
				directionality. Valid values are "LTR" (left-to-right)
				and "RTL" (right-to-left)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dir"/>
        <attribute-type name="first" required="false">
            <description>
				A zero-relative row number of the first row to display
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="first"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="lang" required="false">
            <description>
				Code describing the language used in the generated
				markup for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lang"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="rowClasses" required="false">
            <description>
				A comma-delimited list of CSS style classes that is
				applied to popup table rows. A space separated list of
				classes may also be specified for any individual row.
				The styles are applied, in turn, to each row in the
				table. For example, if the list has two elements, the
				first style class in the list is applied to the first
				row, the second to the second row, the first to the
				third row, the second to the fourth row, etc. In other
				words, we keep iterating through the list until we reach
				the end, and then we start at the beginning again
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowClasses"/>
        <attribute-type name="rowKey" required="false">
            <description>
				RowKey is a representation of an identifier for a
				specific data row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKey"/>
        <attribute-type name="rowKeyConverter" required="false">
            <description>Converter for a RowKey object.</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyConverter"/>
        <attribute-type name="rowKeyVar" required="false">
            <description>
				The attribute provides access to a row key in a Request
				scope
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyVar"/>
        <attribute-type name="rows" required="false">
            <description>
				A number of rows to display, or zero for all remaining
				rows in the table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rows"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="title" required="false">
            <description>
				Advisory title information about markup elements
				generated for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="var" required="false">
            <description>
				A request-scope attribute via which the data object for
				the current row will be used when iterating
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="var"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="dataFilterSlider" start-tag="required">
        <description>
			<![CDATA[The dataFilterSlider is a slider-based action component that is used for filtering table data.]]>
		</description>
        <attribute-type name="action" required="false">
            <description>
				MethodBinding pointing at the application action to be
				invoked, if this UIComponent is activated by you, during
				the Apply Request Values or Invoke Application phase of
				the request processing lifecycle, depending on the value
				of the immediate property
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="any"/>
            </proposal>
        </attribute-type>
        <attribute type="action"/>
        <attribute-type name="actionListener" required="false">
            <description>
				MethodBinding pointing at method accepting an
				ActionEvent with return type void
			</description>
            <proposal type="beanProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
        </attribute-type>
        <attribute type="actionListener"/>
        <attribute-type name="ajaxSingle" required="false">
            <description>
				boolean attribute which provides possibility to limit
				JSF tree processing(decoding, conversion/validation,
				value applying) to the component which send the request
				only
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSingle"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="bypassUpdates" required="false">
            <description>
				If "true", after process validations phase it skips
				updates of model beans on a force render response. It
				can be used for validating components input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bypassUpdates"/>
        <attribute-type name="clientErrorMessage" required="false">
            <description>
				An error message to use in client side validation events
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="clientErrorMessage"/>
        <attribute-type name="data" required="false">
            <description>
				Serialized (on default with JSON) data passed on the
				client by a developer on AJAX request. It's accessible
				via "data.foo" syntax
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="data"/>
        <attribute-type name="endRange" required="false">
            <description>A slider end point</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="endRange"/>
        <attribute-type name="eventsQueue" required="false">
            <description>
				Name of requests queue to avoid send next request before
				complete other from same event. Can be used to reduce
				number of requests of frequently events (key press,
				mouse move etc.)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="eventsQueue"/>
        <attribute-type name="fieldStyleClass" required="false">
            <description>
				The styleClass for input that displays the value :
				'manualInput' must be true
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fieldStyleClass"/>
        <attribute-type name="filterBy" required="false">
            <description>
				A getter of an object member required to compare a
				slider value to. This is a value that is used in results
				filtering
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="filterBy"/>
        <attribute-type name="focus" required="false">
            <description>
				id of element to set focus after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="focus"/>
        <attribute-type name="for" required="false">
            <description>
				The component using UIData (datatable id)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="for"/>
        <attribute-type name="forValRef" required="false">
            <description>
				This is a string which is used in a value attribute of
				the datatable. It is used for resetting the datatable
				back to the original list provided by a backing bean
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="forValRef"/>
        <attribute-type name="handleStyleClass" required="false">
            <description>The handleStyleClass for a handle</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="handleStyleClass"/>
        <attribute-type name="handleValue" required="false">
            <description>Current handle value</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="handleValue"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="ignoreDupResponses" required="false">
            <description>
				Attribute allows to ignore an Ajax Response produced by
				a request if the newest 'similar' request is in a queue
				already. ignoreDupResponses="true" does not cancel the
				request while it is processed on the server, but just
				allows to avoid unnecessary updates on the client side
				if the response isn't actual now
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ignoreDupResponses"/>
        <attribute-type name="immediate" required="false">
            <description>
				True means, that the default ActionListener should be
				executed immediately (i.e. during Apply Request Values
				phase of the request processing lifecycle), rather than
				waiting until the Invoke Application phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="increment" required="false">
            <description>
				Amount to which a handle on each slide/move should be
				incremented
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="increment"/>
        <attribute-type name="limitToList" required="false">
            <description>
				If "true", updates on client side ONLY elements from
				this 'reRender' property. If "false" (default) updates
				all rendered by ajax region components
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="limitToList"/>
        <attribute-type name="manualInput" required="false">
            <description>
				False value for this attribute makes text field
				"read-only" and "hidden". Hence, the value can be
				changed only from a handle
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="manualInput"/>
        <attribute-type name="onSlideSubmit" required="false">
            <description>
				DEPRECATED (use submitOnSlide). If the slider value
				changes must submit a form. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onSlideSubmit"/>
        <attribute-type name="onbeforedomupdate" required="false">
            <description>
				JavaScript code for call before DOM has been updated on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforedomupdate"/>
        <attribute-type name="onchange" required="false">
            <description>Event occur on chage</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onchange"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="oncomplete" required="false">
            <description>
				JavaScript code for call after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncomplete"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onerror" required="false">
            <description>
				HTML: a script expression; event fires whenever an
				JavaScript error occurs
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onerror"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="onslide" required="false">
            <description>Event occur on sliding</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onslide"/>
        <attribute-type name="process" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, processed at the phases 2-5 in case of
				AjaxRequest caused by this component. Can be single id,
				comma-separated list of Id's, or EL Expression with
				array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="process"/>
        <attribute-type name="rangeStyleClass" required="false">
            <description>
				The rangeStyleClass for the background div showing a
				full range
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rangeStyleClass"/>
        <attribute-type name="reRender" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, rendered in case of AjaxRequest caused by
				this component. Can be single id, comma-separated list
				of Id's, or EL Expression with array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="reRender"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="requestDelay" required="false">
            <description>
				Attribute defines the time (in ms.) that the request
				will be wait in the queue before it is ready to send.
				When the delay time is over, the request will be sent to
				the server or removed if the newest 'similar' request is
				in a queue already
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requestDelay"/>
        <attribute-type name="sliderListener" required="false">
            <description>
				MethodBinding representing an action listener method
				that will be notified after changing of slider control
				position
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sliderListener"/>
        <attribute-type name="startRange" required="false">
            <description>A slider begin point</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="startRange"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="storeResults" required="false">
            <description>
				Specifies if the component will store a UIData object
				(your table rows) in session
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="storeResults"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				The styleClass for the container div surrounding the
				component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="submitOnSlide" required="false">
            <description>
				If the slider value changes must submit a form. Default
				value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="submitOnSlide"/>
        <attribute-type name="timeout" required="false">
            <description>
				Response waiting time on a particular request. If a
				response is not received during this time, the request
				is aborted
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="timeout"/>
        <attribute-type name="trackStyleClass" required="false">
            <description>
				The trackStyleClass for a background div
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="trackStyleClass"/>
        <attribute-type name="trailer" required="false">
            <description>
				It shows or hides a trailer following a handle
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="trailer"/>
        <attribute-type name="trailerStyleClass" required="false">
            <description>
				The trailerStyleClass for a div following a handle
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="trailerStyleClass"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="width" required="false">
            <description>
				Width of the slider control. Default value is "200px".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="dataGrid" start-tag="required">
        <description>
        	<![CDATA[The dataGrid component is used to render data as a grid. ]]>
        </description>
        <attribute-type name="ajaxKeys" required="false">
            <description>
				This attribute defines row keys that are updated after
				an AJAX request
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxKeys"/>
        <attribute-type name="align" required="false">
            <description>
				left|center|right [CI] Deprecated. This attribute
				specifies the position of the table with respect to the
				document. Permitted values:

				* left: The table is to the left of the document. *
				center: The table is to the center of the document. *
				right: The table is to the right of the document
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="align"/>
        <attribute-type name="bgcolor" required="false">
            <description>
				Deprecated. This attribute sets the background color for
				the document body or table cells.

				This attribute sets the background color of the canvas
				for the document body (the BODY element) or for tables
				(the TABLE, TR, TH, and TD elements). Additional
				attributes for specifying text color can be used with
				the BODY element.

				This attribute has been deprecated in favor of style
				sheets for specifying background color information
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bgcolor"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="border" required="false">
            <description>
				This attributes specifies the width of the frame around
				a component. Default value is "0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="border"/>
        <attribute-type name="captionClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to caption for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="captionClass"/>
        <attribute-type name="captionStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to caption when this
				component is rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="captionStyle"/>
        <attribute-type name="cellpadding" required="false">
            <description>
				This attribute specifies the amount of space between the
				border of the cell and its contents. Default value is
				"0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cellpadding"/>
        <attribute-type name="cellspacing" required="false">
            <description>
				This attribute specifies the amount of space between the
				border of the cell and its contents. The attribute also
				specifies the amount of space to leave between cells.
				Default value is "0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cellspacing"/>
        <attribute-type name="columnClasses" required="false">
            <description>
				Comma-delimited list of CSS style classes that are be
				applied to the columns of this table. A space separated
				list of classes may also be specified for any individual
				column. If the number of elements in this list is less
				than the number of columns specified in the "columns"
				attribute, no "class" attribute is output for each
				column greater than the number of elements in the list.
				If the number of elements in the list is greater than
				the number of columns specified in the "columns"
				attribute, the elements at the position in the list
				after the value of the "columns" attribute are ignored
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="columnClasses"/>
        <attribute-type name="columns" required="false">
            <description>Number of columns</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="columns"/>
        <attribute-type name="componentState" required="false">
            <description>
				It defines EL-binding for a component state for saving
				or redefinition
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="componentState"/>
        <attribute-type name="dir" required="false">
            <description>
				Direction indication for text that does not inherit
				directionality. Valid values are "LTR" (left-to-right)
				and "RTL" (right-to-left)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dir"/>
        <attribute-type name="elements" required="false">
            <description>Number of elements in grid</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="elements"/>
        <attribute-type name="first" required="false">
            <description>
				A zero-relative row number of the first row to display
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="first"/>
        <attribute-type name="footerClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to footer for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="footerClass"/>
        <attribute-type name="frame" required="false">
            <description>
				void|above|below|hsides|lhs|rhs|vsides|box|border [CI]
				This attribute specifies which sides of the frame
				surrounding a table will be visible. Possible values:

				* void: No sides. This is the default value. * above:
				The top side only. * below: The bottom side only. *
				hsides: The top and bottom sides only. * vsides: The
				right and left sides only. * lhs: The left-hand side
				only. * rhs: The right-hand side only. * box: All four
				sides. * border: All four sides
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="frame"/>
        <attribute-type name="headerClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to header for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerClass"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="lang" required="false">
            <description>
				Code describing the language used in the generated
				markup for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lang"/>
        <attribute-type name="onRowClick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
				on row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowClick"/>
        <attribute-type name="onRowDblClick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked on row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowDblClick"/>
        <attribute-type name="onRowMouseDown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down on row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseDown"/>
        <attribute-type name="onRowMouseMove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within of
				row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseMove"/>
        <attribute-type name="onRowMouseOut" required="false">
            <description>
				HTML: a script expression; a pointer is moved away of
				row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseOut"/>
        <attribute-type name="onRowMouseOver" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto of
				row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseOver"/>
        <attribute-type name="onRowMouseUp" required="false">
            <description>
				HTML: script expression; a pointer button is released on
				row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseUp"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="rowClasses" required="false">
            <description>
				A comma-delimited list of CSS style classes that is
				applied to popup table rows. A space separated list of
				classes may also be specified for any individual row.
				The styles are applied, in turn, to each row in the
				table. For example, if the list has two elements, the
				first style class in the list is applied to the first
				row, the second to the second row, the first to the
				third row, the second to the fourth row, etc. In other
				words, we keep iterating through the list until we reach
				the end, and then we start at the beginning again
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowClasses"/>
        <attribute-type name="rowKey" required="false">
            <description>
				RowKey is a representation of an identifier for a
				specific data row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKey"/>
        <attribute-type name="rowKeyConverter" required="false">
            <description>Converter for a row key object</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyConverter"/>
        <attribute-type name="rowKeyVar" required="false">
            <description>
				Request scoped variable for client access to rowKey
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyVar"/>
        <attribute-type name="rules" required="false">
            <description>
				This attribute specifies which rules will appear between
				cells within a table. The rendering of rules is user
				agent dependent. Possible values:

				* none: No rules. This is the default value. * groups:
				Rules will appear between row groups (see THEAD, TFOOT,
				and TBODY) and column groups (see COLGROUP and COL)
				only. * rows: Rules will appear between rows only. *
				cols: Rules will appear between columns only. * all:
				Rules will appear between all rows and columns
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rules"/>
        <attribute-type name="stateVar" required="false">
            <description>
				The attribute provides access to a component state on
				the client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="stateVar"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="summary" required="false">
            <description>
				This attribute provides a summary of the table's purpose
				and structure for user agents rendering to non-visual
				media such as speech and Braille
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="summary"/>
        <attribute-type name="title" required="false">
            <description>
				Advisory title information about markup elements
				generated for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="var" required="false">
            <description>
				A request-scope attribute via which the data object for
				the current row will be used when iterating
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="var"/>
        <attribute-type name="width" required="false">
            <description>
				This attribute specifies the desired width of the entire
				table and is intended for visual user agents. When the
				value is percentage value, the value is relative to the
				user agent's available horizontal space. In the absence
				of any width specification, table width is determined by
				the user agent
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="dataList" start-tag="required">
        <description>
        	<![CDATA[The dataList component is used for unordered lists rendering.]]>
        </description>
        <attribute-type name="ajaxKeys" required="false">
            <description>
				This attribute defines row keys that are updated after
				an AJAX request
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxKeys"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="columnClasses" required="false">
            <description>
				Comma-delimited list of CSS style classes that are be
				applied to the columns of this table. A space separated
				list of classes may also be specified for any individual
				column. If the number of elements in this list is less
				than the number of columns specified in the "columns"
				attribute, no "class" attribute is output for each
				column greater than the number of elements in the list.
				If the number of elements in the list is greater than
				the number of columns specified in the "columns"
				attribute, the elements at the position in the list
				after the value of the "columns" attribute are ignored
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="columnClasses"/>
        <attribute-type name="componentState" required="false">
            <description>
				It defines EL-binding for a component state for saving
				or redefinition
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="componentState"/>
        <attribute-type name="dir" required="false">
            <description>
				Direction indication for text that does not inherit
				directionality. Valid values are "LTR" (left-to-right)
				and "RTL" (right-to-left)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dir"/>
        <attribute-type name="first" required="false">
            <description>
				A zero-relative row number of the first row to display
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="first"/>
        <attribute-type name="footerClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to any footer generated for this table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="footerClass"/>
        <attribute-type name="headerClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to any header generated for this table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerClass"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="lang" required="false">
            <description>
				Code describing the language used in the generated
				markup for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lang"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="rowClasses" required="false">
            <description>
				A comma-delimited list of CSS style classes that is
				applied to popup table rows. A space separated list of
				classes may also be specified for any individual row.
				The styles are applied, in turn, to each row in the
				table. For example, if the list has two elements, the
				first style class in the list is applied to the first
				row, the second to the second row, the first to the
				third row, the second to the fourth row, etc. In other
				words, we keep iterating through the list until we reach
				the end, and then we start at the beginning again
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowClasses"/>
        <attribute-type name="rowKey" required="false">
            <description>
				RowKey is a representation of an identifier for a
				specific data row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKey"/>
        <attribute-type name="rowKeyConverter" required="false">
            <description>Converter for a row key object</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyConverter"/>
        <attribute-type name="rowKeyVar" required="false">
            <description>
				The attribute provides access to a row key in a Request
				scope
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyVar"/>
        <attribute-type name="rows" required="false">
            <description>
				A number of rows to display, or zero for all remaining
				rows in the table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rows"/>
        <attribute-type name="stateVar" required="false">
            <description>
				The attribute provides access to a component state on
				the client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="stateVar"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="title" required="false">
            <description>
				Advisory title information about markup elements
				generated for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="type" required="false">
            <description>
				Corresponds to the HTML DL type attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="type"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="var" required="false">
            <description>
				A request-scope attribute via which the data object for
				the current row will be used when iterating
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="var"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="dataOrderedList" start-tag="required">
        <description>
        	<![CDATA[The dataOrderedList component is used for ordered lists rendering. ]]>
        </description>
        <attribute-type name="ajaxKeys" required="false">
            <description>
				This attribute defines row keys that are updated after
				an AJAX request
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxKeys"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="columnClasses" required="false">
            <description>
				Comma-delimited list of CSS style classes that are be
				applied to the columns of this table. A space separated
				list of classes may also be specified for any individual
				column. If the number of elements in this list is less
				than the number of columns specified in the "columns"
				attribute, no "class" attribute is output for each
				column greater than the number of elements in the list.
				If the number of elements in the list is greater than
				the number of columns specified in the "columns"
				attribute, the elements at the position in the list
				after the value of the "columns" attribute are ignored
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="columnClasses"/>
        <attribute-type name="componentState" required="false">
            <description>
				It defines EL-binding for a component state for saving
				or redefinition
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="componentState"/>
        <attribute-type name="dir" required="false">
            <description>
				Direction indication for text that does not inherit
				directionality. Valid values are "LTR" (left-to-right)
				and "RTL" (right-to-left)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dir"/>
        <attribute-type name="first" required="false">
            <description>
				A zero-relative row number of the first row to display
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="first"/>
        <attribute-type name="footerClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to any footer generated for this table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="footerClass"/>
        <attribute-type name="headerClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to any header generated for this table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerClass"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="lang" required="false">
            <description>
				Code describing the language used in the generated
				markup for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lang"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="rowClasses" required="false">
            <description>
				A comma-delimited list of CSS style classes that is
				applied to popup table rows. A space separated list of
				classes may also be specified for any individual row.
				The styles are applied, in turn, to each row in the
				table. For example, if the list has two elements, the
				first style class in the list is applied to the first
				row, the second to the second row, the first to the
				third row, the second to the fourth row, etc. In other
				words, we keep iterating through the list until we reach
				the end, and then we start at the beginning again
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowClasses"/>
        <attribute-type name="rowKey" required="false">
            <description>
				RowKey is a representation of an identifier for a
				specific data row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKey"/>
        <attribute-type name="rowKeyConverter" required="false">
            <description>Converter for a RowKey object.</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyConverter"/>
        <attribute-type name="rowKeyVar" required="false">
            <description>
				The attribute provides access to a row key in a Request
				scope
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyVar"/>
        <attribute-type name="rows" required="false">
            <description>
				A number of rows to display, or zero for all remaining
				rows in the table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rows"/>
        <attribute-type name="stateVar" required="false">
            <description>
				The attribute provides access to a component state on
				the client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="stateVar"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="title" required="false">
            <description>
				Advisory title information about markup elements
				generated for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="type" required="false">
            <description>
				Corresponds to the HTML OL type attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="type"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="var" required="false">
            <description>
				A request-scope attribute via which the data object for
				the current row will be used when iterating
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="var"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="dataTable" start-tag="required">
        <description>
        	<![CDATA[The dataTable component is used for table rendering. ]]>
        </description>
        <attribute-type name="ajaxKeys" required="false">
            <description>
				This attribute defines row keys that are updated after
				an AJAX request
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxKeys"/>
        <attribute-type name="align" required="false">
            <description>
				left|center|right [CI] Deprecated. This attribute
				specifies the position of the table with respect to the
				document. Permitted values:

				* left: The table is to the left of the document. *
				center: The table is to the center of the document. *
				right: The table is to the right of the document
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="align"/>
        <attribute-type name="bgcolor" required="false">
            <description>
				Deprecated. This attribute sets the background color for
				the document body or table cells.

				This attribute sets the background color of the canvas
				for the document body (the BODY element) or for tables
				(the TABLE, TR, TH, and TD elements). Additional
				attributes for specifying text color can be used with
				the BODY element.

				This attribute has been deprecated in favor of style
				sheets for specifying background color information
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bgcolor"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="border" required="false">
            <description>
				This attributes specifies the width of the frame around
				a component. Default value is "0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="border"/>
        <attribute-type name="captionClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to caption for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="captionClass"/>
        <attribute-type name="captionStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to caption when this
				component is rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="captionStyle"/>
        <attribute-type name="cellpadding" required="false">
            <description>
				This attribute specifies the amount of space between the
				border of the cell and its contents. Default value is
				"0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cellpadding"/>
        <attribute-type name="cellspacing" required="false">
            <description>
				This attribute specifies the amount of space between the
				border of the cell and its contents. The attribute also
				specifies the amount of space to leave between cells.
				Default value is "0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cellspacing"/>
        <attribute-type name="columnClasses" required="false">
            <description>
				Comma-delimited list of CSS style classes that are be
				applied to the columns of this table. A space separated
				list of classes may also be specified for any individual
				column. If the number of elements in this list is less
				than the number of columns specified in the "columns"
				attribute, no "class" attribute is output for each
				column greater than the number of elements in the list.
				If the number of elements in the list is greater than
				the number of columns specified in the "columns"
				attribute, the elements at the position in the list
				after the value of the "columns" attribute are ignored
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="columnClasses"/>
        <attribute-type name="columns" required="false">
            <description>Number of columns</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="columns"/>
        <attribute-type name="columnsWidth" required="false">
            <description>
				Comma-separated list of width attribute for every
				column. Specifies a default width for each column in the
				table. In addition to the standard pixel, percentage,
				and relative values, this attribute allows the special
				form "0*" (zero asterisk) which means that the width of
				the each column in the group should be the minimum width
				necessary to hold the column's contents. This implies
				that a column's entire contents must be known before its
				width may be correctly computed. Authors should be aware
				that specifying "0*" will prevent visual user agents
				from rendering a table incrementally
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="columnsWidth"/>
        <attribute-type name="componentState" required="false">
            <description>
				It defines EL-binding for a component state for saving
				or redefinition
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="componentState"/>
        <attribute-type name="dir" required="false">
            <description>
				Direction indication for text that does not inherit
				directionality. Valid values are "LTR" (left-to-right)
				and "RTL" (right-to-left)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dir"/>
        <attribute-type name="first" required="false">
            <description>
				A zero-relative row number of the first row to display
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="first"/>
        <attribute-type name="footerClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to footer for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="footerClass"/>
        <attribute-type name="frame" required="false">
            <description>
				void|above|below|hsides|lhs|rhs|vsides|box|border [CI]
				This attribute specifies which sides of the frame
				surrounding a table will be visible. Possible values:

				* void: No sides. This is the default value. * above:
				The top side only. * below: The bottom side only. *
				hsides: The top and bottom sides only. * vsides: The
				right and left sides only. * lhs: The left-hand side
				only. * rhs: The right-hand side only. * box: All four
				sides. * border: All four sides
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="frame"/>
        <attribute-type name="headerClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to header for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerClass"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="lang" required="false">
            <description>
				Code describing the language used in the generated
				markup for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lang"/>
        <attribute-type name="onRowContextMenu" required="false">
            <description>
				JavaScript handler to be called on right click. Returning false prevents default browser context menu from being displayed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowContextMenu"/>
        <attribute-type name="onRowClick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
				on row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowClick"/>
        <attribute-type name="onRowDblClick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked on row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowDblClick"/>
        <attribute-type name="onRowMouseDown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down on row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseDown"/>
        <attribute-type name="onRowMouseMove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within of
				row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseMove"/>
        <attribute-type name="onRowMouseOut" required="false">
            <description>
				HTML: a script expression; a pointer is moved away of
				row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseOut"/>
        <attribute-type name="onRowMouseOver" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto of
				row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseOver"/>
        <attribute-type name="onRowMouseUp" required="false">
            <description>
				HTML: script expression; a pointer button is released on
				row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseUp"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="rowClasses" required="false">
            <description>
				A comma-delimited list of CSS style classes that is
				applied to popup table rows. A space separated list of
				classes may also be specified for any individual row.
				The styles are applied, in turn, to each row in the
				table. For example, if the list has two elements, the
				first style class in the list is applied to the first
				row, the second to the second row, the first to the
				third row, the second to the fourth row, etc. In other
				words, we keep iterating through the list until we reach
				the end, and then we start at the beginning again
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowClasses"/>
        <attribute-type name="rowKeyConverter" required="false">
            <description>Converter for a RowKey object.</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyConverter"/>
        <attribute-type name="rowKeyVar" required="false">
            <description>
				The attribute provides access to a row key in a Request
				scope
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyVar"/>
        <attribute-type name="rows" required="false">
            <description>
				A number of rows to display, or zero for all remaining
				rows in the table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rows"/>
        <attribute-type name="rules" required="false">
            <description>
				This attribute specifies which rules will appear between
				cells within a table. The rendering of rules is user
				agent dependent. Possible values:

				* none: No rules. This is the default value. * groups:
				Rules will appear between row groups (see THEAD, TFOOT,
				and TBODY) and column groups (see COLGROUP and COL)
				only. * rows: Rules will appear between rows only. *
				cols: Rules will appear between columns only. * all:
				Rules will appear between all rows and columns
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rules"/>
        <attribute-type name="sortMode" required="false">
            <description>
				Defines mode of sorting. Possible values are 'single'
				for sorting of one column and 'multi' for some.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortMode"/>
        <attribute-type name="sortPriority" required="false">
            <description>
				Defines a set of columns ids in the sorting order
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortPriority"/>
        <attribute-type name="stateVar" required="false">
            <description>
				The attribute provides access to a component state on
				the client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="stateVar"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="title" required="false">
            <description>
				Advisory title information about markup elements
				generated for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="var" required="false">
            <description>
				A request-scope attribute via which the data object for
				the current row will be used when iterating
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="var"/>
        <attribute-type name="width" required="false">
            <description>
				This attribute specifies the desired width of the entire
				table and is intended for visual user agents. When the
				value is percentage value, the value is relative to the
				user agent's available horizontal space. In the absence
				of any width specification, table width is determined by
				the user agent
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="datascroller" start-tag="required">
        <description>
			<![CDATA[The datascroller component is designed for providing the functionality of tables scrolling using Ajax requests.]]>
        </description>
        <attribute-type name="action" required="false">
            <description>
				MethodBinding pointing at the application action to be
				invoked, if this UIComponent is activated by you, during
				the Apply Request Values or Invoke Application phase of
				the request processing lifecycle, depending on the value
				of the immediate property
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="any"/>
            </proposal>
        </attribute-type>
        <attribute type="action"/>
        <attribute-type name="actionListener" required="false">
            <description>
				MethodBinding pointing at method accepting an
				ActionEvent with return type void
			</description>
            <proposal type="beanProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
        </attribute-type>
        <attribute type="actionListener"/>
        <attribute-type name="ajaxSingle" required="false">
            <description>
				Boolean attribute which provides possibility to limit
				JSF tree processing(decoding, conversion/validation,
				value applying) to the component which send the request
				only.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSingle"/>
        <attribute-type name="align" required="false">
            <description>
				This attribute specifies the position of the table with
				relatively to the document. Possible values are
				"left","center","right ". Default value is "center".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="align"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="boundaryControls" required="false">
            <description>
				The attribute specifies the visibility of
				boundaryControls. Possible values are: "show" (controls
				are always visible ). "hide" (controls are hidden.
				"auto" (unnecessary controls are hidden). Default value
				is "show".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="boundaryControls"/>
        <attribute-type name="bypassUpdates" required="false">
            <description>
				If "true", after process validations phase it skips
				updates of model beans on a force render response. It
				can be used for validating components input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bypassUpdates"/>
        <attribute-type name="data" required="false">
            <description>
				Serialized (on default with JSON) data passed on the
				client by a developer on AJAX request. It's accessible
				via "data.foo" syntax
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="data"/>
        <attribute-type name="eventsQueue" required="false">
            <description>
				Name of requests queue to avoid send next request before
				complete other from same event. Can be used to reduce
				number of requests of frequently events (key press,
				mouse move etc.)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="eventsQueue"/>
        <attribute-type name="fastControls" required="false">
            <description>
				The attribute specifies the visibility of fastControls.
				Possible values are: "show" (controls are always visible
				). "hide" (controls are hidden. "auto" (unnecessary
				controls are hidden). Default value is "show".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fastControls"/>
        <attribute-type name="fastStep" required="false">
            <description>
				The attribute indicates pages quantity to switch onto
				when fast scrolling is used. Default value is "0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fastStep"/>
        <attribute-type name="focus" required="false">
            <description>
				id of element to set focus after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="focus"/>
        <attribute-type name="for" required="false">
            <description>
				ID of the table component whose data is scrollled
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="for"/>
        <attribute-type name="handleValue" required="false">
            <description>Current handle value</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="handleValue"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="ignoreDupResponses" required="false">
            <description>
				Attribute allows to ignore an Ajax Response produced by
				a request if the newest 'similar' request is in a queue
				already. ignoreDupResponses="true" does not cancel the
				request while it is processed on the server, but just
				allows to avoid unnecessary updates on the client side
				if the response isn't actual now. Default value is
				"true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ignoreDupResponses"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="inactiveStyle" required="false">
            <description>
				Corresponds to the HTML style attribute for the inactive
				cell on scroller
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inactiveStyle"/>
        <attribute-type name="inactiveStyleClass" required="false">
            <description>
				Corresponds to the HTML class attribute for the inactive
				cell on scroller
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inactiveStyleClass"/>
        <attribute-type name="limitToList" required="false">
            <description>
				If "true", updates on client side ONLY elements from
				this 'reRender' property. If "false" (default) updates
				all rendered by ajax region components
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="limitToList"/>
        <attribute-type name="maxPages" required="false">
            <description>
				Maximum quantity of pages. Default value is "10".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="maxPages"/>
        <attribute-type name="onbeforedomupdate" required="false">
            <description>
				JavaScript code for call before DOM has been updated on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforedomupdate"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="oncomplete" required="false">
            <description>
				JavaScript code for call after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncomplete"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="onpagechange" required="false">
            <description>
				JavaScript handler for call after the page is changed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onpagechange"/>
        <attribute-type name="page" required="false">
            <description>
				If page &amp;gt;= 1 then it's a page number to show
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="page"/>
        <attribute-type name="pageIndexVar" required="false">
            <description>
				Name of variable in request scope containing index of
				active page
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="pageIndexVar"/>
        <attribute-type name="pagesVar" required="false">
            <description>
				Name of variable in request scope containing number of
				pages
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="pagesVar"/>
        <attribute-type name="process" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, processed at the phases 2-5 in case of
				AjaxRequest caused by this component. Can be single id,
				comma-separated list of Id's, or EL Expression with
				array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="process"/>
        <attribute-type name="reRender" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, rendered in case of AjaxRequest caused by
				this component. Can be single id, comma-separated list
				of Id's, or EL Expression with array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="reRender"/>
        <attribute-type name="renderIfSinglePage" required="false">
            <description>
				If renderIfSinglePage is "true" then datascroller is
				displayed on condition that the data hold on one page.
				Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="renderIfSinglePage"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="requestDelay" required="false">
            <description>
				Attribute defines the time (in ms.) that the request
				will be wait in the queue before it is ready to send.
				When the delay time is over, the request will be sent to
				the server or removed if the newest 'similar' request is
				in a queue already
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requestDelay"/>
        <attribute-type name="scrollerListener" required="false">
            <description>
				MethodBinding representing an action listener method
				that will be notified after scrolling
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="scrollerListener"/>
        <attribute-type name="selectedStyle" required="false">
            <description>
				Corresponds to the HTML style attribute for the selected
				cell on scroller
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectedStyle"/>
        <attribute-type name="selectedStyleClass" required="false">
            <description>
				Corresponds to the HTML class attribute for the selected
				cell on scroller
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectedStyleClass"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="stepControls" required="false">
            <description>
				The attribute specifies the visibility of stepControls.
				Possible values are: "show" (controls are always visible
				). "hide" (controls are hidden. "auto" (unnecessary
				controls are hidden). Default value is "show".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="stepControls"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="tableStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to outside table when
				this component is rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tableStyle"/>
        <attribute-type name="tableStyleClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to outside table of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tableStyleClass"/>
        <attribute-type name="timeout" required="false">
            <description>
				Response waiting time on a particular request. If a
				response is not received during this time, the request
				is aborted
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="timeout"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="dndParam" start-tag="required">
        <description>
			<![CDATA[The dndParam component is used for passing parameters during drag-and-drop operations.]]>
		</description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="name" required="true">
            <description>A name of this parameter</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="name"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="type" required="false">
            <description>
				This attribute defines parameter functionality. Possible
				values are "drag", "drop" and "default". Default value
				is "default".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="type"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="dragIndicator" start-tag="required">
        <description>
			<![CDATA[The dragIndicator is a component for defining what appears under the mouse cursor during drag-and-drop operations. The displayed drag indicator can show information about the dragged elements.]]>
		</description>
        <attribute-type name="acceptClass" required="false">
            <description>
				Corresponds to the HTML class attribute and added to an
				indicator when a drop is accepted
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="acceptClass"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="rejectClass" required="false">
            <description>
				Corresponds to the HTML class attribute and added to an
				indicator when a drop is rejected
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rejectClass"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="dragListener" start-tag="required">
        <description>
        	<![CDATA[The dragListener represents an action listener method that is notified after a drag operation.]]>
        </description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="dragSupport" start-tag="required">
        <description>
        	<![CDATA[The dragSupport component defines a subtree of the component tree as draggable for drag-and-drop operations. Within such a "drag zone," you can click the mouse button on an item and drag it to any component that supports drop operations (a "drop zone"). It encodes all the necessary JavaScript for supporting drag-and-drop operations.]]>
        </description>
        <attribute-type name="action" required="false">
            <description>
				MethodBinding pointing at the application action to be
				invoked, if this UIComponent is activated by you, during
				the Apply Request Values or Invoke Application phase of
				the request processing lifecycle, depending on the value
				of the immediate property
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="any"/>
            </proposal>
        </attribute-type>
        <attribute type="action"/>
        <attribute-type name="actionListener" required="false">
            <description>
				MethodBinding pointing at method accepting an
				ActionEvent with return type void
			</description>
            <proposal type="beanProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
        </attribute-type>
        <attribute type="actionListener"/>
        <attribute-type name="ajaxSingle" required="false">
            <description>
				boolean attribute which provides possibility to limit
				JSF tree processing(decoding, conversion/validation,
				value applying) to the component which send the request
				only
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSingle"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="bypassUpdates" required="false">
            <description>
				If "true", after process validations phase it skips
				updates of model beans on a force render response. It
				can be used for validating components input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bypassUpdates"/>
        <attribute-type name="data" required="false">
            <description>
				Serialized (on default with JSON) data passed on the
				client by a developer on AJAX request. It's accessible
				via "data.foo" syntax
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="data"/>
        <attribute-type name="disableDefault" required="false">
            <description>
				Disable default action for target event (append "return
				false;" to JavaScript)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disableDefault"/>
        <attribute-type name="dragIndicator" required="false">
            <description>
				Id of a component that is used as drag pointer during
				the drag operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dragIndicator"/>
        <attribute-type name="dragListener" required="false">
            <description>
				MethodBinding representing an action listener method
				that will be notified after drag operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dragListener"/>
        <attribute-type name="dragType" required="false">
            <description>
				A drag zone type that is used for zone definition, which
				elements can be accepted by a drop zone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dragType"/>
        <attribute-type name="dragValue" required="false">
            <description>
				Data to be sent to a drop zone after a drop event
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dragValue"/>
        <attribute-type name="eventsQueue" required="false">
            <description>
				Name of requests queue to avoid send next request before
				complete other from same event. Can be used to reduce
				number of requests of frequently events (key press,
				mouse move etc.)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="eventsQueue"/>
        <attribute-type name="focus" required="false">
            <description>
				id of element to set focus after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="focus"/>
        <attribute-type name="grabCursors" required="false">
            <description>
				List of comma separated cursors that indicates then you
				can grab and drag an object
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="grabCursors"/>
        <attribute-type name="grabbingCursors" required="false">
            <description>
				list of comma separated cursors that indicates then the
				you has grabbed something
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="grabbingCursors"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="ignoreDupResponses" required="false">
            <description>
				Attribute allows to ignore an Ajax Response produced by
				a request if the newest 'similar' request is in a queue
				already. ignoreDupResponses="true" does not cancel the
				request while it is processed on the server, but just
				allows to avoid unnecessary updates on the client side
				if the response isn't actual now
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ignoreDupResponses"/>
        <attribute-type name="immediate" required="false">
            <description>
				True means, that the default ActionListener should be
				executed immediately (i.e. during Apply Request Values
				phase of the request processing lifecycle), rather than
				waiting until the Invoke Application phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="limitToList" required="false">
            <description>
				If "true", updates on client side ONLY elements from
				this 'reRender' property. If "false" (default) updates
				all rendered by ajax region components
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="limitToList"/>
        <attribute-type name="onbeforedomupdate" required="false">
            <description>
				JavaScript code for call before DOM has been updated on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforedomupdate"/>
        <attribute-type name="oncomplete" required="false">
            <description>
				JavaScript code for call after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncomplete"/>
        <attribute-type name="ondragend" required="false">
            <description>
				A JavaScript event handler called after a drag operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondragend"/>
        <attribute-type name="ondragstart" required="false">
            <description>
				A JavaScript event handler called before drag operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondragstart"/>
        <attribute-type name="ondropout" required="false">
            <description>
				A JavaScript event handler called after a out operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondropout"/>
        <attribute-type name="ondropover" required="false">
            <description>
				A JavaScript event handler called after a drop operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondropover"/>
        <attribute-type name="process" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, processed at the phases 2-5 in case of
				AjaxRequest caused by this component. Can be single id,
				comma-separated list of Id's, or EL Expression with
				array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="process"/>
        <attribute-type name="reRender" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, rendered in case of AjaxRequest caused by
				this component. Can be single id, comma-separated list
				of Id's, or EL Expression with array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="reRender"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="requestDelay" required="false">
            <description>
				Attribute defines the time (in ms.) that the request
				will be wait in the queue before it is ready to send.
				When the delay time is over, the request will be sent to
				the server or removed if the newest 'similar' request is
				in a queue already
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requestDelay"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="timeout" required="false">
            <description>
				Response waiting time on a particular request. If a
				response is not received during this time, the request
				is aborted
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="timeout"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="dropDownMenu" start-tag="required">
        <description>
        	<![CDATA[The dropDownMenu component is used for creating multilevel drop-down menus.]]>
        </description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="direction" required="false">
            <description>
				Defines direction of the popup list to appear. Possible
				values are "top-right", "top-right", "top-left",
				"bottom-right", "bottom-left", "auto". Default value is
				"auto".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="direction"/>
        <attribute-type name="disabled" required="false">
            <description>
				Attribute 'disabled' provides possibility to make the
				whole menu disabled if its value equals to "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="disabled"/>
        <attribute-type name="disabledItemClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to disabled item of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledItemClass"/>
        <attribute-type name="disabledItemStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to disabled item when
				this component is rendered.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledItemStyle"/>
        <attribute-type name="disabledLabelClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to disabled label of DD menu
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledLabelClass"/>
        <attribute-type name="event" required="false">
            <description>
				Defines the event on the representation element that
				triggers the menu's appearance.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="event"/>
        <attribute-type name="hideDelay" required="false">
            <description>
				Delay between losing focus and menu closing. Default
				value is "800".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="hideDelay"/>
        <attribute-type name="horizontalOffset" required="false">
            <description>
				Sets the horizontal offset between popup list and label
				element. Default value is "0". conjunction point
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="horizontalOffset"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="itemClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to item of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="itemClass"/>
        <attribute-type name="itemStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to item when this
				component is rendered.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="itemStyle"/>
        <attribute-type name="jointPoint" required="false">
            <description>
				Sets the corner of the label for the pop-up to be
				connected with. Possible values are "tr", "tl", "bl",
				"br", "bottom-left", "auto". Default value is "auto".
				"tr" stands for top-right.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="jointPoint"/>
        <attribute-type name="oncollapse" required="false">
            <description>Event must occurs on menu closure</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncollapse"/>
        <attribute-type name="onexpand" required="false">
            <description>Event must occurs on menu opening</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onexpand"/>
        <attribute-type name="ongroupactivate" required="false">
            <description>
				HTML: script expression; some group was activated.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ongroupactivate"/>
        <attribute-type name="onitemselect" required="false">
            <description>
				HTML: script expression; some item was selected.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onitemselect"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: script expression; a pointer was moved within.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: script expression; a pointer was moved away.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: script expression; a pointer was moved onto.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="popupWidth" required="false">
            <description>
				Sets minimal width for all lists that will appear.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="popupWidth"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="selectItemClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to selected item of this component.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectItemClass"/>
        <attribute-type name="selectItemStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to selected item when
				this component is rendered.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectItemStyle"/>
        <attribute-type name="selectedLabelClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to selected label of DD menu
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectedLabelClass"/>
        <attribute-type name="showDelay" required="false">
            <description>
				Delay between event and menu showing. Default value is
				"50".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showDelay"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="submitMode" required="false">
            <description>
				Sets the submission mode for all menu items of the menu
				except ones where this attribute redefined. Possible
				values are "ajax","server","none". Default value is
				"sever".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="submitMode"/>
        <attribute-type name="value" required="false">
            <description>
				Defines representation text for Label used for menu
				calls.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="verticalOffset" required="false">
            <description>
				Sets the vertical offset between popup list and label
				element. Default value is "0". conjunction point
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="verticalOffset"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="dropListener" start-tag="required">
        <description>
        	<![CDATA[The dropListener represents an action listener method that is notified after a drop operation.]]>
        </description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="dropSupport" start-tag="required">
        <description>
        	<![CDATA[The dropSupport component transforms a parent component into a target zone for drag-and-drop operations. When a draggable element is moved and dropped onto the area of the parent component, Ajax request processing for this event is started.]]>
        </description>
        <attribute-type name="acceptCursors" required="false">
            <description>
				List of comma separated cursors that indicates when
				acceptable draggable over dropzone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="acceptCursors"/>
        <attribute-type name="acceptedTypes" required="false">
            <description>
				A list of drag zones types, which elements are accepted
				by a drop zone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="acceptedTypes"/>
        <attribute-type name="action" required="false">
            <description>
				MethodBinding pointing at the application action to be
				invoked, if this UIComponent is activated by you, during
				the Apply Request Values or Invoke Application phase of
				the request processing lifecycle, depending on the value
				of the immediate property
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="any"/>
            </proposal>
        </attribute-type>
        <attribute type="action"/>
        <attribute-type name="actionListener" required="false">
            <description>
				MethodBinding pointing at method accepting an
				ActionEvent with return type void
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="actionListener"/>
        <attribute-type name="ajaxSingle" required="false">
            <description>
				boolean attribute which provides possibility to limit
				JSF tree processing(decoding, conversion/validation,
				value applying) to the component which send the request
				only
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSingle"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="bypassUpdates" required="false">
            <description>
				If "true", after process validations phase it skips
				updates of model beans on a force render response. It
				can be used for validating components input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bypassUpdates"/>
        <attribute-type name="cursorTypeMapping" required="false">
            <description>
				Mapping between drop types and acceptable cursors
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cursorTypeMapping"/>
        <attribute-type name="data" required="false">
            <description>
				Serialized (on default with JSON) data passed on the
				client by a developer on AJAX request. It's accessible
				via "data.foo" syntax
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="data"/>
        <attribute-type name="disableDefault" required="false">
            <description>
				Disable default action for target event (append "return
				false;" to JavaScript)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disableDefault"/>
        <attribute-type name="dropListener" required="false">
            <description>
				MethodBinding representing an action listener method
				that will be notified after drop operation.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dropListener"/>
        <attribute-type name="dropValue" required="false">
            <description>
				Data to be processed after a drop event
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dropValue"/>
        <attribute-type name="eventsQueue" required="false">
            <description>
				Name of requests queue to avoid send next request before
				complete other from same event. Can be used to reduce
				number of requests of frequently events (key press,
				mouse move etc.)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="eventsQueue"/>
        <attribute-type name="focus" required="false">
            <description>
				id of element to set focus after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="focus"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="ignoreDupResponses" required="false">
            <description>
				Attribute allows to ignore an Ajax Response produced by
				a request if the newest 'similar' request is in a queue
				already. ignoreDupResponses="true" does not cancel the
				request while it is processed on the server, but just
				allows to avoid unnecessary updates on the client side
				if the response isn't actual now
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ignoreDupResponses"/>
        <attribute-type name="immediate" required="false">
            <description>
				True means, that the default ActionListener should be
				executed immediately (i.e. during Apply Request Values
				phase of the request processing lifecycle), rather than
				waiting until the Invoke Application phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="limitToList" required="false">
            <description>
				If "true", updates on client side ONLY elements from
				this 'reRender' property. If "false" (default) updates
				all rendered by ajax region components
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="limitToList"/>
        <attribute-type name="onbeforedomupdate" required="false">
            <description>
				JavaScript code for call before DOM has been updated on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforedomupdate"/>
        <attribute-type name="oncomplete" required="false">
            <description>
				JavaScript code for call after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncomplete"/>
        <attribute-type name="ondragenter" required="false">
            <description>
				A JavaScript event handler called on enter draggable
				object to zone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondragenter"/>
        <attribute-type name="ondragexit" required="false">
            <description>
				A JavaScript event handler called after a drag object
				leaves zone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondragexit"/>
        <attribute-type name="ondrop" required="false">
            <description>
				A JavaScript event handler called after a drag object is
				dropped to zone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondrop"/>
        <attribute-type name="ondropend" required="false">
            <description>
				A JavaScript handler for event fired on a drop even the
				drop for a given type is not available
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondropend"/>
        <attribute-type name="process" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, processed at the phases 2-5 in case of
				AjaxRequest caused by this component. Can be single id,
				comma-separated list of Id's, or EL Expression with
				array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="process"/>
        <attribute-type name="reRender" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, rendered in case of AjaxRequest caused by
				this component. Can be single id, comma-separated list
				of Id's, or EL Expression with array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="reRender"/>
        <attribute-type name="rejectCursors" required="false">
            <description>
				List of comma separated cursors that indicates when
				rejectable draggable over dropzone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rejectCursors"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="requestDelay" required="false">
            <description>
				Attribute defines the time (in ms.) that the request
				will be wait in the queue before it is ready to send.
				When the delay time is over, the request will be sent to
				the server or removed if the newest 'similar' request is
				in a queue already
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requestDelay"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="timeout" required="false">
            <description>
				Response waiting time on a particular request. If a
				response is not received during this time, the request
				is aborted
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="timeout"/>
        <attribute-type name="typeMapping" required="false">
            <description>
				Map between a draggable type and an indicator name on
				zone. it's defined with the pair (drag type:indicator
				name))
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="typeMapping"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
    </element-type>
 	  	
	<element-type body-content="allowed" content="mixed"
		end-tag="required" name="editor" start-tag="required">
		<description>
	        	<![CDATA[The  editor   component is used for creating a WYSIWYG editor on a page.]]>
		</description>
		<attribute-type name="autoResize" required="false">
			<description>
				Attribute enables to get the Editor area to resize to the boundaries of the
				contents
						</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
			<proposal type="enumeration">
				<param value="true" />
				<param value="false" />
			</proposal>
		</attribute-type>
		<attribute type="autoResize" />
	
	
		<attribute-type name="binding" required="false">
			<description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
				</description>
			<proposal type="jsfVariables" />
			<proposal type="beanProperty">
				<param name="type" value="javax.faces.component.UIComponent" />
			</proposal>
		</attribute-type>
		<attribute type="binding" />
		<attribute-type name="configuration" required="false">
			<description>
				Attribute defines configuration properties file name
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="configuration" />
		<attribute-type name="converter" required="false">
			<description>
				Id of Converter to be used or reference to a Converter
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="converter" />
		<attribute-type name="converterMessage" required="false">
			<description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the converter message,
				replacing any message that comes from the converter
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="converterMessage" />
	
		<attribute-type name="customPlugins" required="false">
			<description>
				Attribute defines property file name witch contains descriptors of custom
				plugins
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="customPlugins" />
	
		<attribute-type name="dialogType" required="false">
			<description>
				Attribute defines how dialogs/popups should be opened. Default value is
				"modal"
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="dialogType" />
	
		<attribute-type name="height" required="false">
			<description>
				Attribute defines height of component.
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="height" />
	
		<attribute type="height" />
		<attribute-type name="id" required="false">
			<description>
				Every component may have a unique id that is
				automatically created if omitted
				</description>
		</attribute-type>
		<attribute type="id" />
		<attribute-type name="immediate" required="false">
			<description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
			<proposal type="enumeration">
				<param value="true" />
				<param value="false" />
			</proposal>
		</attribute-type>
		<attribute type="immediate" />
		<attribute-type name="label" required="false">
			<description>
				A localized user presentable name for this component.
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="label" />
		<attribute-type name="language" required="false">
			<description>
				Attribute defines Editor language
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="language" />
		<attribute-type name="onchange" required="false">
			<description>
				Attribute enables to specify a function name to be executed each time content
				is modified by TinyMCE.
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="onchange" />
		<attribute-type name="oninit" required="false">
			<description>
				Attribute defines a function name to be executed when all Editor instances
				have finished their initialization.
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="oninit" />
	
		<attribute-type name="onsave" required="false">
			<description>
				Attribute enables to add custom logic to be executed when the contents is
				extracted/saved.
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="onsave" />
	
		<attribute-type name="onsetup" required="false">
			<description>
				Attribute enables to add events to Editor instances before they get rendered.
			</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="onsetup" />
	
		<attribute-type name="plugins" required="false">
			<description>
				Attribute defines Editor plugins
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="plugins" />
	
		<attribute-type name="readonly" required="false">
			<description>
				Attribute defines Editor is readonly
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
			<proposal type="enumeration">
				<param value="true" />
				<param value="false" />
			</proposal>
		</attribute-type>
		<attribute type="readonly" />
		<attribute-type name="rendered" required="false">
			<description>
				If "false", this component is not rendered
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
			<proposal type="enumeration">
				<param value="true" />
				<param value="false" />
			</proposal>
		</attribute-type>
		<attribute type="rendered" />
		<attribute-type name="required" required="false">
			<description>
				If "true", this component is checked for non-empty input
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
			<proposal type="enumeration">
				<param value="true" />
				<param value="false" />
			</proposal>
		</attribute-type>
		<attribute type="required" />
		<attribute-type name="requiredMessage" required="false">
			<description>
				requiredMessage
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
	
		</attribute-type>
		<attribute type="requiredMessage" />
	
		<attribute-type name="skin" required="false">
			<description>
				Attribute defines Editor skin
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
	
		</attribute-type>
		<attribute type="skin" />
	
		<attribute-type name="style" required="false">
			<description>
				CSS style(s) is/are to be applied when this component is rendered
			</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="style" />
		<attribute-type name="styleClass" required="false">
			<description>
				Corresponds to the HTML class attribute
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="styleClass" />
		<attribute-type name="tabindex" required="false">
			<description>
				In visual mode the attribute works the same way as
				"tab_focus" TinyMCE's property the attribute enables
				you to specify an element ID to focus, when the TAB key is pressed .
				You can also use the special ":prev" and ":next" values that will
				then place the focus on an input element placed before/after the TinyMCE
				instance in the DOM. While in "source" mode the attribute works like
				standard HTML tabindex attribute.
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="tabindex" />
	
		<attribute-type name="theme" required="false">
			<description>
				Attribute defines Editor theme
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="theme" />
		<attribute-type name="useSeamText" required="false">
			<description>
				Attribute defines if model value should be converted to Seam Text. Default
				value is "false"
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
			<proposal type="enumeration">
				<param value="true" />
				<param value="false" />
			</proposal>
		</attribute-type>
		<attribute type="useSeamText" />
		<attribute-type name="validator" required="false">
			<description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
				</description>
			<proposal type="jsfVariables" />
			<proposal type="beanProperty" />
			<proposal type="beanMethodBySignature">
				<param name="returnType" value="javax.faces.el.MethodBinding" />
			</proposal>
		</attribute-type>
		<attribute type="validator" />
		<attribute-type name="validatorMessage" required="false">
			<description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validator message,
				replacing any message that comes from the validator
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="validatorMessage" />
		<attribute-type name="value" required="false">
			<description>
				The current value of this component
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="value" />
		<attribute-type name="valueChangeListener" required="false">
			<description>Listener for value changes</description>
			<proposal type="beanProperty" />
			<proposal type="jsfVariables" />
			<proposal type="beanMethodBySignature">
				<param name="returnType" value="void" />
				<param name="paramType" value="javax.faces.event.ValueChangeEvent" />
			</proposal>
		</attribute-type>
		<attribute type="valueChangeListener" />
		<attribute-type name="viewMode" required="false">
			<description>
				Attribute defines if tinyMCE WYSIWYG should be disabled. Default value is
				"visual"
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="viewMode" />
		<attribute-type name="width" required="false">
			<description>
				Attribute defines width of component.
				</description>
			<proposal type="beanProperty" />
			<proposal type="bundleProperty" />
			<proposal type="jsfVariables" />
		</attribute-type>
		<attribute type="width" />
	</element-type>  
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="effect" start-tag="required">
        <description>
			<![CDATA[The effect utilizes a set of effects provided by the scriptaculous JavaScript library. It allows to attach effects to JSF components and html tags. ]]>
		</description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="disableDefault" required="false">
            <description>
				Disable default action for target event ( append "return
				false;" to javascript ). Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disableDefault"/>
        <attribute-type name="event" required="false">
            <description>
				Event on the component or html tag the effect is
				attached to
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="event"/>
        <attribute-type name="for" required="false">
            <description>Id of the target component.</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="for"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="name" required="false">
            <description>Generated Javascript name.</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="name"/>
        <attribute-type name="params" required="false">
            <description>
				Parameters passed to the effect function. Example
				params="{duration:0.2,from:1.0,to:0.1}"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="params"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="targetId" required="false">
            <description>
				The id of the element the effect apply to. Might be
				component id or client id of jsf component or html tag.
				If targetId is not defined the value of the attribute
				'for' or the 'targetId' option effect play its role
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="targetId"/>
        <attribute-type name="type" required="false">
            <description>
				Defines the type of effect. Possible values: "Fade",
				"Blind", "Opacity".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="type"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="fileUpload" start-tag="required">
        <description>
			Renders a file upload control.

			The following configuration options for ajax4jsf filter may
			be configured in web.xml:

			* createTempFiles - if this option is set to true, uploaded
			files are streamed to a temporary file instead of in memory.
			* maxRequestSize - the maximum size of a file upload
			request, in bytes.

			Here's an example:

			&amp;lt;filter&amp;gt; &amp;lt;display-name&amp;gt;Ajax4jsf
			Filter&amp;lt;/display-name&amp;gt;
			&amp;lt;filter-name&amp;gt;ajax4jsf&amp;lt;/filter-name&amp;gt;
			&amp;lt;filter-class&amp;gt;org.ajax4jsf.Filter&amp;lt;/filter-class&amp;gt;
			&amp;lt;init-param&amp;gt;
			&amp;lt;param-name&amp;gt;createTempFiles&amp;lt;/param-name&amp;gt;
			&amp;lt;param-value&amp;gt;false&amp;lt;/param-value&amp;gt;
			&amp;lt;/init-param&amp;gt; &amp;lt;init-param&amp;gt;
			&amp;lt;param-name&amp;gt;maxRequestSize&amp;lt;/param-name&amp;gt;
			&amp;lt;param-value&amp;gt;20000000&amp;lt;/param-value&amp;gt;
			&amp;lt;/init-param&amp;gt; &amp;lt;/filter&amp;gt;
		</description>
        <attribute-type name="acceptedTypes" required="false">
            <description>Files types allowed to upload</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="acceptedTypes"/>
        <attribute-type name="accesskey" required="false">
            <description>
				This attribute assigns an access key to an element. An
				access key is a single character from the document
				character set. Note: Authors should consider the input
				method of the expected reader when specifying an
				accesskey
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="accesskey"/>
        <attribute-type name="addButtonClass" required="false">
            <description>CSS style for add button</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="addButtonClass"/>
        <attribute-type name="addButtonClassDisabled" required="false">
            <description>CSS style for add button disabled</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="addButtonClassDisabled"/>
        <attribute-type name="addControlLabel" required="false">
            <description>Defines a label for an add button</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="addControlLabel"/>
        <attribute-type name="ajaxSingle" required="false">
            <description>
				Boolean attribute which provides possibility to limit
				JSF tree processing(decoding, conversion/validation,
				value applying) to the component which send the request
				only.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSingle"/>
        <attribute-type name="alt" required="false">
            <description>
				For a user agents that cannot display images, forms, or
				applets, this attribute specifies alternate text. The
				language of the alternate text is specified by the lang
				attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="alt"/>
        <attribute-type name="autoclear" required="false">
            <description>
				If this attribute is "true" files will be immediately
				removed from list after upload completed. Default value
				is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="autoclear"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="cancelButtonClass" required="false">
            <description>CSS style for cancel button</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cancelButtonClass"/>
        <attribute-type name="cancelButtonClassDisabled" required="false">
            <description>
				CSS style for cancel button disabled
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cancelButtonClassDisabled"/>
        <attribute-type name="cancelEntryControlLabel" required="false">
            <description>
				Defines a label for a cancel control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cancelEntryControlLabel"/>
        <attribute-type name="cleanButtonClass" required="false">
            <description>CSS style for clean button</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cleanButtonClass"/>
        <attribute-type name="cleanButtonClassDisabled" required="false">
            <description>
				CSS style for clean button disabled
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cleanButtonClassDisabled"/>
        <attribute-type name="clearAllControlLabel" required="false">
            <description>
				Defines a label for a clearAll button
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="clearAllControlLabel"/>
        <attribute-type name="clearControlLabel" required="false">
            <description>
				Defines a label for a clear control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="clearControlLabel"/>
        <attribute-type name="disabled" required="false">
            <description>
				Attribute 'disabled' provides a possibility to make the
				whole component disabled if its value equals to "true".
				Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="disabled"/>
        <attribute-type name="doneLabel" required="false">
            <description>Defines a label for a done label</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="doneLabel"/>
        <attribute-type name="fileEntryClass" required="false">
            <description>CSS style upload file entry</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fileEntryClass"/>
        <attribute-type name="fileEntryClassDisabled" required="false">
            <description>
				CSS style upload file entry disabled
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fileEntryClassDisabled"/>
        <attribute-type name="fileEntryControlClass" required="false">
            <description>
				CSS style for upload enrty control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fileEntryControlClass"/>
        <attribute-type name="fileEntryControlClassDisabled" required="false">
            <description>
				CSS style for upload enrty control disabled
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fileEntryControlClassDisabled"/>
        <attribute-type name="fileUploadListener" required="false">
            <description>
				MethodExpression representing an action listener method
				that will be notified after file uploaded.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fileUploadListener"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="immediateUpload" required="false">
            <description>
				If this attribute is true files will be immediately
				uploaded after they have been added in list. Default
				value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="immediateUpload"/>
        <attribute-type name="listHeight" required="false">
            <description>
				Defines height of file list. Default value is "210px".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="listHeight"/>
        <attribute-type name="listWidth" required="false">
            <description>
				Defines width of file list. Default value is "400px".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="listWidth"/>
        <attribute-type name="locale" required="false">
            <description>Used for locale definition</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="java.util.Locale"/>
            </proposal>
        </attribute-type>
        <attribute type="locale"/>
        <attribute-type name="maxFilesQuantity" required="false">
            <description>
				Defines max files count allowed for upload (optional).
				Default value is "1".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="maxFilesQuantity"/>
        <attribute-type name="noDuplicate" required="false">
            <description>
				Defines if component should allow to add files that were
				already in list. Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="noDuplicate"/>
        <attribute-type name="onblur" required="false">
            <description>
				HTML: script expression; the element lost the focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onblur"/>
        <attribute-type name="onchange" required="false">
            <description>
				HTML: script expression; the element value was changed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onchange"/>
        <attribute-type name="onclear" required="false">
            <description>
				A JavaScript event handler called when the file entries
				were cleared
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclear"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onerror" required="false">
            <description>
				A JavaScript event handler called when the file upload
				was interrupted according to any errors
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onerror"/>
        <attribute-type name="onfocus" required="false">
            <description>
				HTML: script expression; the element got the focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onfocus"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="onselect" required="false">
            <description>
				HTML: script expression; The onselect event occurs when
				you select some text in a text field. This attribute may
				be used with the INPUT and TEXTAREA elements
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onselect"/>
        <attribute-type name="onsizerejected" required="false">
            <description>
				A JavaScript event handler called when the file
				uploading was rejected by fiel size overflow
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onsizerejected"/>
        <attribute-type name="ontyperejected" required="false">
            <description>
				A JavaScript event handler called when the file type was
				rejected according to file types allowed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ontyperejected"/>
        <attribute-type name="onupload" required="false">
            <description>
				A JavaScript event handler called on an upload operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onupload"/>
        <attribute-type name="onuploadcanceled" required="false">
            <description>
				A JavaScript event handler called when upload is
				cancelled
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onuploadcanceled"/>
        <attribute-type name="onuploadcomplete" required="false">
            <description>
				A JavaScript event handler called when upload is
				completed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onuploadcomplete"/>
        <attribute-type name="progressLabel" required="false">
            <description>
				Defines a label for a progress label
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="progressLabel"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="required" required="false">
            <description>
				If "true", this component is checked for non-empty input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="required"/>
        <attribute-type name="requiredMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validation message for
				the "required" facility, if the "required" facility is
				used
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requiredMessage"/>
        <attribute-type name="sizeErrorLabel" required="false">
            <description>
				Defines a label for a size error label
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sizeErrorLabel"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="stopControlLabel" required="false">
            <description>Defines a label for a stop button</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="stopControlLabel"/>
        <attribute-type name="stopEntryControlLabel" required="false">
            <description>
				Defines a label for a stop control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="stopEntryControlLabel"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="tabindex" required="false">
            <description>
				This attribute specifies the position of the current
				element in the tabbing order for the current document.
				This value must be a number between 0 and 32767. User
				agents should ignore leading zeros
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tabindex"/>
        <attribute-type name="transferErrorLabel" required="false">
            <description>
				Defines a label for a transfer error label
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="transferErrorLabel"/>
        <attribute-type name="uploadButtonClass" required="false">
            <description>CSS style for upload button</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="uploadButtonClass"/>
        <attribute-type name="uploadButtonClassDisabled" required="false">
            <description>
				CSS style for upload button disabled
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="uploadButtonClassDisabled"/>
        <attribute-type name="uploadControlLabel" required="false">
            <description>
				Defines a label for an upload button
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="uploadControlLabel"/>
        <attribute-type name="uploadData" required="false">
            <description>Collection of files uploaded</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="uploadData"/>
        <attribute-type name="uploadListClass" required="false">
            <description>CSS style for upload list</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="uploadListClass"/>
        <attribute-type name="uploadListClassDisabled" required="false">
            <description>
				CSS style for upload list disabled
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="uploadListClassDisabled"/>
        <attribute-type name="validator" required="false">
            <description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.context.FacesContext"/>
                <param name="paramType" value="javax.faces.component.UIComponent"/>
                <param name="paramType" value="java.lang.Object"/>
            </proposal>
        </attribute-type>
        <attribute type="validator"/>
        <attribute-type name="validatorMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validator message,
				replacing any message that comes from the validator
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="validatorMessage"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="gmap" start-tag="required">
        <description>
			It presents the google map in JSF applications
		</description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="enableContinuousZoom" required="false">
            <description>
				Enables continuous smooth zooming for selected browsers.
				Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="enableContinuousZoom"/>
        <attribute-type name="enableDoubleClickZoom" required="false">
            <description>
				Enables zooming in by a double click. Default value is
				"false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="enableDoubleClickZoom"/>
        <attribute-type name="enableDragging" required="false">
            <description>
				Enables a map dragging with the mouse. Default value is
				"true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="enableDragging"/>
        <attribute-type name="enableInfoWindow" required="false">
            <description>
				Enables Info Window. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="enableInfoWindow"/>
        <attribute-type name="gmapKey" required="false">
            <description>
				Google Map key. A single Map API key is valid for a
				single "directory" on your web server. Default value is
				"internal".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="gmapKey"/>
        <attribute-type name="gmapVar" required="false">
            <description>
				The JavaScript variable that is used to access the
				Google Map API. If you have more than one Google Map
				components on the same page, use individual key for each
				of them. The default variable name is "map" (without
				quotes).
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="gmapVar"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="lat" required="false">
            <description>
				Initial latitude coordinate in degrees, as a number
				between -90 and +90. Default value is "37.9721046".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lat"/>
        <attribute-type name="lng" required="false">
            <description>
				Initial longitude coordinate in degrees, as a number
				between -180 and +180. Default value is
				"-122.0424842834".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lng"/>
        <attribute-type name="locale" required="false">
            <description>
				Used for locale definition. Default value is
				"getDefaultLocale()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="java.util.Locale"/>
            </proposal>
        </attribute-type>
        <attribute type="locale"/>
        <attribute-type name="mapType" required="false">
            <description>
				Initial map type. The possible values are G_NORMAL_MAP,
				G_SATELLITE_MAP, G_HYBRID_MAP. Default value is
				"G_SATELLITE_MAP".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="mapType"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="oninit" required="false">
            <description>
				JavaScript code invoked just after the Google Map object
				is initiated.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninit"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="showGLargeMapControl" required="false">
            <description>
				Shows the GLarge control. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showGLargeMapControl"/>
        <attribute-type name="showGMapTypeControl" required="false">
            <description>
				Shows the Type switch control. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showGMapTypeControl"/>
        <attribute-type name="showGScaleControl" required="false">
            <description>
				It shows the scale control. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showGScaleControl"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="warningMessage" required="false">
            <description>
				The warning message that appears if a browser is not
				compatible with Google Map. Default value is "Your
				browser does not support Google Maps".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="warningMessage"/>
        <attribute-type name="zoom" required="false">
            <description>
				Initial zoom level as a number between 1 and 18. Default
				value is "17".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="zoom"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="inplaceInput" start-tag="required">
        <description>
        	<![CDATA[The inplaceInput is an input component used for displaying and editing data inputted. ]]>
        </description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="cancelControlIcon" required="false">
            <description>Defines custom cancel icon</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cancelControlIcon"/>
        <attribute-type name="changedClass" required="false">
            <description>CSS style class for changed state</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="changedClass"/>
        <attribute-type name="changedHoverClass" required="false">
            <description>
				CSS style class for hovered text in changed state
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="changedHoverClass"/>
        <attribute-type name="controlClass" required="false">
            <description>CSS style class for controls</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlClass"/>
        <attribute-type name="controlHoverClass" required="false">
            <description>
				CSS style class for hovered control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlHoverClass"/>
        <attribute-type name="controlPressedClass" required="false">
            <description>
				CSS style class for pressed press controls
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlPressedClass"/>
        <attribute-type name="controlsHorizontalPosition" required="false">
            <description>
				Positions the controls horizontally. Possible values are
				"left", "center", "right". Default value is "right".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlsHorizontalPosition"/>
        <attribute-type name="controlsVerticalPosition" required="false">
            <description>
				Positions the controls vertically. Possible values are
				"bottom", "top"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlsVerticalPosition"/>
        <attribute-type name="converter" required="false">
            <description>
				Id of Converter to be used or reference to a Converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converter"/>
        <attribute-type name="converterMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the converter message,
				replacing any message that comes from the converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converterMessage"/>
        <attribute-type name="defaultLabel" required="false">
            <description>
				The attribute is used to display text while value is
				undefined
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="defaultLabel"/>
        <attribute-type name="editClass" required="false">
            <description>CSS style class for edit state</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="editClass"/>
        <attribute-type name="editEvent" required="false">
            <description>
				Provides an option to assign an JavaScript action that
				initiates the change of the state. Default value is
				"onclick".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="editEvent"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="inputWidth" required="false">
            <description>Sets width of the input field</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputWidth"/>
        <attribute-type name="layout" required="false">
            <description>
				Defines how the component is displayed in the layout.
				Possible values are "block", "inline". . Default value
				is "inline".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="layout"/>
        <attribute-type name="maxInputWidth" required="false">
            <description>
				Sets the maximum width of the input field. Default value
				is "500px".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="maxInputWidth"/>
        <attribute-type name="minInputWidth" required="false">
            <description>
				Sets the minimum width of the input field. Default value
				is "40px".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="minInputWidth"/>
        <attribute-type name="onblur" required="false">
            <description>
				HTML: script expression; the element lost the focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onblur"/>
        <attribute-type name="onchange" required="false">
            <description>
				HTML: script expression; the element value was changed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onchange"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="oneditactivated" required="false">
            <description>
				Provides a possibility to assign JavaScript to be
				executed when edit state is activated
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oneditactivated"/>
        <attribute-type name="oneditactivation" required="false">
            <description>
				Provides a possibility to assign JavaScript on edit
				state activation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oneditactivation"/>
        <attribute-type name="onfocus" required="false">
            <description>
				HTML: script expression; the element got the focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onfocus"/>
        <attribute-type name="oninputclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputclick"/>
        <attribute-type name="oninputdblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputdblclick"/>
        <attribute-type name="oninputkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputkeydown"/>
        <attribute-type name="oninputkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputkeypress"/>
        <attribute-type name="oninputkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputkeyup"/>
        <attribute-type name="oninputmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmousedown"/>
        <attribute-type name="oninputmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmousemove"/>
        <attribute-type name="oninputmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmouseout"/>
        <attribute-type name="oninputmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmouseover"/>
        <attribute-type name="oninputmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmouseup"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="onselect" required="false">
            <description>
				HTML: script expression; the onselect event occurs when
				you select some menu item
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onselect"/>
        <attribute-type name="onviewactivated" required="false">
            <description>
				Provides a possibility to assign JavaScript to be
				executed when view state is activated
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onviewactivated"/>
        <attribute-type name="onviewactivation" required="false">
            <description>
				Provides a possibility to assign JavaScript on view
				state activation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onviewactivation"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="required" required="false">
            <description>
				If "true", this component is checked for non-empty input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="required"/>
        <attribute-type name="requiredMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validation message for
				the "required" facility, if the "required" facility is
				used
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requiredMessage"/>
        <attribute-type name="saveControlIcon" required="false">
            <description>Defines custom save icon</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="saveControlIcon"/>
        <attribute-type name="selectOnEdit" required="false">
            <description>
				Makes the input field select when switched to edit
				state. Default value is "false"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectOnEdit"/>
        <attribute-type name="showControls" required="false">
            <description>
				Serves to display "save" and "cancel" controls. Default
				value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showControls"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="tabindex" required="false">
            <description>
				Serves to define the tabbing order
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tabindex"/>
        <attribute-type name="validator" required="false">
            <description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.context.FacesContext"/>
                <param name="paramType" value="javax.faces.component.UIComponent"/>
                <param name="paramType" value="java.lang.Object"/>
            </proposal>
        </attribute-type>
        <attribute type="validator"/>
        <attribute-type name="validatorMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validator message,
				replacing any message that comes from the validator
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="validatorMessage"/>
        <attribute-type name="value" required="false">
            <description>
				The current value of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="valueChangeListener" required="false">
            <description>Listener for value changes</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ValueChangeEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="valueChangeListener"/>
        <attribute-type name="viewClass" required="false">
            <description>CSS style class for view state</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="viewClass"/>
        <attribute-type name="viewHoverClass" required="false">
            <description>
				CSS style class for hovered text in view state
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="viewHoverClass"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="inplaceSelect" start-tag="required">
        <description>
        	<![CDATA[The inplaceSelect is used for creation select based inputs: it shows the value as text in one state and enables editing the value, providing a list of options in another state]]>
        </description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="cancelControlIcon" required="false">
            <description>Defines custom cancel icon</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cancelControlIcon"/>
        <attribute-type name="changedClass" required="false">
            <description>CSS style class for changed state</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="changedClass"/>
        <attribute-type name="controlClass" required="false">
            <description>CSS style class for controls</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlClass"/>
        <attribute-type name="controlHover" required="false">
            <description>
				CSS style class for hovered control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlHover"/>
        <attribute-type name="controlPressed" required="false">
            <description>
				CSS style class for controls pressed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlPressed"/>
        <attribute-type name="controlsHorizontalPosition" required="false">
            <description>
				The attribute positions the controls horizontally.
				Possible values are "right","center","left". Default
				value is "right".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlsHorizontalPosition"/>
        <attribute-type name="controlsVerticalPosition" required="false">
            <description>
				The attribute positions the controls vertically.
				Possible values are "bottom","top"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlsVerticalPosition"/>
        <attribute-type name="converter" required="false">
            <description>
				Id of Converter to be used or reference to a Converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converter"/>
        <attribute-type name="converterMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the converter message,
				replacing any message that comes from the converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converterMessage"/>
        <attribute-type name="defaultLabel" required="false">
            <description>
				The attribute is used to display text while value is
				undefined
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="defaultLabel"/>
        <attribute-type name="editClass" required="false">
            <description>CSS style class for edit state</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="editClass"/>
        <attribute-type name="editEvent" required="false">
            <description>
				The attribute provides an option to assign an JavaScript
				action that initiates the change of the state. Default
				value is "onclick".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="editEvent"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="layout" required="false">
            <description>
				Defines how the component is displayed in the layout.
				Possible values are "block", "inline". Default value is
				"inline".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="layout"/>
        <attribute-type name="listHeight" required="false">
            <description>
				The attribute defines the height of option list. Default
				value is "200px".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="listHeight"/>
        <attribute-type name="listWidth" required="false">
            <description>
				The attribute defines the width of option list. Default
				value is "200px".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="listWidth"/>
        <attribute-type name="maxSelectWidth" required="false">
            <description>
				Sets the maximum width of the select element. Default
				value is "200px".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="maxSelectWidth"/>
        <attribute-type name="minSelectWidth" required="false">
            <description>
				Sets the minimum width of the select element. Default
				value is "100px".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="minSelectWidth"/>
        <attribute-type name="onblur" required="false">
            <description>
				HTML: script expression; the element lost the focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onblur"/>
        <attribute-type name="onchange" required="false">
            <description>
				HTML: script expression; the element value was changed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onchange"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="oneditactivated" required="false">
            <description>
				The attributes provide a possibility to assign
				JavaScript to be executed when edit state is activated
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oneditactivated"/>
        <attribute-type name="oneditactivation" required="false">
            <description>
				The attributes provide a possibility to assign
				JavaScript on edit state activation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oneditactivation"/>
        <attribute-type name="onfocus" required="false">
            <description>
				HTML: script expression; the element got the focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onfocus"/>
        <attribute-type name="oninputblur" required="false">
            <description>
				HTML: script expression; the element lost the focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputblur"/>
        <attribute-type name="oninputclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputclick"/>
        <attribute-type name="oninputdblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputdblclick"/>
        <attribute-type name="oninputfocus" required="false">
            <description>
				HTML: script expression; the element got the focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputfocus"/>
        <attribute-type name="oninputkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputkeydown"/>
        <attribute-type name="oninputkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputkeypress"/>
        <attribute-type name="oninputkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputkeyup"/>
        <attribute-type name="oninputmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmousedown"/>
        <attribute-type name="oninputmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmousemove"/>
        <attribute-type name="oninputmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmouseout"/>
        <attribute-type name="oninputmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmouseover"/>
        <attribute-type name="oninputmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmouseup"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="onselect" required="false">
            <description>
				HTML: script expression; the onselect event occurs when
				you select some menu item
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onselect"/>
        <attribute-type name="onviewactivated" required="false">
            <description>
				The attributes provide a possibility to assign
				JavaScript to be executed when view state is activated
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onviewactivated"/>
        <attribute-type name="onviewactivation" required="false">
            <description>
				The attributes provide a possibility to assign
				JavaScript on view state activation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onviewactivation"/>
        <attribute-type name="openOnEdit" required="false">
            <description>
				The attribute opens the list once edit activated.
				Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="openOnEdit"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="required" required="false">
            <description>
				If "true", this component is checked for non-empty input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="required"/>
        <attribute-type name="requiredMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validation message for
				the "required" facility, if the "required" facility is
				used
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requiredMessage"/>
        <attribute-type name="saveControlIcon" required="false">
            <description>Defines custom save icon</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="saveControlIcon"/>
        <attribute-type name="selectOnEdit" required="false">
            <description>
				The attribute make the input field select when switched
				to edit state. Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectOnEdit"/>
        <attribute-type name="selectWidth" required="false">
            <description>Sets width of the select element</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectWidth"/>
        <attribute-type name="showControls" required="false">
            <description>
				The attribute serves to display "save" and "cancel"
				controls. Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showControls"/>
        <attribute-type name="tabindex" required="false">
            <description>
				The attribute serves to define the tabbing order
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tabindex"/>
        <attribute-type name="validator" required="false">
            <description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.context.FacesContext"/>
                <param name="paramType" value="javax.faces.component.UIComponent"/>
                <param name="paramType" value="java.lang.Object"/>
            </proposal>
        </attribute-type>
        <attribute type="validator"/>
        <attribute-type name="validatorMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validator message,
				replacing any message that comes from the validator
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="validatorMessage"/>
        <attribute-type name="value" required="false">
            <description>
				The current value of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="valueChangeListener" required="false">
            <description>Listener for value changes</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ValueChangeEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="valueChangeListener"/>
        <attribute-type name="viewClass" required="false">
            <description>Style class for view state</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="viewClass"/>
        <attribute-type name="viewHover" required="false">
            <description>
				CSS style class for hovered text in view state
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="viewHover"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="inputNumberSlider" start-tag="required">
        <description>
	        <![CDATA[The inputNumberSlider component lets users select a number from a numeric region. It's a horizontal aligned scroll-like control with its own input field (optional) present. The keyboard input in a field is possible (optional). Also it's possible to see the current value in the toolTip above a dragged handle control.]]>
		</description>
        <attribute-type name="orientation" required="false">
            <description>
				Attribute can have the values "vertical" and "horizontal" to define in which direction the slider should be moveable.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="vertical"/>
                <param value="horizontal"/>
            </proposal>
        </attribute-type>
        <attribute type="orientation"/>
        <attribute-type name="accesskey" required="false">
            <description>
				This attribute assigns an access key to an element. An
				access key is a single character from the document
				character set. Note: Authors should consider the input
				method of the expected reader when specifying an
				accesskey
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="accesskey"/>
        <attribute-type name="barClass" required="false">
            <description>
				A name of CSS class for the bar element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="barClass"/>
        <attribute-type name="barStyle" required="false">
            <description>Style for a slider control line</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="barStyle"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="clientErrorMessage" required="false">
            <description>
				an error message to use in client side validation events
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="clientErrorMessage"/>
        <attribute-type name="converter" required="false">
            <description>
				Id of Converter to be used or reference to a Converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converter"/>
        <attribute-type name="converterMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the converter message,
				replacing any message that comes from the converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converterMessage"/>
        <attribute-type name="disabled" required="false">
            <description>
				When set for a form control, this boolean attribute
				disables the control for your input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="disabled"/>
        <attribute-type name="enableManualInput" required="false">
            <description>
				If set to "false" this attribute makes the text field
				"read-only", so the value can be changed only from a
				handle. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="enableManualInput"/>
        <attribute-type name="handleClass" required="false">
            <description>
				A name of CSS class for a control handle element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="handleClass"/>
        <attribute-type name="handleSelectedClass" required="false">
            <description>
				A name of CSS class for a selected control handle
				element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="handleSelectedClass"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="inputClass" required="false">
            <description>
				Style Class attribute for a text field
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputClass"/>
        <attribute-type name="inputPosition" required="false">
            <description>
				If "right" the InputText Box would be rendered on the
				right side of the ruler
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputPosition"/>
        <attribute-type name="inputSize" required="false">
            <description>
				Similar to the "Size" attribute of h:inputText. Default
				value is "3".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputSize"/>
        <attribute-type name="inputStyle" required="false">
            <description>Style attribute for text field</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputStyle"/>
        <attribute-type name="label" required="false">
            <description>
				A localized user presentable name for this component.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="label"/>
        <attribute-type name="maxValue" required="false">
            <description>
				Attribute to set an "end" value. Default value is "100"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="maxValue"/>
        <attribute-type name="maxlength" required="false">
            <description>
				When the type attribute has the value "text" or
				"password", this attribute specifies the maximum number
				of characters you may enter. This number may exceed the
				specified size, in which case the user agent should
				offer a scrolling mechanism. The default value for this
				attribute is an unlimited number
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="maxlength"/>
        <attribute-type name="minValue" required="false">
            <description>
				Attribute to set the "start" value. Default value is
				"0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="minValue"/>
        <attribute-type name="onblur" required="false">
            <description>
				HTML: script expression; the element lost the focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onblur"/>
        <attribute-type name="onchange" required="false">
            <description>
				HTML: script expression; the element value was changed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onchange"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onerror" required="false">
            <description>
				This error is called when a non-number value or a number
				value that is out of the range is input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onerror"/>
        <attribute-type name="onfocus" required="false">
            <description>
				HTML: script expression; the element got the focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onfocus"/>
        <attribute-type name="oninputclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputclick"/>
        <attribute-type name="oninputdblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputdblclick"/>
        <attribute-type name="oninputkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputkeydown"/>
        <attribute-type name="oninputkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputkeypress"/>
        <attribute-type name="oninputkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputkeyup"/>
        <attribute-type name="oninputmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmousedown"/>
        <attribute-type name="oninputmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmousemove"/>
        <attribute-type name="oninputmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmouseout"/>
        <attribute-type name="oninputmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmouseover"/>
        <attribute-type name="oninputmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmouseup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="onselect" required="false">
            <description>
				HTML: script expression; The onselect event occurs when
				you select some text in a text field. This attribute may
				be used with the INPUT and TEXTAREA elements
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onselect"/>
        <attribute-type name="onslide" required="false">
            <description>Event occur on slide</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onslide"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="required" required="false">
            <description>
				If "true", this component is checked for non-empty input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="required"/>
        <attribute-type name="requiredMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validation message for
				the "required" facility, if the "required" facility is
				used
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requiredMessage"/>
        <attribute-type name="showBoundaryValues" required="false">
            <description>
				If the min/max values are shown on the right/left
				borders of a control. . Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showBoundaryValues"/>
        <attribute-type name="showInput" required="false">
            <description>
				False value for this attribute makes text a field
				invisible. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showInput"/>
        <attribute-type name="showToolTip" required="false">
            <description>
				If "true"the current value is shown in the tooltip when
				a handle control is in a "dragged" state. Default value
				is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showToolTip"/>
        <attribute-type name="step" required="false">
            <description>
				Parameter that determines a step between the nearest
				values while using a handle. Default value is "1".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="step"/>
        <attribute-type name="style" required="false">
            <description>
				Styles for main div element of the slider control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>Name of a CSS class</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="tabindex" required="false">
            <description>
				This attribute specifies the position of the current
				element in the tabbing order for the current document.
				This value must be a number between 0 and 32767. User
				agents should ignore leading zeros
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tabindex"/>
        <attribute-type name="tipClass" required="false">
            <description>
				A name of CSS class for the tool tip element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tipClass"/>
        <attribute-type name="tipStyle" required="false">
            <description>A style for the tool tip element</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tipStyle"/>
        <attribute-type name="validator" required="false">
            <description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.context.FacesContext"/>
                <param name="paramType" value="javax.faces.component.UIComponent"/>
                <param name="paramType" value="java.lang.Object"/>
            </proposal>
        </attribute-type>
        <attribute type="validator"/>
        <attribute-type name="validatorMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validator message,
				replacing any message that comes from the validator
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="validatorMessage"/>
        <attribute-type name="value" required="false">
            <description>
				The current value of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="valueChangeListener" required="false">
            <description>Listener for value changes</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ValueChangeEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="valueChangeListener"/>
        <attribute-type name="width" required="false">
            <description>
				The width of a slider control. Default value is "200px"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="inputNumberSpinner" start-tag="required">
        <description>
			Spinner component - A single line input field that lets the
			user select a number using the controls near the text field.
			User can change value using Up/Down keyboard keys. The
			keyboard Input in field if it isn't locked by manualInput
			attribute is possible. After arrow controls pressed - cursor
			can be moved in any way without loosing draged state.
		</description>
        <attribute-type name="accesskey" required="false">
            <description>
				This attribute assigns an access key to an element. An
				access key is a single character from the document
				character set. Note: Authors should consider the input
				method of the expected reader when specifying an
				accesskey
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="accesskey"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="clientErrorMessage" required="false">
            <description>client error message</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="clientErrorMessage"/>
        <attribute-type name="converter" required="false">
            <description>
				Id of Converter to be used or reference to a Converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converter"/>
        <attribute-type name="converterMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the converter message,
				replacing any message that comes from the converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converterMessage"/>
        <attribute-type name="cycled" required="false">
            <description>
				If "true" after the current value reaches the border
				value it is reversed to another border value after next
				increasing/decreasing. In other case possibilities of
				next increasing (or decreasing) will be locked. Default
				value is " true ".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cycled"/>
        <attribute-type name="disabled" required="false">
            <description>
				When set for a form control, this boolean attribute
				disables the control for your input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="disabled"/>
        <attribute-type name="enableManualInput" required="false">
            <description>
				if "false" your's input to the text field using keyboard
				will be locked. Default value is "true"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="enableManualInput"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="inputClass" required="false">
            <description>Class attribute for text field</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputClass"/>
        <attribute-type name="inputSize" required="false">
            <description>
				Attribute specifies the initial length of input in
				characters. Default value is "10".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputSize"/>
        <attribute-type name="inputStyle" required="false">
            <description>Style attribute for text field</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inputStyle"/>
        <attribute-type name="label" required="false">
            <description>
				A localized user presentable name for this component.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="label"/>
        <attribute-type name="maxValue" required="false">
            <description>
				Maximum value. . Default value is "100".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="maxValue"/>
        <attribute-type name="minValue" required="false">
            <description>
				Minimum value. Default value is "0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="minValue"/>
        <attribute-type name="onblur" required="false">
            <description>
				HTML: script expression; the element lost the focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onblur"/>
        <attribute-type name="onchange" required="false">
            <description>
				HTML: script expression; the element value was changed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onchange"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="ondownclick" required="false">
            <description>
				HTML: a script expression; a button "Down" is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondownclick"/>
        <attribute-type name="onerror" required="false">
            <description>
				HTML: a script expression; event fires whenever an
				JavaScript error occurs
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onerror"/>
        <attribute-type name="onfocus" required="false">
            <description>
				HTML: script expression; the element got the focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onfocus"/>
        <attribute-type name="oninputclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputclick"/>
        <attribute-type name="oninputdblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputdblclick"/>
        <attribute-type name="oninputkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputkeydown"/>
        <attribute-type name="oninputkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputkeypress"/>
        <attribute-type name="oninputkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputkeyup"/>
        <attribute-type name="oninputmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmousedown"/>
        <attribute-type name="oninputmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmousemove"/>
        <attribute-type name="oninputmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmouseout"/>
        <attribute-type name="oninputmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmouseover"/>
        <attribute-type name="oninputmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oninputmouseup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="onselect" required="false">
            <description>
				HTML: script expression; The onselect event occurs when
				you select some text in a text field. This attribute may
				be used with the INPUT and TEXTAREA elements
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onselect"/>
        <attribute-type name="onupclick" required="false">
            <description>
				HTML: a script expression; a button "Up" is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onupclick"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="required" required="false">
            <description>
				If "true", this component is checked for non-empty input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="required"/>
        <attribute-type name="requiredMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validation message for
				the "required" facility, if the "required" facility is
				used
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requiredMessage"/>
        <attribute-type name="step" required="false">
            <description>
				Parameter that determines the step between nearest
				values while using controls. Default value is "1"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="step"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="tabindex" required="false">
            <description>
				This attribute specifies the position of the current
				element in the tabbing order for the current document.
				This value must be a number between 0 and 32767. User
				agents should ignore leading zeros
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tabindex"/>
        <attribute-type name="validator" required="false">
            <description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.context.FacesContext"/>
                <param name="paramType" value="javax.faces.component.UIComponent"/>
                <param name="paramType" value="java.lang.Object"/>
            </proposal>
        </attribute-type>
        <attribute type="validator"/>
        <attribute-type name="validatorMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validator message,
				replacing any message that comes from the validator
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="validatorMessage"/>
        <attribute-type name="value" required="false">
            <description>
				The current value of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="valueChangeListener" required="false">
            <description>Listener for value changes</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ValueChangeEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="valueChangeListener"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="insert" start-tag="required">
        <description>
        	<![CDATA[The insert component is used for highlighting, source code inserting and, optionally, format the file from the application context into the page.]]>
        </description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="content" required="false">
            <description>
				Defines the String, inserted with this component. This
				attribute is alternative to "src" attribute.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="content"/>
        <attribute-type name="encoding" required="false">
            <description>
				Attribute defines encoding for inserted content
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="encoding"/>
        <attribute-type name="errorContent" required="false">
            <description>
				Attribute defines the alternative content that will be
				shown in case component cannot read the resource defined
				with 'src' attribute. If "errorContent" attribute is not
				defined, the component shown the actual error message in
				the place where the content is expected
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="errorContent"/>
        <attribute-type name="highlight" required="false">
            <description>Defines a type of code</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="highlight"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="src" required="false">
            <description>
				Defines the path to the file with source code
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="src"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="jQuery" start-tag="required">
        <description>
			<![CDATA[The jQuery allows to apply styles and behaviour to DOM objects.]]>
		</description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="name" required="false">
            <description>
				The name of a function that will be generated to execute
				a query. The "name" attribute is required if "timing"
				attribute equals to "onJScall"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="name"/>
        <attribute-type name="query" required="true">
            <description>
				The query string that is executed for a given selector.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="query"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="selector" required="false">
            <description>
				Selector for query. The "selector" attribute uses
				defined by w3c consortium syntax for CSS rule selector
				with some jQuery extensions.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selector"/>
        <attribute-type name="timing" required="false">
            <description>
				The attribute that defines when to perform the query.
				The possible values are "immediate","onload" and
				"onJScall". "immediate" performs the query right away.
				"onload" adds the task to the time when a document is
				loaded (the DOM tree is created). "onJScall" allows to
				invoke the query by Javascipt function name defined with
				"name" attribute. The default value is "immediate".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="immediate"/>
                <param value="onload"/>
                <param value="onJScall"/>
            </proposal>
        </attribute-type>
        <attribute type="timing"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="listShuttle" start-tag="required">
        <description>
        	<![CDATA[The listShuttle component is used for moving chosen items from one list into another with their optional reordering there.]]>
        </description>
        <attribute-type name="activeItem" required="false">
            <description>Stores active item</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="activeItem"/>
        <attribute-type name="ajaxKeys" required="false">
            <description>
				Defines row keys that are updated after an Ajax request
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxKeys"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="bottomControlClass" required="false">
            <description>CSS class for bottom control</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bottomControlClass"/>
        <attribute-type name="bottomControlLabel" required="false">
            <description>
				Defines a label for a bottom control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bottomControlLabel"/>
        <attribute-type name="columnClasses" required="false">
            <description>
				Comma-separated list of CSS classes for columns
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="columnClasses"/>
        <attribute-type name="componentState" required="false">
            <description>
				It defines EL-binding for a component state for saving
				or redefinition
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="componentState"/>
        <attribute-type name="controlsType" required="false">
            <description>
				Defines type of a control: button or none. Default value
				is "button".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlsType"/>
        <attribute-type name="controlsVerticalAlign" required="false">
            <description>
				CustomizesA??verticallyA??aA??positionA??ofA??move/copyA??and
				order controlsA??relativelyA??toA??lists
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlsVerticalAlign"/>
        <attribute-type name="converter" required="false">
            <description>
				Id of Converter to be used or reference to a Converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converter"/>
        <attribute-type name="copyAllControlClass" required="false">
            <description>
				CSSA??classA??forA??copy allA??control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="copyAllControlClass"/>
        <attribute-type name="copyAllControlLabel" required="false">
            <description>
				Defines a label for a copyAll control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="copyAllControlLabel"/>
        <attribute-type name="copyControlClass" required="false">
            <description>CSS class for copy control</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="copyControlClass"/>
        <attribute-type name="copyControlLabel" required="false">
            <description>
				Defines a label for a copy control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="copyControlLabel"/>
        <attribute-type name="disabledControlClass" required="false">
            <description>CSS class for a disabled control</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledControlClass"/>
        <attribute-type name="downControlClass" required="false">
            <description>CSS class for down control</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="downControlClass"/>
        <attribute-type name="downControlLabel" required="false">
            <description>
				Defines a label for a down control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="downControlLabel"/>
        <attribute-type name="fastMoveControlsVisible" required="false">
            <description>
				If "false", 'Copy All' and 'Remove All' controls aren't
				displayed. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fastMoveControlsVisible"/>
        <attribute-type name="fastOrderControlsVisible" required="false">
            <description>
				If "false", 'Top' and 'Bottom' controls aren't
				displayed. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fastOrderControlsVisible"/>
        <attribute-type name="first" required="false">
            <description>
				A zero-relative row number of the first row to display
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="first"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="listClass" required="false">
            <description>CSS class for a list</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="listClass"/>
        <attribute-type name="listsHeight" required="false">
            <description>
				Defines height of the list. Default value is "140".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="listsHeight"/>
        <attribute-type name="moveControlsVisible" required="false">
            <description>
				If "false", 'Copy' and 'Remove' controls aren't
				displayed. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="moveControlsVisible"/>
        <attribute-type name="onbottomclick" required="false">
            <description>
				A JavaScript event handler; a button "Bottom" is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbottomclick"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="oncopyallclick" required="false">
            <description>
				A JavaScript event handler; a button "Copy All" is
				clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncopyallclick"/>
        <attribute-type name="oncopyclick" required="false">
            <description>
				HTML: a script expression; a button "Copy" is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncopyclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="ondownclick" required="false">
            <description>
				A JavaScript event handler; a button "Down" is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondownclick"/>
        <attribute-type name="onlistchanged" required="false">
            <description>
				A JavaScript event handler called on a list change
				operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onlistchanged"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onorderchanged" required="false">
            <description>
				HTML: script expression; called after ordering action
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onorderchanged"/>
        <attribute-type name="onremoveallclick" required="false">
            <description>
				A JavaScript event handler; a button "Remove All" is
				clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onremoveallclick"/>
        <attribute-type name="onremoveclick" required="false">
            <description>
				A JavaScript event handler; a button "Remove" is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onremoveclick"/>
        <attribute-type name="ontopclick" required="false">
            <description>
				A JavaScript event handler; a button "Top" is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ontopclick"/>
        <attribute-type name="onupclick" required="false">
            <description>
				HTML: a script expression; a button "Up" is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onupclick"/>
        <attribute-type name="orderControlsVisible" required="false">
            <description>
				If "false", 'Up' and 'Down' controls aren't displayed.
				Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="orderControlsVisible"/>
        <attribute-type name="removeAllControlClass" required="false">
            <description>
				CSSA??classA??forA??remove all control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="removeAllControlClass"/>
        <attribute-type name="removeAllControlLabel" required="false">
            <description>
				Defines a label for a removeAll control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="removeAllControlLabel"/>
        <attribute-type name="removeControlClass" required="false">
            <description>CSS class for remove control</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="removeControlClass"/>
        <attribute-type name="removeControlLabel" required="false">
            <description>
				Defines a label for a remove control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="removeControlLabel"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="required" required="false">
            <description>
				If "true", this component is checked for non-empty input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="required"/>
        <attribute-type name="rowClasses" required="false">
            <description>CSS class for a row</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowClasses"/>
        <attribute-type name="rowKey" required="false">
            <description>
				RowKey is a representation of an identifier for a
				specific data row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKey"/>
        <attribute-type name="rowKeyConverter" required="false">
            <description>Converter for a row key object</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyConverter"/>
        <attribute-type name="rowKeyVar" required="false">
            <description>
				The attribute provides access to a row key in a Request
				scope
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyVar"/>
        <attribute-type name="rows" required="false">
            <description>
				A number of rows to display, or zero for all remaining
				rows in the table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rows"/>
        <attribute-type name="showButtonLabels" required="false">
            <description>
				Shows a label for a button. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showButtonLabels"/>
        <attribute-type name="sourceCaptionLabel" required="false">
            <description>
				Defines source list caption representation text
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sourceCaptionLabel"/>
        <attribute-type name="sourceListWidth" required="false">
            <description>
				Defines width of a source list. Default value is "140".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sourceListWidth"/>
        <attribute-type name="sourceRequired" required="false">
            <description>
				Defines the case when source value is being validated.
				If the value is "true", there should be at least one
				item in the source list
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sourceRequired"/>
        <attribute-type name="sourceSelection" required="false">
            <description>
				Manages selection in a source list from the server side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sourceSelection"/>
        <attribute-type name="sourceValue" required="false">
            <description>
				Defines a List or Array of items to be shown in a source
				list
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sourceValue"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="switchByClick" required="false">
            <description>
				If "true", dragging between lists realized by click
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="switchByClick"/>
        <attribute-type name="targetCaptionLabel" required="false">
            <description>
				Defines target list caption representation text
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="targetCaptionLabel"/>
        <attribute-type name="targetListWidth" required="false">
            <description>
				Defines width of a target list. Default value is "140".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="targetListWidth"/>
        <attribute-type name="targetRequired" required="false">
            <description>
				Defines the case when target value is being validated.
				If the value is "true", there should be at least one
				item in the target list
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="targetRequired"/>
        <attribute-type name="targetSelection" required="false">
            <description>
				Manages selection in a target list from the server side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="targetSelection"/>
        <attribute-type name="targetValue" required="false">
            <description>
				Defines a List or Array of items to be shown in a target
				list
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="targetValue"/>
        <attribute-type name="topControlClass" required="false">
            <description>CSS class for top control</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="topControlClass"/>
        <attribute-type name="topControlLabel" required="false">
            <description>
				Defines a label for a "Top" control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="topControlLabel"/>
        <attribute-type name="upControlClass" required="false">
            <description>CSS class for up control</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="upControlClass"/>
        <attribute-type name="upControlLabel" required="false">
            <description>
				Defines a label for an "Up" control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="upControlLabel"/>
        <attribute-type name="validator" required="false">
            <description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.context.FacesContext"/>
                <param name="paramType" value="javax.faces.component.UIComponent"/>
                <param name="paramType" value="java.lang.Object"/>
            </proposal>
        </attribute-type>
        <attribute type="validator"/>
        <attribute-type name="valueChangeListener" required="false">
            <description>Listener for value changes</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ValueChangeEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="valueChangeListener"/>
        <attribute-type name="var" required="false">
            <description>Defines a list on the page</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="var"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="menuGroup" start-tag="required">
        <description>
			<![CDATA[The menuGroup component is used to define an expandable group of items inside a pop-up list or another group.]]>
		</description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="converter" required="false">
            <description>
				Id of Converter to be used or reference to a Converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converter"/>
        <attribute-type name="direction" required="false">
            <description>
				Defines direction of the popup sublist to appear (right,
				left, auto(Default), left-down, left-up, right-down,
				right-up)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="direction"/>
        <attribute-type name="disabled" required="false">
            <description>
				If "true" sets state of the item to disabled state.
				Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="disabled"/>
        <attribute-type name="event" required="false">
            <description>
				Defines the event on the representation element that
				triggers the menu's appearance. Default value is
				"onmouseover".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="event"/>
        <attribute-type name="icon" required="false">
            <description>
				Path to the icon to be displayed for the enabled item
				state
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="icon"/>
        <attribute-type name="iconClass" required="false">
            <description>
				Class to be applied to icon element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconClass"/>
        <attribute-type name="iconDisabled" required="false">
            <description>
				Path to the icon to be displayed for the disabled item
				state
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconDisabled"/>
        <attribute-type name="iconFolder" required="false">
            <description>
				Path to the folder icon to be displayed for the enabled
				item state
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconFolder"/>
        <attribute-type name="iconFolderDisabled" required="false">
            <description>
				Path to the folder icon to be displayed for the enabled
				item state
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconFolderDisabled"/>
        <attribute-type name="iconStyle" required="false">
            <description>
				CSS style rules to be applied to icon element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconStyle"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="labelClass" required="false">
            <description>
				Class to be applied to label element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="labelClass"/>
        <attribute-type name="onclose" required="false">
            <description>
				HTML: script expression; group was closed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclose"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onopen" required="false">
            <description>
				HTML: script expression; group was opened
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onopen"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="selectClass" required="false">
            <description>
				Class to be applied to selected items
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectClass"/>
        <attribute-type name="selectStyle" required="false">
            <description>
				CSS style rules to be applied to selected items
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectStyle"/>
        <attribute-type name="showDelay" required="false">
            <description>
				Delay between event and menu showing. Default value is
				"300".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showDelay"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="value" required="true">
            <description>
				Defines representation text for menuItem
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="menuItem" start-tag="required">
        <description>
        	<![CDATA[The menuItem component is used for the definition of a single item inside a pop-up list.]]>
        </description>
        <attribute-type name="action" required="false">
            <description>
				MethodBinding pointing at the application action to be
				invoked, if this UIComponent is activated by you, during
				the Apply Request Values or Invoke Application phase of
				the request processing lifecycle, depending on the value
				of the immediate property
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="any"/>
            </proposal>
        </attribute-type>
        <attribute type="action"/>
        <attribute-type name="actionListener" required="false">
            <description>
				MethodBinding pointing at method accepting an
				ActionEvent with return type void
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="actionListener"/>
        <attribute-type name="ajaxSingle" required="false">
            <description>
				boolean attribute which provides possibility to limit
				JSF tree processing(decoding, conversion/validation,
				value applying) to the component which send the request
				only
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSingle"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="bypassUpdates" required="false">
            <description>
				If "true", after process validations phase it skips
				updates of model beans on a force render response. It
				can be used for validating components input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bypassUpdates"/>
        <attribute-type name="data" required="false">
            <description>
				Serialized (on default with JSON) data passed on the
				client by a developer on AJAX request. It's accessible
				via "data.foo" syntax
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="data"/>
        <attribute-type name="disabled" required="false">
            <description>
				If "true" sets state of the item to disabled state. .
				Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="disabled"/>
        <attribute-type name="eventsQueue" required="false">
            <description>
				Name of requests queue to avoid send next request before
				complete other from same event. Can be used to reduce
				number of requests of frequently events (key press,
				mouse move etc.)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="eventsQueue"/>
        <attribute-type name="focus" required="false">
            <description>
				id of element to set focus after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="focus"/>
        <attribute-type name="icon" required="false">
            <description>
				Path to the icon to be displayed for the enabled item
				state
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="icon"/>
        <attribute-type name="iconClass" required="false">
            <description>
				Class to be applied to icon element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconClass"/>
        <attribute-type name="iconDisabled" required="false">
            <description>
				Path to the icon to be displayed for the disabled item
				state.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconDisabled"/>
        <attribute-type name="iconStyle" required="false">
            <description>
				CSS style rules to be applied to icon element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconStyle"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="ignoreDupResponses" required="false">
            <description>
				Attribute allows to ignore an Ajax Response produced by
				a request if the newest 'similar' request is in a queue
				already. ignoreDupResponses="true" does not cancel the
				request while it is processed on the server, but just
				allows to avoid unnecessary updates on the client side
				if the response isn't actual now
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ignoreDupResponses"/>
        <attribute-type name="immediate" required="false">
            <description>
				True means, that the default ActionListener should be
				executed immediately (i.e. during Apply Request Values
				phase of the request processing lifecycle), rather than
				waiting until the Invoke Application phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="labelClass" required="false">
            <description>
				Class to be applied to label element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="labelClass"/>
        <attribute-type name="limitToList" required="false">
            <description>
				If "true", updates on client side ONLY elements from
				this 'reRender' property. If "false" (default) updates
				all rendered by ajax region components
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="limitToList"/>
        <attribute-type name="onbeforedomupdate" required="false">
            <description>
				JavaScript code for call before DOM has been updated on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforedomupdate"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="oncomplete" required="false">
            <description>
				JavaScript code for call after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncomplete"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="onselect" required="false">
            <description>
				HTML: script expression; The onselect event occurs when
				you select some menu item
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onselect"/>
        <attribute-type name="process" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, processed at the phases 2-5 in case of
				AjaxRequest caused by this component. Can be single id,
				comma-separated list of Id's, or EL Expression with
				array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="process"/>
        <attribute-type name="reRender" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, rendered in case of AjaxRequest caused by
				this component. Can be single id, comma-separated list
				of Id's, or EL Expression with array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="reRender"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="requestDelay" required="false">
            <description>
				Attribute defines the time (in ms.) that the request
				will be wait in the queue before it is ready to send.
				When the delay time is over, the request will be sent to
				the server or removed if the newest 'similar' request is
				in a queue already
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requestDelay"/>
        <attribute-type name="selectClass" required="false">
            <description>
				Class to be applied to selected items
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectClass"/>
        <attribute-type name="selectStyle" required="false">
            <description>
				CSS style rules to be applied to selected items
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectStyle"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="submitMode" required="false">
            <description>
				Sets the submission mode. Possible values are "ajax",
				"server", "none". Default value is "server".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="submitMode"/>
        <attribute-type name="target" required="false">
            <description>
				Name of a frame where the resource retrieved via this
				hyperlink is to be displayed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="target"/>
        <attribute-type name="timeout" required="false">
            <description>
				Response waiting time on a particular request. If a
				response is not received during this time, the request
				is aborted
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="timeout"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
    </element-type>
    <element-type body-content="refused" content="mixed"
        end-tag="required" name="menuSeparator" start-tag="required">
        <description>
			<![CDATA[The menuSeparator component is used for creating a horizontal separator that can be placed between groups or items.]]>
		</description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="message" start-tag="required">
        <description>
        	<![CDATA[The message component is used for rendering a single message for a specific component. ]]>
        </description>
        <attribute-type name="ajaxRendered" required="false">
            <description>
				Define, must be (or not) content of this component will
				be included in AJAX response created by parent AJAX
				Container, even if not forced by reRender list of ajax
				action. ignored if component marked to output by Ajax
				action.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxRendered"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="errorClass" required="false">
            <description>
				CSS style class to apply to any message with a severity
				class of "ERROR"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="errorClass"/>
        <attribute-type name="errorLabelClass" required="false">
            <description>
				CSS style class to apply to any message label with a
				severity class of "ERROR"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="errorLabelClass"/>
        <attribute-type name="errorMarkerClass" required="false">
            <description>
				CSS style class to apply to any message marker with a
				severity class of "ERROR"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="errorMarkerClass"/>
        <attribute-type name="fatalClass" required="false">
            <description>
				CSS style class to apply to any message with a severity
				class of "FATAL"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fatalClass"/>
        <attribute-type name="fatalLabelClass" required="false">
            <description>
				CSS style class to apply to any message label with a
				severity class of "FATAL"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fatalLabelClass"/>
        <attribute-type name="fatalMarkerClass" required="false">
            <description>
				CSS style class to apply to any message marker with a
				severity class of "FATAL"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fatalMarkerClass"/>
        <attribute-type name="for" required="false">
            <description>
				Client identifier of the component for which to display
				messages
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="for"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="infoClass" required="false">
            <description>
				CSS style class to apply to any message with a severity
				class of "INFO"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="infoClass"/>
        <attribute-type name="infoLabelClass" required="false">
            <description>
				CSS style class to apply to any message label with a
				severity class of "INFO"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="infoLabelClass"/>
        <attribute-type name="infoMarkerClass" required="false">
            <description>
				CSS style class to apply to any message marker with a
				severity class of "INFO"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="infoMarkerClass"/>
        <attribute-type name="keepTransient" required="false">
            <description>
				Flag for mark all child components to non-transient. If
				"true", all children components will be set to
				non-transient state and keep in saved components tree.
				For output in self-renderer region all content (By
				default, all content in &amp;lt;f:verbatim&amp;gt; tags
				and non-jsf elements in facelets, marked as transient -
				since, self-rendered ajax regions don't plain output for
				ajax processing).
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="keepTransient"/>
        <attribute-type name="labelClass" required="false">
            <description>CSS style class to apply to label</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="labelClass"/>
        <attribute-type name="level" required="false">
            <description>
				A comma-separated list of messages categories which
				should be displayed. Default value is "ALL".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="level"/>
        <attribute-type name="markerClass" required="false">
            <description>
				CSS style class to apply to marker
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="markerClass"/>
        <attribute-type name="markerStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to marker when this
				component is rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="markerStyle"/>
        <attribute-type name="passedLabel" required="false">
            <description>
				Attribute should define the label to be displayed when
				no message appears
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="passedLabel"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="showDetail" required="false">
            <description>
				Flag indicating whether the summary portion of displayed
				messages should be included. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showDetail"/>
        <attribute-type name="showSummary" required="false">
            <description>
				Flag indicating whether the summary portion of displayed
				messages should be included. Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showSummary"/>
        <attribute-type name="style" required="false">
            <description>The CSS style for message</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Space-separated list of CSS style class(es) to be
				applied when this element is rendered. This value must
				be passed through as the "class" attribute on generated
				markup
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="title" required="false">
            <description>
				Advisory title information about markup elements
				generated for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="tooltip" required="false">
            <description>
				Flag indicating whether the detail portion of the
				message should be displayed as a tooltip. Default value
				is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tooltip"/>
        <attribute-type name="warnClass" required="false">
            <description>
				CSS style class to apply to any message with a severity
				class of "WARN"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="warnClass"/>
        <attribute-type name="warnLabelClass" required="false">
            <description>
				CSS style class to apply to any message label with a
				severity class of "WARN"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="warnLabelClass"/>
        <attribute-type name="warnMarkerClass" required="false">
            <description>
				CSS style class to apply any message marker with a
				severity class of "WARN"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="warnMarkerClass"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="messages" start-tag="required">
        <description>
        	<![CDATA[The messages component is similar to message component but used for rendering all messages for the components.]]>
		</description>
        <attribute-type name="ajaxRendered" required="false">
            <description>
				Define, must be (or not) content of this component will
				be included in AJAX response created by parent AJAX
				Container, even if not forced by reRender list of ajax
				action. ignored if component marked to output by Ajax
				action.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxRendered"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="errorClass" required="false">
            <description>
				CSS style class to apply to any message with a severity
				class of "ERROR"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="errorClass"/>
        <attribute-type name="errorLabelClass" required="false">
            <description>
				CSS style class to apply to any message label with a
				severity class of "ERROR"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="errorLabelClass"/>
        <attribute-type name="errorMarkerClass" required="false">
            <description>
				CSS style class to apply to any message marker with a
				severity class of "ERROR"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="errorMarkerClass"/>
        <attribute-type name="fatalClass" required="false">
            <description>
				CSS style class to apply to any message with a severity
				class of "FATAL"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fatalClass"/>
        <attribute-type name="fatalLabelClass" required="false">
            <description>
				CSS style class to apply to any message label with a
				severity class of "FATAL"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fatalLabelClass"/>
        <attribute-type name="fatalMarkerClass" required="false">
            <description>
				CSS style class to apply to any message marker with a
				severity class of "FATAL"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fatalMarkerClass"/>
        <attribute-type name="globalOnly" required="false">
            <description>
				Flag indicating that only global messages (that is,
				messages not associated with any client identifier) are
				to be displayed. Default value is "false"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="globalOnly"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="infoClass" required="false">
            <description>
				CSS style class to apply to any message with a severity
				class of "INFO"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="infoClass"/>
        <attribute-type name="infoLabelClass" required="false">
            <description>
				CSS style class to apply to any message label with a
				severity class of "INFO"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="infoLabelClass"/>
        <attribute-type name="infoMarkerClass" required="false">
            <description>
				CSS style class to apply to any message marker with a
				severity class of "INFO"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="infoMarkerClass"/>
        <attribute-type name="keepTransient" required="false">
            <description>
				Flag for mark all child components to non-transient. If
				"true", all children components will be set to
				non-transient state and keep in saved components tree.
				For output in self-renderer region all content (By
				default, all content in &amp;lt;f:verbatim&amp;gt; tags
				and non-jsf elements in facelets, marked as transient -
				since, self-rendered ajax regions don't plain output for
				ajax processing).
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="keepTransient"/>
        <attribute-type name="labelClass" required="false">
            <description>CSS style class to apply to label</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="labelClass"/>
        <attribute-type name="layout" required="false">
            <description>
				The type of layout markup to use when rendering error
				messages. Possible values are "table" (an HTML table),
				"list" (an HTML list) and iterator. If not specified,
				the default value is "list".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="layout"/>
        <attribute-type name="level" required="false">
            <description>
				A comma-separated list of messages categories which
				should be displayed. Default value is "ALL".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="level"/>
        <attribute-type name="markerClass" required="false">
            <description>
				CSS style class to apply to marker
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="markerClass"/>
        <attribute-type name="markerStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to marker when this
				component is rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="markerStyle"/>
        <attribute-type name="passedLabel" required="false">
            <description>
				Attribute should define the label to be displayed when
				no message appears
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="passedLabel"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="showDetail" required="false">
            <description>
				Flag indicating whether the summary portion of displayed
				messages should be included. Default value is "true"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showDetail"/>
        <attribute-type name="showSummary" required="false">
            <description>
				Flag indicating whether the summary portion of displayed
				messages should be included. Default value is "false"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showSummary"/>
        <attribute-type name="style" required="false">
            <description>The CSS style for message</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Space-separated list of CSS style class(es) to be
				applied when this element is rendered. This value must
				be passed through as the "class" attribute on generated
				markup
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="title" required="false">
            <description>
				Advisory title information about markup elements
				generated for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="tooltip" required="false">
            <description>
				Flag indicating whether the detail portion of the
				message should be displayed as a tooltip. Default value
				is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tooltip"/>
        <attribute-type name="warnClass" required="false">
            <description>
				CSS style class to apply to any message with a severity
				class of "WARN"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="warnClass"/>
        <attribute-type name="warnLabelClass" required="false">
            <description>
				CSS style class to apply to any message label with a
				severity class of "WARN"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="warnLabelClass"/>
        <attribute-type name="warnMarkerClass" required="false">
            <description>
				CSS style class to apply any message marker with a
				severity class of "WARN"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="warnMarkerClass"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="modalPanel" start-tag="required">
        <description>
        	<![CDATA[The modalPanel component implements a modal dialog window. All operations in the main application window are locked out while this window is active. Opening and closing the window is done through client JavaScript code.]]>
        </description>
        <attribute-type name="autosized" required="false">
            <description>
				If "true" modalPanel should be autosizeable. Default
				value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="autosized"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="controlsClass" required="false">
            <description>
				CSS style(s) is/are to be applied to component controls
				when this component is rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlsClass"/>
        <attribute-type name="headerClass" required="false">
            <description>
				CSS style(s) is/are to be applied to component header
				when this component is rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerClass"/>
        <attribute-type name="height" required="false">
            <description>
				Attribute defines height of component. Default value is
				"200".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="height"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="keepVisualState" required="false">
            <description>
				If "true" modalPanel should save state after submission.
				Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="keepVisualState"/>
        <attribute-type name="label" required="false">
            <description>
				A localized user presentable name for this component.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="label"/>
        <attribute-type name="left" required="false">
            <description>
				Attribute defines X position of component left-top
				corner. Default value is "auto".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="left"/>
        <attribute-type name="minHeight" required="false">
            <description>
				Attribute defines min height of component. Default value
				is "10". If the value is less then 10, a
				"IllegalArgumentException" exception is thrown.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="minHeight"/>
        <attribute-type name="minWidth" required="false">
            <description>
				Attribute defines min width of component. Default value
				is "10". If the value is less then 10, a
				"IllegalArgumentException" exception is thrown.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="minWidth"/>
        <attribute-type name="moveable" required="false">
            <description>
				if "true" there is possibility to move component.
				Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="moveable"/>
        <attribute-type name="onbeforehide" required="false">
            <description>
				Event must occurs before panel is hiding
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforehide"/>
        <attribute-type name="onbeforeshow" required="false">
            <description>
				Event must occurs before panel is opening
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforeshow"/>
        <attribute-type name="onhide" required="false">
            <description>
				Event must occurs after panel closed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onhide"/>
        <attribute-type name="onmaskclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
				outside modalPanel
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmaskclick"/>
        <attribute-type name="onmaskcontextmenu" required="false">
            <description>
				JavaScript handler to be called on right click outside
				modalPanel
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmaskcontextmenu"/>
        <attribute-type name="onmaskdblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked outside modalPanel
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmaskdblclick"/>
        <attribute-type name="onmaskmousedown" required="false">
            <description>
				HTML: a script expression; a pointer button is pressed
				down outside modalPanel
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmaskmousedown"/>
        <attribute-type name="onmaskmousemove" required="false">
            <description>
				HTML: a script expression; a pointer button is moved
				outside modalPanel
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmaskmousemove"/>
        <attribute-type name="onmaskmouseout" required="false">
            <description>
				HTML: a script expression; a pointer button is moved
				away modalPanel
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmaskmouseout"/>
        <attribute-type name="onmaskmouseover" required="false">
            <description>
				HTML: a script expression; a pointer button is moved
				onto modalPanel
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmaskmouseover"/>
        <attribute-type name="onmaskmouseup" required="false">
            <description>
				HTML: a script expression; a pointer button is released
				outside modalPanel
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmaskmouseup"/>
        <attribute-type name="onmove" required="false">
            <description>
				Event must occurs before panel is moving
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmove"/>
        <attribute-type name="onresize" required="false">
            <description>
				Event must occurs than panel is resizing
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onresize"/>
        <attribute-type name="onshow" required="false">
            <description>
				Event must occurs after panel opened
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onshow"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="resizeable" required="false">
            <description>
				if "true" there is possibility to change component size.
				Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="resizeable"/>
        <attribute-type name="shadowDepth" required="false">
            <description>
				Pop-up shadow depth for suggestion content
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="shadowDepth"/>
        <attribute-type name="shadowOpacity" required="false">
            <description>
				HTML CSS class attribute of element for pop-up
				suggestion content
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="shadowOpacity"/>
        <attribute-type name="showWhenRendered" required="false">
            <description>
				If "true" value for this attribute makes a modal panel
				opened as default.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showWhenRendered"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="top" required="false">
            <description>
				Attribute defines Y position of component left-top
				corner. Default value is "auto".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="top"/>
        <attribute-type name="tridentIVEngineSelectBehavior" required="false">
            <description>
				How to handle HTML SELECT-based controls in IE 6? -
				"disable" - default, handle as usual, use
				disabled="true" to hide SELECT controls - "hide" - use
				visibility="hidden" to hide SELECT controls
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tridentIVEngineSelectBehavior"/>
        <attribute-type name="validator" required="false">
            <description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.context.FacesContext"/>
                <param name="paramType" value="javax.faces.component.UIComponent"/>
                <param name="paramType" value="java.lang.Object"/>
            </proposal>
        </attribute-type>
        <attribute type="validator"/>
        <attribute-type name="validatorMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validator message,
				replacing any message that comes from the validator
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="validatorMessage"/>
        <attribute-type name="value" required="false">
            <description>
				The current value of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="valueChangeListener" required="false">
            <description>Listener for value changes</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ValueChangeEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="valueChangeListener"/>
        <attribute-type name="visualOptions" required="false">
            <description>
				Defines options that were specified on the client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="visualOptions"/>
        <attribute-type name="width" required="false">
            <description>
				Attribute defines width of component. Default value is
				"300".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
        <attribute-type name="zindex" required="false">
            <description>
				Attribute is similar to the standard HTML attribute and
				can specify window. Default value is "100". placement
				relative to the content
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="zindex"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="nodeSelectListener" start-tag="required">
        <description>
        	<![CDATA[The nodeSelectListener represents an action listener method that is notified after selection of a node.]]>
        </description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="orderingList" start-tag="required">
        <description>
        	<![CDATA[The orderingList is a component for ordering items in a list. This component provides possibilities to reorder a list and sort it on the client side.]]>
        </description>
        <attribute-type name="activeItem" required="false">
            <description>Stores active item</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="activeItem"/>
        <attribute-type name="ajaxKeys" required="false">
            <description>
				Defines row keys that are updated after an Ajax request
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxKeys"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="bottomControlLabel" required="false">
            <description>
				Defines a label for a 'Bottom' control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bottomControlLabel"/>
        <attribute-type name="captionLabel" required="false">
            <description>
				Defines caption representation text
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="captionLabel"/>
        <attribute-type name="columnClasses" required="false">
            <description>CSS class for a column</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="columnClasses"/>
        <attribute-type name="componentState" required="false">
            <description>
				It defines EL-binding for a component state for saving
				or redefinition
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="componentState"/>
        <attribute-type name="controlsHorizontalAlign" required="false">
            <description>
				Controls horizontal rendering. Possible values: left -
				controls should be rendered to the left side of a list.
				right- controls should be rendered to the right side of
				a list. Default value is "right".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlsHorizontalAlign"/>
        <attribute-type name="controlsType" required="false">
            <description>
				Defines type of a control: button or none. Default value
				is "button".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlsType"/>
        <attribute-type name="controlsVerticalAlign" required="false">
            <description>
				Controls vertical rendering. Possible values: top -
				controls should be rendered aligned to top side of a
				list. bottom - controls should be rendered aligned to
				bottom side of a list. middle (default) - controls
				should be rendered centered relatively to a list.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlsVerticalAlign"/>
        <attribute-type name="converter" required="false">
            <description>
				Id of Converter to be used or reference to a Converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converter"/>
        <attribute-type name="downControlLabel" required="false">
            <description>
				Defines a label for a 'Down' control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="downControlLabel"/>
        <attribute-type name="fastOrderControlsVisible" required="false">
            <description>
				If "false", 'Top' and 'Bottom' controls aren't
				displayed. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fastOrderControlsVisible"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="listHeight" required="false">
            <description>
				Defines height of a list. Default value is "140".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="listHeight"/>
        <attribute-type name="listWidth" required="false">
            <description>
				Defines width of a list. Default value is "140".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="listWidth"/>
        <attribute-type name="onbottomclick" required="false">
            <description>
				A JavaScript event handler; a button "Bottom" is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbottomclick"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="ondownclick" required="false">
            <description>
				A JavaScript event handler; a button "Down" is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondownclick"/>
        <attribute-type name="onheaderclick" required="false">
            <description>
				A JavaScript event handler; a header is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onheaderclick"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onorderchanged" required="false">
            <description>
				A JavaScript event handler called on an order operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onorderchanged"/>
        <attribute-type name="ontopclick" required="false">
            <description>
				A JavaScript event handler; a button "Top" is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ontopclick"/>
        <attribute-type name="onupclick" required="false">
            <description>
				HTML: a script expression; a button "Up" is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onupclick"/>
        <attribute-type name="orderControlsVisible" required="false">
            <description>
				If "false", 'Up' and 'Down' controls aren't displayed.
				Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="orderControlsVisible"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="required" required="false">
            <description>
				If "true", this component is checked for non-empty input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="required"/>
        <attribute-type name="rowClasses" required="false">
            <description>CSS class for a row</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowClasses"/>
        <attribute-type name="rowKey" required="false">
            <description>
				RowKey is a representation of an identifier for a
				specific data row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKey"/>
        <attribute-type name="rowKeyConverter" required="false">
            <description>Converter for a row key object</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyConverter"/>
        <attribute-type name="rowKeyVar" required="false">
            <description>
				The attribute provides access to a row key in a Request
				scope
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyVar"/>
        <attribute-type name="rows" required="false">
            <description>
				A number of rows to display, or zero for all remaining
				rows in the list
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rows"/>
        <attribute-type name="selection" required="false">
            <description>
				Collection which stores a set of selected items
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selection"/>
        <attribute-type name="showButtonLabels" required="false">
            <description>
				If "true", shows a label for a button
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showButtonLabels"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="topControlLabel" required="false">
            <description>
				Defines a label for a 'Top' control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="topControlLabel"/>
        <attribute-type name="upControlLabel" required="false">
            <description>
				Defines a label for a 'Up' control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="upControlLabel"/>
        <attribute-type name="validator" required="false">
            <description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.context.FacesContext"/>
                <param name="paramType" value="javax.faces.component.UIComponent"/>
                <param name="paramType" value="java.lang.Object"/>
            </proposal>
        </attribute-type>
        <attribute type="validator"/>
        <attribute-type name="value" required="false">
            <description>
				Defines a List or Array of items to be shown in a list
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="valueChangeListener" required="false">
            <description>Listener for value changes</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ValueChangeEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="valueChangeListener"/>
        <attribute-type name="var" required="false">
            <description>Defines a list on the page</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="var"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="paint2D" start-tag="required">
        <description>
			Create an image by paint in a managed bean, same as paint
			(Graphics g) in SWING components. It can be used as a
			cacheable or non-cacheable resource. With a cache support, a
			key is created in URI with a mix of size (width/height),
			paint method, format and data attributes.
		</description>
        <attribute-type name="align" required="false">
            <description>
				bottom|middle|top|left|right Deprecated. This attribute
				specifies the position of an IMG, OBJECT, or APPLET with
				respect to its context.

				The following values for align concern the object's
				position with respect to surrounding text:

				* bottom: means that the bottom of the object should be
				vertically aligned with the current baseline. This is
				the default value. * middle: means that the center of
				the object should be vertically aligned with the current
				baseline. * top: means that the top of the object should
				be vertically aligned with the top of the current text
				line
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="align"/>
        <attribute-type name="bgcolor" required="false">
            <description>
				Background color of painted image. Default value is
				'transparent' which means no background fill. Hex colors
				can be used, as well as common color names. Invalid
				values are treated as transparent. Note, that JPEG
				format doesn't support transparency, and transparent
				background is painted black. Also note, that several
				browsers (e.g. IE6) do not support PNG transparency
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bgcolor"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="border" required="false">
            <description>
				Deprecated. This attribute specifies the width of an IMG
				or OBJECT border, in pixels. The default value for this
				attribute depends on the user agent
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="border"/>
        <attribute-type name="cacheable" required="false">
            <description>
				Supported (or not) client/server caching for generated
				images. Caching on client supported by properly sending
				and processing of HTTP headers (Last-Modified, Expires,
				If-Modified-Since, etc.) Server-side caching is
				supported by application-scope object cache. For build
				of cache key use "value" attribute, serialized to URI
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cacheable"/>
        <attribute-type name="data" required="false">
            <description>
				Value calculated at render time and stored in Image URI
				(as part of cache Key), at paint time passed to a paint
				method. It can be used for updating cache at change of
				image generating conditions, and for creating paint
				beans as "Lightweight" pattern components (request
				scope). IMPORTANT: Since serialized data stored in URI,
				avoid using big objects
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="data"/>
        <attribute-type name="format" required="false">
            <description>
				format Name of format for sending a generated image. It
				currently supports "jpeg" (24 bit, default), "gif" (8
				bit with transparency), "png" (32 bit with transparency)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="format"/>
        <attribute-type name="height" required="false">
            <description>
				Height in pixels of image (for paint canvas and HTML
				attribute). Default value is "10".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="height"/>
        <attribute-type name="hspace" required="false">
            <description>
				Deprecated. This attribute specifies the amount of white
				space to be inserted to the left and right of an IMG,
				APPLET, or OBJECT. The default value is not specified,
				but is generally a small, non-zero length
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="hspace"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="lang" required="false">
            <description>
				Code describing the language used in the generated
				markup for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lang"/>
        <attribute-type name="paint" required="false">
            <description>
				The method calls expression to paint Image on prepared
				Buffered image. It must have two parameters with a type
				of java.awt.Graphics2D (graphics to paint) and Object
				(restored from URI "data" property). For painting used
				32-bit RGBA color model (for 8-bit images used Diffusion
				filtration before sending)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="paint"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="title" required="false">
            <description>
				Advisory title information about markup elements
				generated for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="value" required="false">
            <description>
				The current value of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="vspace" required="false">
            <description>
				Deprecated. This attribute specifies the amount of white
				space to be inserted above and below an IMG, APPLET, or
				OBJECT. The default value is not specified, but is
				generally a small, non-zero length
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="vspace"/>
        <attribute-type name="width" required="false">
            <description>
				Width in pixels of image (for paint canvas and HTML
				attribute). Default value is "10".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="panel" start-tag="required">
        <description>
			A skinnable panel that is rendered as a bordered rectangle.
			The header is added using a facet with the attribute,
			name="header".
		</description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="bodyClass" required="false">
            <description>
				A class that defines a style for a panel content
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bodyClass"/>
        <attribute-type name="header" required="false">
            <description>
				Label text appears on a panel header
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="header"/>
        <attribute-type name="headerClass" required="false">
            <description>
				A class that defines a style for a panel header
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerClass"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="panelBar" start-tag="required">
        <description>
        	<![CDATA[The panelBar component is used for displaying a number of cascading panels which can be opened with a click on the header.]]>
		</description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="contentClass" required="false">
            <description>The component content style class</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="contentClass"/>
        <attribute-type name="contentStyle" required="false">
            <description>The component content style</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="contentStyle"/>
        <attribute-type name="converter" required="false">
            <description>
				Id of Converter to be used or reference to a Converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converter"/>
        <attribute-type name="converterMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the converter message,
				replacing any message that comes from the converter.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converterMessage"/>
        <attribute-type name="headerClass" required="false">
            <description>The component header style class</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerClass"/>
        <attribute-type name="headerClassActive" required="false">
            <description>
				The component header style class active
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerClassActive"/>
        <attribute-type name="headerStyle" required="false">
            <description>The component header style</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerStyle"/>
        <attribute-type name="headerStyleActive" required="false">
            <description>The component header style active</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerStyleActive"/>
        <attribute-type name="height" required="false">
            <description>
				The height of the slide panel. Might be defined as
				pixels or as percentage. Default value is "100%".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="height"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="label" required="false">
            <description>
				A localized user presentable name for this component.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="label"/>
        <attribute-type name="onclick" required="false">
            <description>
				JavaScript code for call before header onclick
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="onitemchange" required="false">
            <description>
				Event must occurs on than item has been changed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onitemchange"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				Event must occurs on than item has been changed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				Event must occurs on than item has been changed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				Event must occurs on than item has been changed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="required" required="false">
            <description>
				If "true", this component is checked for non-empty input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="required"/>
        <attribute-type name="requiredMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validation message for
				the "required" facility, if the "required" facility is
				used.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requiredMessage"/>
        <attribute-type name="selectedPanel" required="false">
            <description>
				Attribure defines name of selected item
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectedPanel"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="validator" required="false">
            <description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.context.FacesContext"/>
                <param name="paramType" value="javax.faces.component.UIComponent"/>
                <param name="paramType" value="java.lang.Object"/>
            </proposal>
        </attribute-type>
        <attribute type="validator"/>
        <attribute-type name="validatorMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validator message,
				replacing any message that comes from the validator.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="validatorMessage"/>
        <attribute-type name="value" required="false">
            <description>
				The current value of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="valueChangeListener" required="false">
            <description>Listener for value changes</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ValueChangeEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="valueChangeListener"/>
        <attribute-type name="width" required="false">
            <description>
				The width of the slide panel. Might be defined as pixels
				or as percentage. Default value is "100%".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="panelBarItem" start-tag="required">
        <description>
			<![CDATA[The panelBarItem component is used for creating a single panel within a panelBar>.]]>
		</description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="contentClass" required="false">
            <description>The component content style class</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="contentClass"/>
        <attribute-type name="contentStyle" required="false">
            <description>The component content style</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="contentStyle"/>
        <attribute-type name="headerClass" required="false">
            <description>The component header style class</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerClass"/>
        <attribute-type name="headerClassActive" required="false">
            <description>
				The component header style class active
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerClassActive"/>
        <attribute-type name="headerStyle" required="false">
            <description>The component header style</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerStyle"/>
        <attribute-type name="headerStyleActive" required="false">
            <description>The component header style active</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerStyleActive"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="label" required="false">
            <description>
				Label text appears on a panel item header
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="label"/>
        <attribute-type name="name" required="false">
            <description>
				Attribute defines item name. Default value is "getId()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="name"/>
        <attribute-type name="onenter" required="false">
            <description>
				Event must occurs on than item has been entered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onenter"/>
        <attribute-type name="onleave" required="false">
            <description>
				Event must occurs on than item has been leaved
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onleave"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="panelMenu" start-tag="required">
        <description>
			<![CDATA[The panelMenu component is used to define an in line vertical menu on a page.]]>		</description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="converter" required="false">
            <description>
				Id of Converter to be used or reference to a Converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converter"/>
        <attribute-type name="converterMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the converter message,
				replacing any message that comes from the converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converterMessage"/>
        <attribute-type name="disabled" required="false">
            <description>
				If true sets state of the item to disabled state.
				Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="disabled"/>
        <attribute-type name="disabledGroupClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to disabled group of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledGroupClass"/>
        <attribute-type name="disabledGroupStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to disabled group when
				this component is rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledGroupStyle"/>
        <attribute-type name="disabledItemClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to disabled item of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledItemClass"/>
        <attribute-type name="disabledItemStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to disabled item when
				this component is rendered.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledItemStyle"/>
        <attribute-type name="event" required="false">
            <description>
				Defines the event on the representation element that
				triggers the submenu's expand/collapse. Default value is
				"onclick".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="event"/>
        <attribute-type name="expandMode" required="false">
            <description>
				Set the submission mode for all panel menu groups after
				expand/collapse except ones where this attribute
				redefined. Possible values are "ajax", "server", "none".
				Default value is "none".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="expandMode"/>
        <attribute-type name="expandSingle" required="false">
            <description>
				Whether only one panel menu node on top level can be
				opened at a time. If the value of this attribute is
				true, the previously opened node on the top level is
				closed. If the value is false, the node is left opened.
				Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="expandSingle"/>
        <attribute-type name="groupClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to group of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="groupClass"/>
        <attribute-type name="groupStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to group when this
				component is rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="groupStyle"/>
        <attribute-type name="hoveredGroupClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to hovered group of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="hoveredGroupClass"/>
        <attribute-type name="hoveredGroupStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to hovered group when
				this component is rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="hoveredGroupStyle"/>
        <attribute-type name="hoveredItemClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to hovered item of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="hoveredItemClass"/>
        <attribute-type name="hoveredItemStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to hovered item when
				this component is rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="hoveredItemStyle"/>
        <attribute-type name="iconCollapsedGroup" required="false">
            <description>
				Path to the icon to be displayed for the collapsed Group
				state. You can also use predefined icons, setting the
				attribute to one of these possible values: "triangle",
				"triangleUp", "triangleDown", "disc", "chevron",
				"chevronUp", "chevronDown", "grid". Default value is
				"grid".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconCollapsedGroup"/>
        <attribute-type name="iconCollapsedTopGroup" required="false">
            <description>
				Path to the icon to be displayed for the collapsed top
				group state.\ You can also use predefined icons, setting
				the attribute to one of these possible values:
				"triangle", "triangleUp", "triangleDown", "disc",
				"chevron", "chevronUp", "chevronDown", "grid". Default
				value is "grid".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconCollapsedTopGroup"/>
        <attribute-type name="iconDisabledGroup" required="false">
            <description>
				Path to the icon to be displayed for the disabled group
				state. You can also use predefined icons, setting the
				attribute to one of these possible values: "triangle",
				"triangleUp", "triangleDown", "disc", "chevron",
				"chevronUp", "chevronDown", "grid". Default value is
				"grid".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconDisabledGroup"/>
        <attribute-type name="iconDisabledItem" required="false">
            <description>
				Path to the icon to be displayed for the disabled item
				state. You can also use predefined icons, setting the
				attribute to one of these possible values: "triangle",
				"triangleUp", "triangleDown", "disc", "chevron",
				"chevronUp", "chevronDown", "grid". Default value is
				"grid".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconDisabledItem"/>
        <attribute-type name="iconExpandedGroup" required="false">
            <description>
				Path to the icon to be displayed for the expanded Group
				state. You can also use predefined icons, setting the
				attribute to one of these possible values: "triangle",
				"triangleUp", "triangleDown", "disc", "chevron",
				"chevronUp", "chevronDown", "grid". Default value is
				"grid".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconExpandedGroup"/>
        <attribute-type name="iconExpandedTopGroup" required="false">
            <description>
				Path to the icon to be displayed for the expanded top
				group state. You can also use predefined icons, setting
				the attribute to one of these possible values:
				"triangle", "triangleUp", "triangleDown", "disc",
				"chevron", "chevronUp", "chevronDown", "grid". Default
				value is "grid".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconExpandedTopGroup"/>
        <attribute-type name="iconGroupPosition" required="false">
            <description>
				Position of the icon for the group icon. Possible values
				are "left","right","none". Default value is "left".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconGroupPosition"/>
        <attribute-type name="iconGroupTopPosition" required="false">
            <description>
				Position of the icon for the top group icon. Possible
				values are "left","right","none". Default value is
				"left".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconGroupTopPosition"/>
        <attribute-type name="iconItem" required="false">
            <description>
				Path to the icon to be displayed for the enabled item
				state. You can also use predefined icons, setting the
				attribute to one of these possible values: "triangle",
				"triangleUp", "triangleDown", "disc", "chevron",
				"chevronUp", "chevronDown", "grid". Default value is
				"grid".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconItem"/>
        <attribute-type name="iconItemPosition" required="false">
            <description>
				Position of the icon for the item icon. Possible values
				are "left","right","none". Default value is "left".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconItemPosition"/>
        <attribute-type name="iconItemTopPosition" required="false">
            <description>
				Position of the icon for the top item icon. Possible
				values are "left","right","none". Default value is
				"left".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconItemTopPosition"/>
        <attribute-type name="iconTopDisableGroup" required="false">
            <description>
				Path to the icon to be displayed for the disabled top
				Group state. You can also use predefined icons, setting
				the attribute to one of these possible values:
				"triangle", "triangleUp", "triangleDown", "disc",
				"chevron", "chevronUp", "chevronDown", "grid". Default
				value is "grid".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconTopDisableGroup"/>
        <attribute-type name="iconTopDisabledItem" required="false">
            <description>
				Path to the icon to be displayed for the disabled top
				item state. You can also use predefined icons, setting
				the attribute to one of these possible values:
				"triangle", "triangleUp", "triangleDown", "disc",
				"chevron", "chevronUp", "chevronDown", "grid". Default
				value is "grid".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconTopDisabledItem"/>
        <attribute-type name="iconTopItem" required="false">
            <description>
				Path to the icon to be displayed for the enabled top
				item state. You can also use predefined icons, setting
				the attribute to one of these possible values:
				"triangle", "triangleUp", "triangleDown", "disc",
				"chevron", "chevronUp", "chevronDown", "grid". Default
				value is "grid".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconTopItem"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="itemClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to item of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="itemClass"/>
        <attribute-type name="itemStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to item when this
				component is rendered.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="itemStyle"/>
        <attribute-type name="label" required="false">
            <description>
				A localized user presentable name for this component.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="label"/>
        <attribute-type name="mode" required="false">
            <description>
				Set the submission mode for all panel menu items on the
				panel menu except ones where this attribute redefined.
				Possible values are "ajax", "server", "none". Default
				value is "server".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="mode"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="ongroupcollapse" required="false">
            <description>
				HTML: script expression; some group was closed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ongroupcollapse"/>
        <attribute-type name="ongroupexpand" required="false">
            <description>
				HTML: script expression; some group was activated
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ongroupexpand"/>
        <attribute-type name="onitemhover" required="false">
            <description>
				HTML: script expression; some item was hovered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onitemhover"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: script expression; a pointer was moved within.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: script expression; a pointer was moved away.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: script expression; a pointer was moved onto.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="required" required="false">
            <description>
				If "true", this component is checked for non-empty input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="required"/>
        <attribute-type name="requiredMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validation message for
				the "required" facility, if the "required" facility is
				used
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requiredMessage"/>
        <attribute-type name="selectedChild" required="false">
            <description>
				contain the name or the clientId of any of the item or
				group, the child defined in this attribute should be
				highlighted on PanelMenu rendering
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectedChild"/>
        <attribute-type name="style" required="false">
            <description>The CSS style for the panel menu.</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>The CSS class for the panel menu.</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="topGroupClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to top group of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="topGroupClass"/>
        <attribute-type name="topGroupStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to top group when this
				component is rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="topGroupStyle"/>
        <attribute-type name="topItemClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to top item of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="topItemClass"/>
        <attribute-type name="topItemStyle" required="false">
            <description>
				CSS style(s) is/are to be applied to top item when this
				component is rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="topItemStyle"/>
        <attribute-type name="validator" required="false">
            <description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.context.FacesContext"/>
                <param name="paramType" value="javax.faces.component.UIComponent"/>
                <param name="paramType" value="java.lang.Object"/>
            </proposal>
        </attribute-type>
        <attribute type="validator"/>
        <attribute-type name="validatorMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validator message,
				replacing any message that comes from the validator
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="validatorMessage"/>
        <attribute-type name="value" required="false">
            <description>
				The current value of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="valueChangeListener" required="false">
            <description>Listener for value changes</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ValueChangeEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="valueChangeListener"/>
        <attribute-type name="width" required="false">
            <description>
				Set minimal width for the menu. Default value is "100%".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="panelMenuGroup" start-tag="required">
        <description>
        	<![CDATA[The panelMenuGroup component is used to define an expandable group of items inside the panel menu or other group.]]>
		</description>
        <attribute-type name="accesskey" required="false">
            <description>
				This attribute assigns an access key to an element. An
				access key is a single character from the document
				character set. Note: Authors should consider the input
				method of the expected reader when specifying an
				accesskey
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="accesskey"/>
        <attribute-type name="action" required="false">
            <description>
				MethodBinding pointing at the application action to be
				invoked, if this UIComponent is activated by you, during
				the Apply Request Values or Invoke Application phase of
				the request processing lifecycle, depending on the value
				of the immediate property
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="any"/>
            </proposal>
        </attribute-type>
        <attribute type="action"/>
        <attribute-type name="actionListener" required="false">
            <description>
				MethodBinding pointing at method accepting an
				ActionEvent with return type void
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="actionListener"/>
        <attribute-type name="ajaxSingle" required="false">
            <description>
				boolean attribute which provides possibility to limit
				JSF tree processing(decoding, conversion/validation,
				value applying) to the component which send the request
				only
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSingle"/>
        <attribute-type name="align" required="false">
            <description>
				left|center|right|justify [CI] Deprecated. This
				attribute specifies the horizontal alignment of its
				element with respect to the surrounding context.
				Possible values:

				* left: text lines are rendered flush left. * center:
				text lines are centered. * right: text lines are
				rendered flush right. * justify: text lines are
				justified to both margins.

				The default depends on the base text direction. For left
				to right text, the default is align=left, while for
				right to left text, the default is align=right
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="align"/>
        <attribute-type name="alt" required="false">
            <description>
				For a user agents that cannot display images, forms, or
				applets, this attribute specifies alternate text. The
				language of the alternate text is specified by the lang
				attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="alt"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="bypassUpdates" required="false">
            <description>
				If "true", after process validations phase it skips
				updates of model beans on a force render response. It
				can be used for validating components input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bypassUpdates"/>
        <attribute-type name="converter" required="false">
            <description>
				Id of Converter to be used or reference to a Converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converter"/>
        <attribute-type name="converterMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the converter message,
				replacing any message that comes from the converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converterMessage"/>
        <attribute-type name="data" required="false">
            <description>
				Serialized (on default with JSON) data passed on the
				client by a developer on AJAX request. It's accessible
				via "data.foo" syntax
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="data"/>
        <attribute-type name="disabled" required="false">
            <description>
				When set for a form control, this boolean attribute
				disables the control for your input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="disabled"/>
        <attribute-type name="disabledClass" required="false">
            <description>
				Class to be applied to disabled items.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledClass"/>
        <attribute-type name="disabledStyle" required="false">
            <description>
				CSS style rules to be applied to disabled items.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledStyle"/>
        <attribute-type name="eventsQueue" required="false">
            <description>
				Name of requests queue to avoid send next request before
				complete other from same event. Can be used to reduce
				number of requests of frequently events (key press,
				mouse move etc.)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="eventsQueue"/>
        <attribute-type name="expandMode" required="false">
            <description>
				Set the submission mode for all panel menu groups after
				expand/collapse except ones where this attribute
				redefined. Possible value are "ajax", "server", "none".
				Default value is "none".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="expandMode"/>
        <attribute-type name="expanded" required="false">
            <description>
				If true group will be displayed expanded initially.
				Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="expanded"/>
        <attribute-type name="focus" required="false">
            <description>
				id of element to set focus after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="focus"/>
        <attribute-type name="hoverClass" required="false">
            <description>
				Class to be applied to hovered items.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="hoverClass"/>
        <attribute-type name="hoverStyle" required="false">
            <description>
				CSS style rules to be applied to hovered items.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="hoverStyle"/>
        <attribute-type name="iconClass" required="false">
            <description>
				Class to be applied to icon element.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconClass"/>
        <attribute-type name="iconCollapsed" required="false">
            <description>
				Path to the icon to be displayed for the collapsed item
				state. You can also use predefined icons, setting the
				attribute to one of these possible values: "triangle",
				"triangleUp", "triangleDown", "disc", "chevron",
				"chevronUp", "chevronDown", "grid". Default value is
				"grid".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconCollapsed"/>
        <attribute-type name="iconDisabled" required="false">
            <description>
				Path to the icon to be displayed for the disabled item
				state.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconDisabled"/>
        <attribute-type name="iconExpanded" required="false">
            <description>
				Path to the icon to be displayed for the expanded item
				state. You can also use predefined icons, setting the
				attribute to one of these possible values: "triangle",
				"triangleUp", "triangleDown", "disc", "chevron",
				"chevronUp", "chevronDown", "grid". Default value is
				"grid".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconExpanded"/>
        <attribute-type name="iconStyle" required="false">
            <description>CSS style rules to be applied</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconStyle"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="ignoreDupResponses" required="false">
            <description>
				Attribute allows to ignore an Ajax Response produced by
				a request if the newest 'similar' request is in a queue
				already. ignoreDupResponses="true" does not cancel the
				request while it is processed on the server, but just
				allows to avoid unnecessary updates on the client side
				if the response isn't actual now
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ignoreDupResponses"/>
        <attribute-type name="immediate" required="false">
            <description>
				True means, that the default ActionListener should be
				executed immediately (i.e. during Apply Request Values
				phase of the request processing lifecycle), rather than
				waiting until the Invoke Application phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="label" required="false">
            <description>Displayed node's text</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="label"/>
        <attribute-type name="limitToList" required="false">
            <description>
				If "true", updates on client side ONLY elements from
				this 'reRender' property. If "false" (default) updates
				all rendered by ajax region components
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="limitToList"/>
        <attribute-type name="maxlength" required="false">
            <description>
				When the type attribute has the value "text" or
				"password", this attribute specifies the maximum number
				of characters you may enter. This number may exceed the
				specified size, in which case the user agent should
				offer a scrolling mechanism. The default value for this
				attribute is an unlimited number
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="maxlength"/>
        <attribute-type name="name" required="false">
            <description>
				Refers to group/item with the same name. Default value
				is "getId()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="name"/>
        <attribute-type name="onbeforedomupdate" required="false">
            <description>
				JavaScript code for call before DOM has been updated on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforedomupdate"/>
        <attribute-type name="onblur" required="false">
            <description>
				HTML: script expression; the element lost the focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onblur"/>
        <attribute-type name="onchange" required="false">
            <description>
				HTML: script expression; the element value was changed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onchange"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="oncollapse" required="false">
            <description>
				HTML: script expression; group was closed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncollapse"/>
        <attribute-type name="oncomplete" required="false">
            <description>
				JavaScript code for call after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncomplete"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onexpand" required="false">
            <description>
				HTML: script expression; group was opened
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onexpand"/>
        <attribute-type name="onfocus" required="false">
            <description>
				HTML: script expression; the element got the focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onfocus"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="onselect" required="false">
            <description>
				HTML: script expression; The onselect event occurs when
				you select some text in a text field. This attribute may
				be used with the INPUT and TEXTAREA elements
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onselect"/>
        <attribute-type name="process" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, processed at the phases 2-5 in case of
				AjaxRequest caused by this component. Can be single id,
				comma-separated list of Id's, or EL Expression with
				array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="process"/>
        <attribute-type name="reRender" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, rendered in case of AjaxRequest caused by
				this component. Can be single id, comma-separated list
				of Id's, or EL Expression with array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="reRender"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="requestDelay" required="false">
            <description>
				Attribute defines the time (in ms.) that the request
				will be wait in the queue before it is ready to send.
				When the delay time is over, the request will be sent to
				the server or removed if the newest 'similar' request is
				in a queue already
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requestDelay"/>
        <attribute-type name="required" required="false">
            <description>
				If "true", this component is checked for non-empty input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="required"/>
        <attribute-type name="requiredMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validation message for
				the "required" facility, if the "required" facility is
				used
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requiredMessage"/>
        <attribute-type name="size" required="false">
            <description>
				This attribute tells the user agent the initial width of
				the control. The width is given in pixels except when
				type attribute has the value "text" or "password". In
				that case, its value refers to the (integer) number of
				characters
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="size"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) to be applied when this component is
				rendered.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="tabindex" required="false">
            <description>
				This attribute specifies the position of the current
				element in the tabbing order for the current document.
				This value must be a number between 0 and 32767. User
				agents should ignore leading zeros
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tabindex"/>
        <attribute-type name="target" required="false">
            <description>
				Target frame for action to execute.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="target"/>
        <attribute-type name="timeout" required="false">
            <description>
				Response waiting time on a particular request. If a
				response is not received during this time, the request
				is aborted
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="timeout"/>
        <attribute-type name="validator" required="false">
            <description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.context.FacesContext"/>
                <param name="paramType" value="javax.faces.component.UIComponent"/>
                <param name="paramType" value="java.lang.Object"/>
            </proposal>
        </attribute-type>
        <attribute type="validator"/>
        <attribute-type name="validatorMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validator message,
				replacing any message that comes from the validator
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="validatorMessage"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="valueChangeListener" required="false">
            <description>Listener for value changes</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ValueChangeEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="valueChangeListener"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="panelMenuItem" start-tag="required">
        <description>
			<![CDATA[The panelMenuItem component is used to define a single item inside popup list.]]>
		</description>
        <attribute-type name="action" required="false">
            <description>
				MethodBinding pointing at the application action to be
				invoked, if this UIComponent is activated by you, during
				the Apply Request Values or Invoke Application phase of
				the request processing lifecycle, depending on the value
				of the immediate property
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="any"/>
            </proposal>
        </attribute-type>
        <attribute type="action"/>
        <attribute-type name="actionListener" required="false">
            <description>
				MethodBinding pointing at method accepting an
				ActionEvent with return type void
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="actionListener"/>
        <attribute-type name="ajaxSingle" required="false">
            <description>
				boolean attribute which provides possibility to limit
				JSF tree processing(decoding, conversion/validation,
				value applying) to the component which send the request
				only
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSingle"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="bypassUpdates" required="false">
            <description>
				If "true", after process validations phase it skips
				updates of model beans on a force render response. It
				can be used for validating components input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bypassUpdates"/>
        <attribute-type name="data" required="false">
            <description>
				Serialized (on default with JSON) data passed on the
				client by a developer on AJAX request. It's accessible
				via "data.foo" syntax
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="data"/>
        <attribute-type name="disabled" required="false">
            <description>
				If true sets state of the item to disabled state.
				Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="disabled"/>
        <attribute-type name="disabledClass" required="false">
            <description>
				Class to be applied to disabled items.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledClass"/>
        <attribute-type name="disabledStyle" required="false">
            <description>
				CSS style rules to be applied to disabled items.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledStyle"/>
        <attribute-type name="eventsQueue" required="false">
            <description>
				Name of requests queue to avoid send next request before
				complete other from same event. Can be used to reduce
				number of requests of frequently events (key press,
				mouse move etc.)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="eventsQueue"/>
        <attribute-type name="focus" required="false">
            <description>
				id of element to set focus after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="focus"/>
        <attribute-type name="hoverClass" required="false">
            <description>
				Class to be applied to hovered items.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="hoverClass"/>
        <attribute-type name="hoverStyle" required="false">
            <description>
				CSS style rules to be applied to hovered items.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="hoverStyle"/>
        <attribute-type name="icon" required="false">
            <description>
				Path to the icon or the default one name to be displayed
				for the enabled item state. You can also use predefined
				icons, setting the attribute to one of these possible
				values: "triangle", "triangleUp", "triangleDown",
				"disc", "chevron", "chevronUp", "chevronDown", "grid".
				Default value is "grid".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="icon"/>
        <attribute-type name="iconClass" required="false">
            <description>
				Class to be applied to icon element.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconClass"/>
        <attribute-type name="iconDisabled" required="false">
            <description>
				Path to the icon to be displayed for the disabled item
				state. You can also use predefined icons, setting the
				attribute to one of these possible values: "triangle",
				"triangleUp", "triangleDown", "disc", "chevron",
				"chevronUp", "chevronDown", "grid". Default value is
				"grid".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconDisabled"/>
        <attribute-type name="iconStyle" required="false">
            <description>CSS style rules to be applied</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconStyle"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="ignoreDupResponses" required="false">
            <description>
				Attribute allows to ignore an Ajax Response produced by
				a request if the newest 'similar' request is in a queue
				already. ignoreDupResponses="true" does not cancel the
				request while it is processed on the server, but just
				allows to avoid unnecessary updates on the client side
				if the response isn't actual now
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ignoreDupResponses"/>
        <attribute-type name="immediate" required="false">
            <description>
				True means, that the default ActionListener should be
				executed immediately (i.e. during Apply Request Values
				phase of the request processing lifecycle), rather than
				waiting until the Invoke Application phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="label" required="false">
            <description>
				Defines representation text for menuItem.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="label"/>
        <attribute-type name="limitToList" required="false">
            <description>
				If "true", updates on client side ONLY elements from
				this 'reRender' property. If "false" (default) updates
				all rendered by ajax region components
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="limitToList"/>
        <attribute-type name="mode" required="false">
            <description>
				Set the submission mode.

				Possible values are "ajax", "server", "none". Default
				value is "none".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="mode"/>
        <attribute-type name="name" required="false">
            <description>
				'selectedChild' attribute of PanelMenu refers to
				group/item with the same name. Default value is
				"getId()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="name"/>
        <attribute-type name="onbeforedomupdate" required="false">
            <description>
				JavaScript code for call before DOM has been updated on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforedomupdate"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="oncomplete" required="false">
            <description>
				JavaScript code for call after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncomplete"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="process" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, processed at the phases 2-5 in case of
				AjaxRequest caused by this component. Can be single id,
				comma-separated list of Id's, or EL Expression with
				array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="process"/>
        <attribute-type name="reRender" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, rendered in case of AjaxRequest caused by
				this component. Can be single id, comma-separated list
				of Id's, or EL Expression with array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="reRender"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="requestDelay" required="false">
            <description>
				Attribute defines the time (in ms.) that the request
				will be wait in the queue before it is ready to send.
				When the delay time is over, the request will be sent to
				the server or removed if the newest 'similar' request is
				in a queue already
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requestDelay"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="target" required="false">
            <description>
				Target frame for action to execute.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="target"/>
        <attribute-type name="timeout" required="false">
            <description>
				Response waiting time on a particular request. If a
				response is not received during this time, the request
				is aborted
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="timeout"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="pickList" start-tag="required">
        <description>
        	<![CDATA[The pickList component is used for moving selected item(s) from one list into another. ]]>
        </description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="controlClass" required="false">
            <description>CSSA??classA??forA??aA??list</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="controlClass"/>
        <attribute-type name="converter" required="false">
            <description>
				Id of Converter to be used or reference to a Converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converter"/>
        <attribute-type name="converterMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the converter message,
				replacing any message that comes from the converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converterMessage"/>
        <attribute-type name="copyAllControlLabel" required="false">
            <description>
				Defines a label for a copyAll control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="copyAllControlLabel"/>
        <attribute-type name="copyControlLabel" required="false">
            <description>
				Defines a label for a copy control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="copyControlLabel"/>
        <attribute-type name="disabled" required="false">
            <description>disabled</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="disabled"/>
        <attribute-type name="disabledStyle" required="false">
            <description>
				CSS style rules to be applied to disabled controls
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledStyle"/>
        <attribute-type name="disabledStyleClass" required="false">
            <description>
				The disabledStyleClass for disabled controls
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledStyleClass"/>
        <attribute-type name="enabledStyle" required="false">
            <description>
				CSS style rules to be applied to enabled controls
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="enabledStyle"/>
        <attribute-type name="enabledStyleClass" required="false">
            <description>
				The enabledStyleClass for enabled controls
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="enabledStyleClass"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="listClass" required="false">
            <description>CSSA??classA??forA??aA??list</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="listClass"/>
        <attribute-type name="listsHeight" required="false">
            <description>Defines height of the list</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="listsHeight"/>
        <attribute-type name="moveControlsVerticalAlign" required="false">
            <description>
				Customizes vertically a position of move/copy controls
				relatively to lists
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="moveControlsVerticalAlign"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onlistchanged" required="false">
            <description>
				A JavaScript event handler called on a list change
				operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onlistchanged"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="removeAllControlLabel" required="false">
            <description>
				Defines a label for a removeAll control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="removeAllControlLabel"/>
        <attribute-type name="removeControlLabel" required="false">
            <description>
				Defines a label for a remove control
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="removeControlLabel"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="required" required="false">
            <description>
				If "true", this component is checked for non-empty input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="required"/>
        <attribute-type name="requiredMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validation message for
				the "required" facility, if the "required" facility is
				used
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requiredMessage"/>
        <attribute-type name="showButtonsLabel" required="false">
            <description>Shows a label for a button</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showButtonsLabel"/>
        <attribute-type name="sourceListWidth" required="false">
            <description>Defines width of a source list</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sourceListWidth"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="switchByClick" required="false">
            <description>
				If "true", dragging between lists realized by click
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="switchByClick"/>
        <attribute-type name="targetListWidth" required="false">
            <description>Defines width of a target list</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="targetListWidth"/>
        <attribute-type name="title" required="false">
            <description>
				Advisory title information about markup elements
				generated for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="validator" required="false">
            <description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.context.FacesContext"/>
                <param name="paramType" value="javax.faces.component.UIComponent"/>
                <param name="paramType" value="java.lang.Object"/>
            </proposal>
        </attribute-type>
        <attribute type="validator"/>
        <attribute-type name="validatorMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validator message,
				replacing any message that comes from the validator
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="validatorMessage"/>
        <attribute-type name="value" required="false">
            <description>
				The current value of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="valueChangeListener" required="false">
            <description>Listener for value changes</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ValueChangeEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="valueChangeListener"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="progressBar" start-tag="required">
        <description>
        	<![CDATA[The progressBar component is designed for displaying a progress bar which shows the current status of the process. ]]>
        </description>
        <attribute-type name="actionListener" required="false">
            <description>
				MethodBinding pointing at method accepting an
				ActionEvent with return type void
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="actionListener"/>
        <attribute-type name="ajaxSingle" required="false">
            <description>
				boolean attribute which provides possibility to limit
				JSF tree processing(decoding, conversion/validation,
				value applying) to the component which send the request
				only
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSingle"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="bypassUpdates" required="false">
            <description>
				If "true", after process validations phase it skips
				updates of model beans on a force render response. It
				can be used for validating components input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bypassUpdates"/>
        <attribute-type name="completeClass" required="false">
            <description>
				CSS class that defines style for progress line rendering
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="completeClass"/>
        <attribute-type name="data" required="false">
            <description>
				Serialized (on default with JSON) data passed on the
				client by a developer on AJAX request. It's accessible
				via "data.foo" syntax
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="data"/>
        <attribute-type name="enabled" required="false">
            <description>
				Enables/disables polling. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="enabled"/>
        <attribute-type name="eventsQueue" required="false">
            <description>
				Name of requests queue to avoid send next request before
				complete other from same event. Can be used to reduce
				number of requests of frequently events (key press,
				mouse move etc.)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="eventsQueue"/>
        <attribute-type name="finishClass" required="false">
            <description>
				CSS class that defines style for complete state of the
				component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="finishClass"/>
        <attribute-type name="focus" required="false">
            <description>
				id of element to set focus after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="focus"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="ignoreDupResponses" required="false">
            <description>
				Attribute allows to ignore an Ajax Response produced by
				a request if the newest 'similar' request is in a queue
				already. ignoreDupResponses="true" does not cancel the
				request while it is processed on the server, but just
				allows to avoid unnecessary updates on the client side
				if the response isn't actual now
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ignoreDupResponses"/>
        <attribute-type name="immediate" required="false">
            <description>
				True means, that the default ActionListener should be
				executed immediately (i.e. during Apply Request Values
				phase of the request processing lifecycle), rather than
				waiting until the Invoke Application phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="initialClass" required="false">
            <description>
				CSS class that defines style for initial state of the
				component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="initialClass"/>
        <attribute-type name="interval" required="false">
            <description>
				Interval (in ms) for call poll requests. Default value
				1000 ms (1 sec)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="interval"/>
        <attribute-type name="label" required="false">
            <description>
				Attribute defines a simple label instead of rendering
				children component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="label"/>
        <attribute-type name="limitToList" required="false">
            <description>
				If "true", updates on client side ONLY elements from
				this 'reRender' property. If "false" (default) updates
				all rendered by ajax region components
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="limitToList"/>
        <attribute-type name="maxValue" required="false">
            <description>
				Max value, after which complete state should be
				rendered. Default value is "100".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="maxValue"/>
        <attribute-type name="minValue" required="false">
            <description>
				Min value when initial state should be rendered. Default
				value is "0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="minValue"/>
        <attribute-type name="mode" required="false">
            <description>
				Attributes defines AJAX or CLIENT modes for component.
				Possible values are "ajax", "client". Default value is
				"client".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="mode"/>
        <attribute-type name="onbeforedomupdate" required="false">
            <description>
				JavaScript code for call before DOM has been updated on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforedomupdate"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="oncomplete" required="false">
            <description>
				JavaScript code for call after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncomplete"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="onsubmit" required="false">
            <description>
				JavaScript code for call before submission of ajax event
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onsubmit"/>
        <attribute-type name="parameters" required="false">
            <description>
				Parameters for macrosubstitution in the label
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="parameters"/>
        <attribute-type name="process" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, processed at the phases 2-5 in case of
				AjaxRequest caused by this component. Can be single id,
				comma-separated list of Id's, or EL Expression with
				array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="process"/>
        <attribute-type name="progressVar" required="false">
            <description>
				Provides access to value of the component on the client
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="progressVar"/>
        <attribute-type name="reRender" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, rendered in case of AjaxRequest caused by
				this component. Can be single id, comma-separated list
				of Id's, or EL Expression with array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="reRender"/>
        <attribute-type name="reRenderAfterComplete" required="false">
            <description>
				Set of componets to rerender after completion
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="reRenderAfterComplete"/>
        <attribute-type name="remainClass" required="false">
            <description>
				CSS class that defines style for remained part of
				progress bar
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="remainClass"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				CSS class that defines style for progress bar
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="timeout" required="false">
            <description>
				Response waiting time on a particular request. If a
				response is not received during this time, the request
				is aborted
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="timeout"/>
        <attribute-type name="title" required="false">
            <description>
				Advisory title information about markup elements
				generated for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="value" required="false">
            <description>
				Sets the current value of the progress
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="recursiveTreeNodesAdaptor" start-tag="required">
        <description>
        	<![CDATA[The recursiveTreeNodesAdaptor is an extension of a treeNodesAdaptor component that provides the possibility to define data models and process nodes recursively.]]>
        </description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="included" required="false">
            <description>
				This boolean expression is used to define which elements
				of both collections are processed. Default value is
				"true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="included"/>
        <attribute-type name="includedNode" required="false">
            <description>
				This boolean expression is used to define which elements
				are processed. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="includedNode"/>
        <attribute-type name="includedRoot" required="false">
            <description>
				This boolean expression is used to define which elements
				are processed applying to "roots" collection. Default
				value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="includedRoot"/>
        <attribute-type name="nodes" required="false">
            <description>
				Defines collection to use at the other (non-top) levels
				of iteration
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="nodes"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="roots" required="false">
            <description>
				Defines collection to use at the top of iteration
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="roots"/>
        <attribute-type name="var" required="false">
            <description>
				A request-scope attribute via which the data object for
				the current collection element will be used when
				iterating
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="var"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="scrollableDataTable" start-tag="required">
        <description>
        	<![CDATA[The scrollableDataTable component is used for the table-like component creation. The component just adds the set of additional features described below in comparison with the standard table. ]]>
        </description>
        <attribute-type name="activeClass" required="false">
            <description>
				A CSS class to be applied to an active row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="activeClass"/>
        <attribute-type name="activeRowKey" required="false">
            <description>
				Request scope attribute under which the activeRowKey
				will be accessible
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="activeRowKey"/>
        <attribute-type name="ajaxKeys" required="false">
            <description>
				This attribute defines row keys that are updated after
				an AJAX request
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxKeys"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="bypassUpdates" required="false">
            <description>
				If "true", after process validations phase it skips
				updates of model beans on a force render response. It
				can be used for validating components input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bypassUpdates"/>
        <attribute-type name="columnClasses" required="false">
            <description>
				Comma-delimited list of CSS style classes that are be
				applied to the columns of this table. A space separated
				list of classes may also be specified for any individual
				column. If the number of elements in this list is less
				than the number of columns specified in the "columns"
				attribute, no "class" attribute is output for each
				column greater than the number of elements in the list.
				If the number of elements in the list is greater than
				the number of columns specified in the "columns"
				attribute, the elements at the position in the list
				after the value of the "columns" attribute are ignored
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="columnClasses"/>
        <attribute-type name="componentState" required="false">
            <description>
				It defines EL-binding for a component state for saving
				or redefinition
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="componentState"/>
        <attribute-type name="data" required="false">
            <description>
				Serialized (on default with JSON) data passed on the
				client by a developer on AJAX request. It's accessible
				via "data.foo" syntax
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="data"/>
        <attribute-type name="eventsQueue" required="false">
            <description>
				Name of requests queue to avoid send next request before
				complete other from same event. Can be used to reduce
				number of requests of frequently events (key press,
				mouse move etc.)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="eventsQueue"/>
        <attribute-type name="first" required="false">
            <description>
				A zero-relative row number of the first row to display
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="first"/>
        <attribute-type name="footerClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to any footer generated for this table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="footerClass"/>
        <attribute-type name="frozenColCount" required="false">
            <description>
				Defines the number of the fixed columns from the left
				side that will not be scrolled via horizontal scroll.
				Default value is "0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="frozenColCount"/>
        <attribute-type name="headerClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to any header generated for this table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerClass"/>
        <attribute-type name="height" required="false">
            <description>
				Defines a height of the component. Default value is
				"500px".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="height"/>
        <attribute-type name="hideWhenScrolling" required="false">
            <description>
				If "true" data will be hidden during scrolling. Can be
				used for increase performance. Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="hideWhenScrolling"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="ignoreDupResponses" required="false">
            <description>
				Attribute allows to ignore an Ajax Response produced by
				a request if the newest 'similar' request is in a queue
				already. ignoreDupResponses="true" does not cancel the
				request while it is processed on the server, but just
				allows to avoid unnecessary updates on the client side
				if the response isn't actual now
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ignoreDupResponses"/>
        <attribute-type name="onRowClick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
				on row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowClick"/>
        <attribute-type name="onRowDblClick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked on row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowDblClick"/>
        <attribute-type name="onRowMouseDown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down on row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseDown"/>
        <attribute-type name="onRowMouseUp" required="false">
            <description>
				HTML: script expression; a pointer button is released on
				row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseUp"/>
        <attribute-type name="onselectionchange" required="false">
            <description>
				HTML: script expression to invoke on changing of rows
				selection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onselectionchange"/>
        <attribute-type name="process" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, processed at the phases 2-5 in case of
				AjaxRequest caused by this component. Can be single id,
				comma-separated list of Id's, or EL Expression with
				array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="process"/>
        <attribute-type name="reRender" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, rendered in case of AjaxRequest caused by
				this component. Can be single id, comma-separated list
				of Id's, or EL Expression with array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="reRender"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="requestDelay" required="false">
            <description>
				Attribute defines the time (in ms.) that the request
				will be wait in the queue before it is ready to send.
				When the delay time is over, the request will be sent to
				the server or removed if the newest 'similar' request is
				in a queue already
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requestDelay"/>
        <attribute-type name="rowClasses" required="false">
            <description>
				A comma-delimited list of CSS style classes that is
				applied to popup table rows. A space separated list of
				classes may also be specified for any individual row.
				The styles are applied, in turn, to each row in the
				table. For example, if the list has two elements, the
				first style class in the list is applied to the first
				row, the second to the second row, the first to the
				third row, the second to the fourth row, etc. In other
				words, we keep iterating through the list until we reach
				the end, and then we start at the beginning again
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowClasses"/>
        <attribute-type name="rowKeyConverter" required="false">
            <description>Converter for a row key object</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyConverter"/>
        <attribute-type name="rowKeyVar" required="false">
            <description>
				The attribute provides access to a row key in a Request
				scope
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyVar"/>
        <attribute-type name="rows" required="false">
            <description>
				A number of rows to display, or zero for all remaining
				rows in the table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rows"/>
        <attribute-type name="scriptVar" required="false">
            <description>
				Name of JavaScript variable corresponding to component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="scriptVar"/>
        <attribute-type name="selectedClass" required="false">
            <description>
				Name of the CSS class for a selected row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectedClass"/>
        <attribute-type name="selection" required="false">
            <description>
				Value binding representing selected rows
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selection"/>
        <attribute-type name="sortMode" required="false">
            <description>
				Defines mode of sorting. Possible values are 'single'
				for sorting of one column and 'multi' for some.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortMode"/>
        <attribute-type name="sortOrder" required="false">
            <description>
				ValueBinding pointing at a property of a class to manage
				rows sorting
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortOrder"/>
        <attribute-type name="stateVar" required="false">
            <description>
				The attribute provides access to a component state on
				the client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="stateVar"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="timeout" required="false">
            <description>
				Response waiting time on a particular request. If a
				response is not received during this time, the request
				is aborted
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="timeout"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="var" required="false">
            <description>
				A request-scope attribute via which the data object for
				the current row will be used when iterating
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="var"/>
        <attribute-type name="width" required="false">
            <description>
				Defines a width of the component. Default value is
				"700px".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="separator" start-tag="required">
        <description>
	        <![CDATA[The separator component is use to draw a horizontal line to use as a separator in a layout. ]]>
		</description>
        <attribute-type name="align" required="false">
            <description>
				left|center|right [CI] This attribute specifies a
				position of the separator according to the document.
				Permitted values: * left: The separator is to the left
				of the document. * center: The separator is to the
				center of the document. * right: The separator is to the
				right of the document
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="align"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="height" required="false">
            <description>
				The separator height. Default value is "6px".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="height"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="lineType" required="false">
            <description>
				A line type. The possible values are "beveled"
				(default), "dotted", "dashed", "double" and "solid".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lineType"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="title" required="false">
            <description>
				HTML: An advisory title for this element. Often
				displayed as a tooltip
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="width" required="false">
            <description>
				The separator width that can be defined in pixels or in
				percents. Default value is "100%".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="simpleTogglePanel" start-tag="required">
        <description>
	        <![CDATA[The simpleTogglePanel is a collapsible panel, which content shows/hides after activating a header control.]]>
		</description>
        <attribute-type name="action" required="false">
            <description>
				MethodBinding pointing at the application action to be
				invoked, if this UIComponent is activated by you, during
				the Apply Request Values or Invoke Application phase of
				the request processing lifecycle, depending on the value
				of the immediate property
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="any"/>
            </proposal>
        </attribute-type>
        <attribute type="action"/>
        <attribute-type name="actionListener" required="false">
            <description>
				MethodBinding pointing at method accepting an
				ActionEvent with return type void
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="actionListener"/>
        <attribute-type name="ajaxSingle" required="false">
            <description>
				boolean attribute which provides possibility to limit
				JSF tree processing(decoding, conversion/validation,
				value applying) to the component which send the request
				only
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSingle"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="bodyClass" required="false">
            <description>
				A class that defines a style for a panel content
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bodyClass"/>
        <attribute-type name="bypassUpdates" required="false">
            <description>
				If "true", after process validations phase it skips
				updates of model beans on a force render response. It
				can be used for validating components input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bypassUpdates"/>
        <attribute-type name="data" required="false">
            <description>
				Serialized (on default with JSON) data passed on the
				client by a developer on AJAX request. It's accessible
				via "data.foo" syntax
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="data"/>
        <attribute-type name="eventsQueue" required="false">
            <description>
				Name of requests queue to avoid send next request before
				complete other from same event. Can be used to reduce
				number of requests of frequently events (key press,
				mouse move etc.)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="eventsQueue"/>
        <attribute-type name="focus" required="false">
            <description>
				id of element to set focus after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="focus"/>
        <attribute-type name="headerClass" required="false">
            <description>
				Class that defines the style for panel header
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerClass"/>
        <attribute-type name="height" required="false">
            <description>
				Height of a simple toggle panel content area might be
				defined as pixels or in percents. By default height is
				not defined
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="height"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="ignoreDupResponses" required="false">
            <description>
				Attribute allows to ignore an Ajax Response produced by
				a request if the newest 'similar' request is in a queue
				already. ignoreDupResponses="true" does not cancel the
				request while it is processed on the server, but just
				allows to avoid unnecessary updates on the client side
				if the response isn't actual now
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ignoreDupResponses"/>
        <attribute-type name="immediate" required="false">
            <description>
				True means, that the default ActionListener should be
				executed immediately (i.e. during Apply Request Values
				phase of the request processing lifecycle), rather than
				waiting until the Invoke Application phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="label" required="false">
            <description>
				Marker to be rendered on a panel header
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="label"/>
        <attribute-type name="limitToList" required="false">
            <description>
				If "true", updates on client side ONLY elements from
				this 'reRender' property. If "false" (default) updates
				all rendered by ajax region components
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="limitToList"/>
        <attribute-type name="onbeforedomupdate" required="false">
            <description>
				JavaScript code for call before DOM has been updated on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforedomupdate"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="oncollapse" required="false">
            <description>
				Event must occurs on befor panel collapsed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncollapse"/>
        <attribute-type name="oncomplete" required="false">
            <description>
				JavaScript code for call after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncomplete"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onexpand" required="false">
            <description>
				Event must occurs on befor panel expanded
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onexpand"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="opened" required="false">
            <description>
				A "false" value for this attribute makes the panel
				closed by default. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="opened"/>
        <attribute-type name="process" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, processed at the phases 2-5 in case of
				AjaxRequest caused by this component. Can be single id,
				comma-separated list of Id's, or EL Expression with
				array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="process"/>
        <attribute-type name="reRender" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, rendered in case of AjaxRequest caused by
				this component. Can be single id, comma-separated list
				of Id's, or EL Expression with array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="reRender"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="requestDelay" required="false">
            <description>
				Attribute defines the time (in ms.) that the request
				will be wait in the queue before it is ready to send.
				When the delay time is over, the request will be sent to
				the server or removed if the newest 'similar' request is
				in a queue already
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requestDelay"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="switchType" required="false">
            <description>
				Facets switch algorithm: "client", "server"(default),
				"ajax"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="switchType"/>
        <attribute-type name="timeout" required="false">
            <description>
				Response waiting time on a particular request. If a
				response is not received during this time, the request
				is aborted
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="timeout"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="width" required="false">
            <description>
				Width of a simple toggle panel might be defined as
				pixels or in percents. By default width is not defined
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="spacer" start-tag="required">
        <description>
			A spacer to use in layout. It is rendered as a transparent
			image. The size is set up with width and height attributes.
			By default it is displayed as an inline element (i.e. word
			spacer). By using style='display:block' can be used as a
			line spacer.
		</description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="height" required="false">
            <description>
				The height of the spacer defined in pixels. Default
				value is "1px".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="height"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="title" required="false">
            <description>
				HTML: An advisory title for this element. Often used by
				the user agent as a tooltip
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="width" required="false">
            <description>
				The width of the spacer defined in pixels. Default value
				is "1px".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="subTable" start-tag="required">
        <description>
        	<![CDATA[The subTable component is used for inserting subtables into tables.]]>
        </description>
        <attribute-type name="ajaxKeys" required="false">
            <description>
				This attribute defines row keys that are updated after
				an AJAX request
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxKeys"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="columnClasses" required="false">
            <description>
				Comma-delimited list of CSS style classes that are be
				applied to the columns of this table. A space separated
				list of classes may also be specified for any individual
				column. If the number of elements in this list is less
				than the number of columns specified in the "columns"
				attribute, no "class" attribute is output for each
				column greater than the number of elements in the list.
				If the number of elements in the list is greater than
				the number of columns specified in the "columns"
				attribute, the elements at the position in the list
				after the value of the "columns" attribute are ignored
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="columnClasses"/>
        <attribute-type name="componentState" required="false">
            <description>
				It defines EL-binding for a component state for saving
				or redefinition
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="componentState"/>
        <attribute-type name="filterMethod" required="false">
            <description>
				This attribute is defined with method binding. This
				method accepts on Object parameter and return boolean
				value
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="filterMethod"/>
        <attribute-type name="filterValue" required="false">
            <description>Defines current filtering value</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="filterValue"/>
        <attribute-type name="first" required="false">
            <description>
				A zero-relative row number of the first row to display
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="first"/>
        <attribute-type name="footerClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to any footer generated for this table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="footerClass"/>
        <attribute-type name="headerClass" required="false">
            <description>
				Space-separated list of CSS style class(es) that are be
				applied to any header generated for this table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerClass"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="onRowClick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
				on row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowClick"/>
        <attribute-type name="onRowDblClick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked on row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowDblClick"/>
        <attribute-type name="onRowMouseDown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down on row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseDown"/>
        <attribute-type name="onRowMouseMove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within of
				row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseMove"/>
        <attribute-type name="onRowMouseOut" required="false">
            <description>
				HTML: a script expression; a pointer is moved away of
				row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseOut"/>
        <attribute-type name="onRowMouseOver" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto of
				row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseOver"/>
        <attribute-type name="onRowMouseUp" required="false">
            <description>
				HTML: script expression; a pointer button is released on
				row
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onRowMouseUp"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="rowClasses" required="false">
            <description>
				A comma-delimited list of CSS style classes that is
				applied to popup table rows. A space separated list of
				classes may also be specified for any individual row.
				The styles are applied, in turn, to each row in the
				table. For example, if the list has two elements, the
				first style class in the list is applied to the first
				row, the second to the second row, the first to the
				third row, the second to the fourth row, etc. In other
				words, we keep iterating through the list until we reach
				the end, and then we start at the beginning again
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowClasses"/>
        <attribute-type name="rowKeyConverter" required="false">
            <description>Converter for a row key object</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyConverter"/>
        <attribute-type name="rowKeyVar" required="false">
            <description>
				The attribute provides access to a row key in a Request
				scope
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyVar"/>
        <attribute-type name="rows" required="false">
            <description>
				A number of rows to display, or zero for all remaining
				rows in the table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rows"/>
        <attribute-type name="selfSorted" required="false">
            <description>
				Manages if the header of the column is clickable, icons
				rendered and sorting is fired after click on the header.
				You need to define this attribute inside
				&amp;lt;rich:dataTable&amp;gt; component. Default value
				is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selfSorted"/>
        <attribute-type name="sortExpression" required="false">
            <description>
				DEPRECATED(use sortBy)Attribute defines a bean property
				which is used for sorting of a column
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortExpression"/>
        <attribute-type name="sortMode" required="false">
            <description>
				Defines mode of sorting. Possible values are 'single'
				for sorting of one column and 'multi' for some.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortMode"/>
        <attribute-type name="sortOrder" required="false">
            <description>
				SortOrder is an enumeration of the possible sort
				orderings. Default value is "Ordering.UNSORTED".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortOrder"/>
        <attribute-type name="sortPriority" required="false">
            <description>
				Defines a set of column ids in the order the columns
				could be set
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="sortPriority"/>
        <attribute-type name="stateVar" required="false">
            <description>
				The attribute provides access to a component state on
				the client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="stateVar"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="var" required="false">
            <description>
				A request-scope attribute via which the data object for
				the current row will be used when iterating
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="var"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="suggestionbox" start-tag="required">
        <description>
			This element adds "on-keypress" suggestions capabilites to
			any input text component (like &amp;lt;h:inputText&amp;gt;).
			It creates a pop-up window for a input field component
			pointed to by the "for" attribute. For an ordinary request,
			render a hidden HTML &amp;lt;div&amp;gt; element and the
			necessary JavaScript code. When input to the target field
			exceeds the "minChars" property (default is 1), perform an
			AJAX request with the value current entered. If the AJAX
			request is detected and the request parameters map contains
			the client ID of this component, call a method defined by
			suggestionAction, and use it to return a value as data for
			render table, same as &amp;lt;h:dataTable&amp;gt;. In this
			case, the component then works the same as an ordinary
			dataTable. The rendered table is inserted in the pop-up area
			and is used for suggestion prompts for input element. If a
			user clicks on such a table row, its text (or value defined
			by fetchValue) is inserted as the value of the input field.
		</description>
        <attribute-type name="ajaxSingle" required="false">
            <description>
				Boolean attribute which provides possibility to limit
				JSF tree processing(decoding, conversion/validation,
				value applying) to the component which send the request
				only.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSingle"/>
        <attribute-type name="bgcolor" required="false">
            <description>
				Deprecated. This attribute sets the background color for
				the document body or table cells.

				This attribute sets the background color of the canvas
				for the document body (the BODY element) or for tables
				(the TABLE, TR, TH, and TD elements). Additional
				attributes for specifying text color can be used with
				the BODY element.

				This attribute has been deprecated in favor of style
				sheets for specifying background color information
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bgcolor"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="border" required="false">
            <description>
				This attributes specifies the width (in pixels only) of
				the frame around a table
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="border"/>
        <attribute-type name="bypassUpdates" required="false">
            <description>
				If "true", after process validations phase it skips
				updates of model beans on a force render response. It
				can be used for validating components input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bypassUpdates"/>
        <attribute-type name="cellpadding" required="false">
            <description>
				This attribute specifies the amount of space between the
				border of the cell and its contents. If the value of
				this attribute is a pixel length, all four margins
				should be this distance from the contents. If the value
				of the attribute is percentage length, the top and
				bottom margins should be equally separated from the
				content based on percentage of the available vertical
				space, and the left and right margins should be equally
				separated from the content based on percentage of the
				available horizontal space
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cellpadding"/>
        <attribute-type name="cellspacing" required="false">
            <description>
				This attribute specifies how much space the user agent
				should leave between the table and the column on all
				four sides. The attribute also specifies the amount of
				space to leave between cells
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cellspacing"/>
        <attribute-type name="converter" required="false">
            <description>
				Id of Converter to be used or reference to a Converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converter"/>
        <attribute-type name="dir" required="false">
            <description>
				Direction indication for text that does not inherit
				directionality. Valid values are "LTR" (left-to-right)
				and "RTL" (right-to-left)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dir"/>
        <attribute-type name="entryClass" required="false">
            <description>
				Name of the CSS class for a suggestion entry element.
				(table row)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="entryClass"/>
        <attribute-type name="eventsQueue" required="false">
            <description>
				Name of requests queue to avoid send next request before
				complete other from same event. Can be used to reduce
				number of requests of frequently events (key press,
				mouse move etc.)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="eventsQueue"/>
        <attribute-type name="fetchValue" required="false">
            <description>
				A value to set in the target input element on a choice
				suggestion that isn't shown in the suggestion table. It
				can be used for descriptive output comments or
				suggestions. If not set, all text in the suggestion row
				is set as a value
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="fetchValue"/>
        <attribute-type name="first" required="false">
            <description>
				A zero-relative row number of the first row to display
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="first"/>
        <attribute-type name="focus" required="false">
            <description>
				id of element to set focus after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="focus"/>
        <attribute-type name="for" required="false">
            <description>
				id (or full path of id's) of target components, for
				which this element must provide support. If a target
				component inside of the same
				&amp;lt;code&amp;gt;NamingContainer&amp;lt;/code&amp;gt;
				(UIForm, UIData in base implementations), can be simple
				value of the "id" attribute. For other cases must
				include id's of
				&amp;lt;code&amp;gt;NamingContainer&amp;lt;/code&amp;gt;
				components, separated by ':'. For search from the root
				of components, must be started with ':'.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="for"/>
        <attribute-type name="frame" required="false">
            <description>
				void|above|below|hsides|lhs|rhs|vsides|box|border [CI]
				This attribute specifies which sides of the frame
				surrounding a table will be visible. Possible values:

				* void: No sides. This is the default value. * above:
				The top side only. * below: The bottom side only. *
				hsides: The top and bottom sides only. * vsides: The
				right and left sides only. * lhs: The left-hand side
				only. * rhs: The right-hand side only. * box: All four
				sides. * border: All four sides
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="frame"/>
        <attribute-type name="frequency" required="false">
            <description>
				Delay (in seconds) before activating the suggestion
				pop-up
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="frequency"/>
        <attribute-type name="height" required="true">
            <description>
				Height of the pop-up window in pixels. Default value is
				"200".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="height"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="ignoreDupResponses" required="false">
            <description>
				Attribute allows to ignore an Ajax Response produced by
				a request if the newest 'similar' request is in a queue
				already. ignoreDupResponses="true" does not cancel the
				request while it is processed on the server, but just
				allows to avoid unnecessary updates on the client side
				if the response isn't actual now
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ignoreDupResponses"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="lang" required="false">
            <description>
				Code describing the language used in the generated
				markup for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lang"/>
        <attribute-type name="limitToList" required="false">
            <description>
				If "true", updates on client side ONLY elements from
				this 'reRender' property. If "false" (default) updates
				all rendered by ajax region components
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="limitToList"/>
        <attribute-type name="minChars" required="false">
            <description>
				Minimal number of chars in input to activate suggestion
				pop-up
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="minChars"/>
        <attribute-type name="nothingLabel" required="false">
            <description>
				"nothingLabel" is inserted to popup list if the
				autocomplete returns empty list. It isn't selectable and
				list is closed as always after click on it and nothing
				is put to input.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="nothingLabel"/>
        <attribute-type name="onbeforedomupdate" required="false">
            <description>
				JavaScript code for call before DOM has been updated on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforedomupdate"/>
        <attribute-type name="oncomplete" required="false">
            <description>
				JavaScript code for call after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncomplete"/>
        <attribute-type name="onobjectchange" required="false">
            <description>
				JavaScript code for call when selected objects are
				changed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onobjectchange"/>
        <attribute-type name="onselect" required="false">
            <description>
				JavaScript code for call on select suggestion, after
				update value of target element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onselect"/>
        <attribute-type name="onsubmit" required="false">
            <description>
				JavaScript code for call before submission of ajax event
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onsubmit"/>
        <attribute-type name="param" required="false">
            <description>
				Name the HTTP request parameter with the value of input
				element token. If not set, it be will sent as an input
				element name. In this case, input will perform
				validation and update the value. Default value is
				"inputvalue".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="param"/>
        <attribute-type name="popupClass" required="false">
            <description>
				HTML CSS class attribute of element for pop-up
				suggestion content
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="popupClass"/>
        <attribute-type name="popupStyle" required="false">
            <description>
				HTML CSS style attribute of element for pop-up
				suggestion content
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="popupStyle"/>
        <attribute-type name="process" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, processed at the phases 2-5 in case of
				AjaxRequest caused by this component. Can be single id,
				comma-separated list of Id's, or EL Expression with
				array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="process"/>
        <attribute-type name="reRender" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, rendered in case of AjaxRequest caused by
				this component. Can be single id, comma-separated list
				of Id's, or EL Expression with array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="reRender"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="requestDelay" required="false">
            <description>
				Attribute defines the time (in ms.) that the request
				will be wait in the queue before it is ready to send.
				When the delay time is over, the request will be sent to
				the server or removed if the newest 'similar' request is
				in a queue already
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requestDelay"/>
        <attribute-type name="rowClasses" required="false">
            <description>
				A comma-delimited list of CSS style classes that is
				applied to popup table rows. A space separated list of
				classes may also be specified for any individual row.
				The styles are applied, in turn, to each row in the
				table. For example, if the list has two elements, the
				first style class in the list is applied to the first
				row, the second to the second row, the first to the
				third row, the second to the fourth row, etc. In other
				words, we keep iterating through the list until we reach
				the end, and then we start at the beginning again
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowClasses"/>
        <attribute-type name="rules" required="false">
            <description>
				This attribute specifies which rules will appear between
				cells within a table. The rendering of rules is user
				agent dependent. Possible values:

				* none: No rules. This is the default value. * groups:
				Rules will appear between row groups (see THEAD, TFOOT,
				and TBODY) and column groups (see COLGROUP and COL)
				only. * rows: Rules will appear between rows only. *
				cols: Rules will appear between columns only. * all:
				Rules will appear between all rows and columns
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rules"/>
        <attribute-type name="selectValueClass" required="false">
            <description>
				Name of the CSS class for a selected suggestion entry
				element (table cell)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectValueClass"/>
        <attribute-type name="selectedClass" required="false">
            <description>
				Name of the CSS class for a selected suggestion entry
				element (table row)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectedClass"/>
        <attribute-type name="selfRendered" required="false">
            <description>
				If "true", forces active Ajax region render response
				directly from stored components tree, bypasses page
				processing. Can be used for increase performance. Also,
				must be set to 'true' inside iteration components, such
				as dataTable.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selfRendered"/>
        <attribute-type name="shadowDepth" required="false">
            <description>
				Pop-up shadow depth for suggestion content
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="shadowDepth"/>
        <attribute-type name="shadowOpacity" required="false">
            <description>
				Attribute defines shadow opacity for suggestion content
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="shadowOpacity"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="suggestionAction" required="false">
            <description>
				Method calls an expression to get a collection of
				suggestion data on request. It must have one parameter
				with a type of Object with content of input component
				and must return any type allowed for
				&amp;lt;h:datatable&amp;gt;
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="suggestionAction"/>
        <attribute-type name="summary" required="false">
            <description>
				This attribute provides a summary of the table's purpose
				and structure for user agents rendering to non-visual
				media such as speech and Braille
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="summary"/>
        <attribute-type name="timeout" required="false">
            <description>
				Response waiting time on a particular request. If a
				response is not received during this time, the request
				is aborted
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="timeout"/>
        <attribute-type name="title" required="false">
            <description>
				Advisory title information about markup elements
				generated for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="tokens" required="false">
            <description>
				The list (or single value) of symbols which can be used
				for division chosen of suggestion pop-up values in a
				target element. After input of a symbol from the list
				suggestion pop-up it is caused again
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tokens"/>
        <attribute-type name="usingSuggestObjects" required="false">
            <description>
				if true, a suggested object list will be created and
				will be updated every time when an input value is
				changed. Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="usingSuggestObjects"/>
        <attribute-type name="value" required="false">
            <description>
				The current value of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="var" required="false">
            <description>
				A request-scope attribute via which the data object for
				the current row will be used when iterating
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="var"/>
        <attribute-type name="width" required="true">
            <description>
				Width of the pop-up window in pixels. Default value is
				"200".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
        <attribute-type name="zindex" required="false">
            <description>
				Attribute is similar to the standard HTML attribute and
				can specify window placement relative to the content.
				Default value is "200".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="zindex"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="tab" start-tag="required">
        <description>
        	<![CDATA[The tab component create a single panel within tabPanel.]]>
		</description>
        <attribute-type name="action" required="false">
            <description>
				MethodBinding pointing at the application action to be
				invoked, if this UIComponent is activated by you, during
				the Apply Request Values or Invoke Application phase of
				the request processing lifecycle, depending on the value
				of the immediate property
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="any"/>
            </proposal>
        </attribute-type>
        <attribute type="action"/>
        <attribute-type name="actionListener" required="false">
            <description>
				MethodBinding pointing at method accepting an
				ActionEvent with return type void
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="actionListener"/>
        <attribute-type name="ajaxSingle" required="false">
            <description>
				boolean attribute which provides possibility to limit
				JSF tree processing(decoding, conversion/validation,
				value applying) to the component which send the request
				only
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSingle"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="bypassUpdates" required="false">
            <description>
				If "true", after process validations phase it skips
				updates of model beans on a force render response. It
				can be used for validating components input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bypassUpdates"/>
        <attribute-type name="data" required="false">
            <description>
				Serialized (on default with JSON) data passed on the
				client by a developer on AJAX request. It's accessible
				via "data.foo" syntax
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="data"/>
        <attribute-type name="disabled" required="false">
            <description>Disables a tab in a tab panel</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="disabled"/>
        <attribute-type name="eventsQueue" required="false">
            <description>
				Name of requests queue to avoid send next request before
				complete other from same event. Can be used to reduce
				number of requests of frequently events (key press,
				mouse move etc.)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="eventsQueue"/>
        <attribute-type name="focus" required="false">
            <description>
				id of element to set focus after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="focus"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="ignoreDupResponses" required="false">
            <description>
				Attribute allows to ignore an Ajax Response produced by
				a request if the newest 'similar' request is in a queue
				already. ignoreDupResponses="true" does not cancel the
				request while it is processed on the server, but just
				allows to avoid unnecessary updates on the client side
				if the response isn't actual now
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ignoreDupResponses"/>
        <attribute-type name="immediate" required="false">
            <description>
				True means, that the default ActionListener should be
				executed immediately (i.e. during Apply Request Values
				phase of the request processing lifecycle), rather than
				waiting until the Invoke Application phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="label" required="false">
            <description>
				Text for the actual "tab" in a tab section
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="label"/>
        <attribute-type name="labelWidth" required="false">
            <description>
				Length for the actual "tab" in a tab section defined in
				pixels. If it is not defined, the length is calculated
				basing on a tab label text length
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="labelWidth"/>
        <attribute-type name="limitToList" required="false">
            <description>
				If "true", updates on client side ONLY elements from
				this 'reRender' property. If "false" (default) updates
				all rendered by ajax region components
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="limitToList"/>
        <attribute-type name="name" required="false">
            <description>
				Attribute defines tab name. Default value is "getId()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="name"/>
        <attribute-type name="onbeforedomupdate" required="false">
            <description>
				JavaScript code for call before DOM has been updated on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforedomupdate"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="oncomplete" required="false">
            <description>
				JavaScript code for call after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncomplete"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onlabelclick" required="false">
            <description>
				A JavaScript event handler; a label of the tab is
				clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onlabelclick"/>
        <attribute-type name="onlabeldblclick" required="false">
            <description>
				A JavaScript event handler; a pointer within label is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onlabeldblclick"/>
        <attribute-type name="onlabelkeydown" required="false">
            <description>
				A JavaScript event handler; a key within label is
				pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onlabelkeydown"/>
        <attribute-type name="onlabelkeypress" required="false">
            <description>
				A JavaScript event handler; a key within label is
				pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onlabelkeypress"/>
        <attribute-type name="onlabelkeyup" required="false">
            <description>
				A JavaScript event handler; a key within label is
				released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onlabelkeyup"/>
        <attribute-type name="onlabelmousedown" required="false">
            <description>
				A JavaScript event handler; a pointer within label is
				pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onlabelmousedown"/>
        <attribute-type name="onlabelmousemove" required="false">
            <description>
				A JavaScript event handler; a pointer is moved within
				label
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onlabelmousemove"/>
        <attribute-type name="onlabelmouseup" required="false">
            <description>
				A JavaScript event handler; a pointer within label is
				released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onlabelmouseup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="ontabenter" required="false">
            <description>
				Event must occur on the tab which has been entered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ontabenter"/>
        <attribute-type name="ontableave" required="false">
            <description>
				Event must occurs on the tab which has been left
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ontableave"/>
        <attribute-type name="process" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, processed at the phases 2-5 in case of
				AjaxRequest caused by this component. Can be single id,
				comma-separated list of Id's, or EL Expression with
				array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="process"/>
        <attribute-type name="reRender" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, rendered in case of AjaxRequest caused by
				this component. Can be single id, comma-separated list
				of Id's, or EL Expression with array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="reRender"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="requestDelay" required="false">
            <description>
				Attribute defines the time (in ms.) that the request
				will be wait in the queue before it is ready to send.
				When the delay time is over, the request will be sent to
				the server or removed if the newest 'similar' request is
				in a queue already
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requestDelay"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="switchType" required="false">
            <description>
				Tab switch algorithm. Possible values are "client",
				"server", "ajax", "page".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="switchType"/>
        <attribute-type name="timeout" required="false">
            <description>
				Response waiting time on a particular request. If a
				response is not received during this time, the request
				is aborted
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="timeout"/>
        <attribute-type name="title" required="false">
            <description>
				HTML: An advisory title for this element. Often
				displayed as a tooltip
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="tabPanel" start-tag="required">
        <description>
			<![CDATA[The tabPanel component displays a panel that contains multiple panels with tabs inside.]]>
		</description>
        <attribute-type name="activeTabClass" required="false">
            <description>
				A CSS class to be applied to an active tab
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="activeTabClass"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="contentClass" required="false">
            <description>
				A CSS class for content of a tab panel
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="contentClass"/>
        <attribute-type name="contentStyle" required="false">
            <description>
				A CSS style is for the content of a tab panel
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="contentStyle"/>
        <attribute-type name="converter" required="false">
            <description>
				Id of Converter to be used or reference to a Converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converter"/>
        <attribute-type name="converterMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the converter message,
				replacing any message that comes from the converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converterMessage"/>
        <attribute-type name="dir" required="false">
            <description>
				Direction indication for text that does not inherit
				directionality. Valid values are "LTR" (left-to-right)
				and "RTL" (right-to-left)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dir"/>
        <attribute-type name="disabledTabClass" required="false">
            <description>
				A CSS class to be applied to a disabled tab
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="disabledTabClass"/>
        <attribute-type name="headerAlignment" required="false">
            <description>
				Sets tab headers alignment. It can be "left" or "right".
				Default value is "left".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerAlignment"/>
        <attribute-type name="headerClass" required="false">
            <description>
				A CSS style is for the header of a tab panel.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerClass"/>
        <attribute-type name="headerSpacing" required="false">
            <description>
				Sets tab headers spacing. It should be a valid size unit
				expression. Default value is "1px".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="headerSpacing"/>
        <attribute-type name="height" required="false">
            <description>
				Height of a tab panel defined in pixels or in percents
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="height"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="inactiveTabClass" required="false">
            <description>
				CSS class to be applied to an inactive (but not
				disabled) tab
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="inactiveTabClass"/>
        <attribute-type name="label" required="false">
            <description>
				A localized user presentable name for this component.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="label"/>
        <attribute-type name="lang" required="false">
            <description>
				Code describing the language used in the generated
				markup for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lang"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="ontabchange" required="false">
            <description>
				HTML: a script expression; a tab has been changed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ontabchange"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="required" required="false">
            <description>
				If "true", this component is checked for non-empty input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="required"/>
        <attribute-type name="requiredMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validation message for
				the "required" facility, if the "required" facility is
				used
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requiredMessage"/>
        <attribute-type name="selectedTab" required="false">
            <description>
				Attribute defines name of selected tab
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectedTab"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="switchType" required="false">
            <description>
				Tab switch algorithm: "client", "server"(default),
				"ajax"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="switchType"/>
        <attribute-type name="tabClass" required="false">
            <description>
				A CSS class to be applied to all tabs
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tabClass"/>
        <attribute-type name="title" required="false">
            <description>
				Advisory title information about markup elements
				generated for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="validator" required="false">
            <description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.context.FacesContext"/>
                <param name="paramType" value="javax.faces.component.UIComponent"/>
                <param name="paramType" value="java.lang.Object"/>
            </proposal>
        </attribute-type>
        <attribute type="validator"/>
        <attribute-type name="validatorMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validator message,
				replacing any message that comes from the validator
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="validatorMessage"/>
        <attribute-type name="value" required="false">
            <description>
				The current value of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="valueChangeListener" required="false">
            <description>Listener for value changes</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ValueChangeEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="valueChangeListener"/>
        <attribute-type name="width" required="false">
            <description>
				Width of a tab panel defined in pixels or in percents.
				The default value is 100%
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="toggleControl" start-tag="required">
        <description>
			A link type control for switching betwen togglePanel's
			facets. The Target Panel is specified with the "for"
			attribute. It can be located even inside or outside the
			togglePanel. As the result of switching between facets, the
			previous facet is hidden and the next is shown.
		</description>
        <attribute-type name="accesskey" required="false">
            <description>
				Access key that, when pressed, transfers focus to this
				element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="accesskey"/>
        <attribute-type name="action" required="false">
            <description>
				MethodBinding pointing at the application action to be
				invoked, if this UIComponent is activated by you, during
				the Apply Request Values or Invoke Application phase of
				the request processing lifecycle, depending on the value
				of the immediate property
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="any"/>
            </proposal>
        </attribute-type>
        <attribute type="action"/>
        <attribute-type name="actionListener" required="false">
            <description>
				MethodBinding pointing at method accepting an
				ActionEvent with return type void
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="actionListener"/>
        <attribute-type name="ajaxSingle" required="false">
            <description>
				Boolean attribute which provides possibility to limit
				JSF tree processing(decoding, conversion/validation,
				value applying) to the component which send the request
				only.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSingle"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="bypassUpdates" required="false">
            <description>
				If "true", after process validations phase skip updates
				of model beans an force render response. Can be used for
				validate components input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bypassUpdates"/>
        <attribute-type name="data" required="false">
            <description>
				Serialized (on default with JSON) data passed on the
				client by a developer on AJAX request. It's accessible
				via "data.foo" syntax
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="data"/>
        <attribute-type name="dir" required="false">
            <description>
				Direction indication for text that does not inherit
				directionality. Possible values are "LTR"
				(left-to-right) and "RTL" (right-to-left).
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dir"/>
        <attribute-type name="eventsQueue" required="false">
            <description>
				Name of requests queue to avoid send next request before
				complete other from same event. Can be used to reduce
				number of requests of frequently events (key press,
				mouse move, etc.)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="eventsQueue"/>
        <attribute-type name="focus" required="false">
            <description>
				id of element to set focus after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="focus"/>
        <attribute-type name="for" required="false">
            <description>
				String, which contains id (in the format of a
				UIComponent.findComponent() call) of the target Toggle
				Panel.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="for"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="ignoreDupResponses" required="false">
            <description>
				Attribute allows to ignore an Ajax Response produced by
				a request if the newest 'similar' request is in a queue
				already. ignoreDupResponses="true" does not cancel the
				request while it is processed on the server, but just
				allows to avoid unnecessary updates on the client side
				if the response isn't actual now
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ignoreDupResponses"/>
        <attribute-type name="immediate" required="false">
            <description>
				True means, that the default ActionListener should be
				executed immediately (i.e. during Apply Request Values
				phase of the request processing lifecycle), rather than
				waiting until the Invoke Application phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="lang" required="false">
            <description>
				Code describing the language used in the generated
				markup for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lang"/>
        <attribute-type name="limitToList" required="false">
            <description>
				If "true", updates on client side ONLY elements from
				this 'reRender' property. if "false" (default) updates
				all rendered by ajax region components
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="limitToList"/>
        <attribute-type name="onbeforedomupdate" required="false">
            <description>
				JavaScript code for call before DOM has been updated on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforedomupdate"/>
        <attribute-type name="onblur" required="false">
            <description>
				JavaScript code executed when this element loses focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onblur"/>
        <attribute-type name="onclick" required="false">
            <description>
				JavaScript code executed when a pointer button is
				clicked over this element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="oncomplete" required="false">
            <description>
				JavaScript code for call after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncomplete"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				JavaScript code executed when a pointer button is double
				clicked over this element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onfocus" required="false">
            <description>
				JavaScript code executed when this element receives
				focus
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onfocus"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				JavaScript code executed when a key is pressed down over
				this element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				JavaScript code executed when a key is pressed and
				released over this element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				JavaScript code executed when a key is released over
				this element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				JavaScript code executed when a pointer button is
				pressed down over this element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				JavaScript code executed when a pointer button is moved
				within this element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				JavaScript code executed when a pointer button is moved
				away from this element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				JavaScript code executed when a pointer button is moved
				onto this element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				JavaScript code executed when a pointer button is
				released over this element
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="panelId" required="false">
            <description>
				Attribute defines Id for corresponding panel
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="panelId"/>
        <attribute-type name="process" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, processed at the phases 2-5 in case of
				AjaxRequest caused by this component. Can be single id,
				comma-separated list of Id's, or EL Expression with
				array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="process"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="requestDelay" required="false">
            <description>
				Attribute defines the time (in ms.) that the request
				will be wait in the queue before it is ready to send.
				When the delay time is over, the request will be sent to
				the server or removed if the newest 'similar' request is
				in a queue already
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requestDelay"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Space-separated list of CSS style class(es) to be
				applied when this element is rendered. This value must
				be passed through as the "class" attribute on generated
				markup
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="switchToState" required="false">
            <description>
				Contains one of the facets names where target
				togglePanel is switched to
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="switchToState"/>
        <attribute-type name="tabindex" required="false">
            <description>
				Position of this element in the tabbing order for the
				current document. This value must be an integer between
				0 and 32767
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="tabindex"/>
        <attribute-type name="timeout" required="false">
            <description>
				Response waiting time on a particular request. If a
				response is not received during this time, the request
				is aborted
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="timeout"/>
        <attribute-type name="title" required="false">
            <description>
				Advisory title information about markup elements
				generated for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="title"/>
        <attribute-type name="value" required="false">
            <description>
				Initial value to set when rendered for the first time
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="togglePanel" start-tag="required">
        <description>
			A wrapper component with named facets. Every facet is shown
			after activation corresponding toggleControl(the other is
			hidden).
		</description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="converter" required="false">
            <description>
				Id of Converter to be used or reference to a Converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converter"/>
        <attribute-type name="converterMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the converter message,
				replacing any message that comes from the converter
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="converterMessage"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (that is, during
				Apply Request Values phase), rather than waiting until a
				Process Validations phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="initialState" required="false">
            <description>
				It contains a name of the first active facet
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="initialState"/>
        <attribute-type name="label" required="false">
            <description>
				A localized user presentable name for this component.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="label"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="required" required="false">
            <description>
				If "true", this component is checked for non-empty input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="required"/>
        <attribute-type name="requiredMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validation message for
				the "required" facility, if the "required" facility is
				used
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requiredMessage"/>
        <attribute-type name="stateOrder" required="false">
            <description>
				Names of the facets in the switching order. If
				ToggleControl doesn't contain information about a next
				facet to be shown it is switched corresponding to this
				attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="stateOrder"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="switchType" required="false">
            <description>
				Facets switch algorithm: "client", "server"(default),
				"ajax".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="switchType"/>
        <attribute-type name="validator" required="false">
            <description>
				MethodBinding pointing at a method that is called during
				Process Validations phase of the request processing
				lifecycle, to validate the current value of this
				component
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.context.FacesContext"/>
                <param name="paramType" value="javax.faces.component.UIComponent"/>
                <param name="paramType" value="java.lang.Object"/>
            </proposal>
        </attribute-type>
        <attribute type="validator"/>
        <attribute-type name="validatorMessage" required="false">
            <description>
				A ValueExpression enabled attribute that, if present,
				will be used as the text of the validator message,
				replacing any message that comes from the validator
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="validatorMessage"/>
        <attribute-type name="value" required="false">
            <description>
				The current value of this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="valueChangeListener" required="false">
            <description>Listener for value changes</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ValueChangeEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="valueChangeListener"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="toolBar" start-tag="required">
        <description>
			A horizontal bar with items on it. If you want to use it as
			a standard top tool bar, point to each item with a ch:menu
			"for" attribute to link the appropriate drop-down menu with
			the item id on a tool bar. "toolBar" accepts any JSF
			components as children. They appear from left to right in
			the definition order. The children are separated from each
			other basing on the value of the "itemSeparator" attribute.
			If you want to put the items along the right side for a menu
			bar, you can use the "toolBarGroup" component as a wrapper
			and define the "location" attribute there. The items inside
			the group can have their own separator. See the
			"toolBarGroup" component description for details.
		</description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="contentClass" required="false">
            <description>
				A CSS style is to be applied to each element of tool bar
				content. Use this style, for example, to setup
				parameters of the font.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="contentClass"/>
        <attribute-type name="contentStyle" required="false">
            <description>
				A CSS style is to be applied to each element of tool bar
				content.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="contentStyle"/>
        <attribute-type name="height" required="false">
            <description>
				A height of a bar in pixels. If a height is not defined,
				a bar height depends of the "headerFontSize" skin
				parameter.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="height"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="itemSeparator" required="false">
            <description>
				A separator between items on a bar. Possible values are
				"none", "line", "square", "disc" and "grid". Default
				value is "none".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="itemSeparator"/>
        <attribute-type name="onitemclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
				on an item
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onitemclick"/>
        <attribute-type name="onitemdblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked on an item
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onitemdblclick"/>
        <attribute-type name="onitemkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down on an
				item
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onitemkeydown"/>
        <attribute-type name="onitemkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
				on an item
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onitemkeypress"/>
        <attribute-type name="onitemkeyup" required="false">
            <description>
				HTML: a script expression; a key is released on an item
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onitemkeyup"/>
        <attribute-type name="onitemmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down on an item
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onitemmousedown"/>
        <attribute-type name="onitemmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved on an item
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onitemmousemove"/>
        <attribute-type name="onitemmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away from
				an item
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onitemmouseout"/>
        <attribute-type name="onitemmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto an
				item
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onitemmouseover"/>
        <attribute-type name="onitemmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released on
				an item
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onitemmouseup"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="separatorClass" required="false">
            <description>
				A CSS class to be applied to tool bar separators.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="separatorClass"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="width" required="false">
            <description>
				A width of a bar that can be defined in pixels or as
				percentage. Default value is 100%.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="width"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="toolBarGroup" start-tag="required">
        <description>
			A group of items inside a tool bar. The group item is
			separated basing on the "itemSeparator" attribute. Location
			of a group on a tool bar is set up with the "location"
			attribute.
		</description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="itemSeparator" required="false">
            <description>
				"A separator for the items in a group. Possible values
				are "none", "line", "square", "disc" and "grid" Default
				value is "none".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="itemSeparator"/>
        <attribute-type name="location" required="false">
            <description>
				"A location of a group on a tool bar. Possible values
				are "left" and "right". Default value is "left".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="location"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="separatorClass" required="false">
            <description>
				"A CSS class to be applied to tool bar group
				separators."
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="separatorClass"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="toolTip" start-tag="required">
        <description>
        	<![CDATA[The toolTip component is used for creation of event-triggered non modal popup, that contains information regarding the page element, that event was applied to.]]>
        </description>
        <attribute-type name="attached" required="false">
            <description>
				If the value of the "attached" attribute is true, a
				component is attached to the parent component; if false,
				component does not listen to activating browser events,
				but could be activated externally. Default value is
				"true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="attached"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="direction" required="false">
            <description>
				Defines direction of the popup list to appear. Possible
				values are "top-right", "top-left", "bottom-right",
				"bottom-left", "auto". Default value is "bottom-right".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="direction"/>
        <attribute-type name="disabled" required="false">
            <description>
				If false the components is rendered on the client but
				JavaScript for calling disabled. Default value is
				"false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="disabled"/>
        <attribute-type name="event" required="false">
            <description>
				DEPRECATED. Use showEvent instead. Default value is
				"mouseover".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="event"/>
        <attribute-type name="followMouse" required="false">
            <description>
				If 'true' tooltip should follow the mouse while it moves
				over the parent element. Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="followMouse"/>
        <attribute-type name="for" required="false">
            <description>Id of the target component.</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="for"/>
        <attribute-type name="hideDelay" required="false">
            <description>
				Delay in milliseconds before tooltip will be hidden.
				Default value is "0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="hideDelay"/>
        <attribute-type name="hideEvent" required="false">
            <description>
				Event that triggers the tooltip disappearance
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="hideEvent"/>
        <attribute-type name="horizontalOffset" required="false">
            <description>
				Sets the horizontal offset between pop-up list and mouse
				pointer. Default value is "10".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="horizontalOffset"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="layout" required="false">
            <description>
				Block/inline mode flag. Possible value are: "inline" or
				"block". Default value is "inline". Tooltip will contain
				div/span elements respectively.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="layout"/>
        <attribute-type name="mode" required="false">
            <description>
				controls the way of data loading to tooltip and should
				have following values client (default), ajax
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="mode"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="oncomplete" required="false">
            <description>
				JavaScript code for call after the tooltip shown
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncomplete"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onhide" required="false">
            <description>
				JavaScript code for call after the tooltip hidden
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onhide"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="onshow" required="false">
            <description>
				JavaScript code for call after the tooltip called (some
				element overed) but before its requesting
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onshow"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="showDelay" required="false">
            <description>
				Delay in milliseconds before tooltip will be displayed.
				Default value is "0".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showDelay"/>
        <attribute-type name="showEvent" required="false">
            <description>
				Event that triggers the tooltip. Default value is
				"onmouseover".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showEvent"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="value" required="false">
            <description>Label on the tooltip</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="verticalOffset" required="false">
            <description>
				Sets the vertical offset between pop-up list and mouse
				pointer. Default value is "10".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="verticalOffset"/>
        <attribute-type name="zorder" required="false">
            <description>
				The same as CSS z-index for toolTip. Default value is
				"99".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="zorder"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="tree" start-tag="required">
        <description>
        	<![CDATA[The tree component is designed for hierarchical data presentation and is applied for building a tree structure with a drag-and-drop capability.]]>
        </description>
        <attribute-type name="acceptCursors" required="false">
            <description>
				List of comma separated cursors that indicates when
				acceptable draggable over dropzone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="acceptCursors"/>
        <attribute-type name="acceptedTypes" required="false">
            <description>
				A list of drag zones types, which elements are accepted
				by a drop zone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="acceptedTypes"/>
        <attribute-type name="adviseNodeOpened" required="false">
            <description>
				MethodBinding pointing at a method accepting an
				org.richfaces.component.UITree with return of
				java.lang.Boolean type. If returned value is:
				java.lang.Boolean. TRUE, a particular treeNode is
				expanded; java.lang.Boolean.FALSE, a particular treeNode
				is collapsed; null, a particular treeNode saves the
				current state
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="adviseNodeOpened"/>
        <attribute-type name="adviseNodeSelected" required="false">
            <description>
				MethodBinding pointing at a method accepting an
				org.richfaces.component.UITree with return of
				java.lang.Boolean type. If returned value is:
				java.lang.Boolean. TRUE, a particular treeNode is
				selected; java.lang.Boolean.FALSE, a particular treeNode
				is unselected; null, a particular treeNode saves the
				current state
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="adviseNodeSelected"/>
        <attribute-type name="ajaxSingle" required="false">
            <description>
				boolean attribute which provides possibility to limit
				JSF tree processing(decoding, conversion/validation,
				value applying) to the component which send the request
				only
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSingle"/>
        <attribute-type name="ajaxSubmitSelection" required="false">
            <description>
				If "true", an Ajax request to be submit when selecting
				node. Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSubmitSelection"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="bypassUpdates" required="false">
            <description>
				If "true", after process validations phase it skips
				updates of model beans on a force render response. It
				can be used for validating components input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bypassUpdates"/>
        <attribute-type name="changeExpandListener" required="false">
            <description>
				Listener called on expand/collapse event on the node
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="changeExpandListener"/>
        <attribute-type name="componentState" required="false">
            <description>
				It defines EL-binding for a component state for saving
				or redefinition
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="componentState"/>
        <attribute-type name="cursorTypeMapping" required="false">
            <description>
				Mapping between drop types and acceptable cursors
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cursorTypeMapping"/>
        <attribute-type name="data" required="false">
            <description>
				Serialized (on default with JSON) data passed on the
				client by a developer on AJAX request. It's accessible
				via "data.foo" syntax
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="data"/>
        <attribute-type name="dragIndicator" required="false">
            <description>
				Id of a component that is used as drag pointer during
				the drag operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dragIndicator"/>
        <attribute-type name="dragListener" required="false">
            <description>
				MethodBinding representing an action listener method
				that will be notified after drag operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dragListener"/>
        <attribute-type name="dragType" required="false">
            <description>
				A drag zone type that is used for zone definition, which
				elements can be accepted by a drop zone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dragType"/>
        <attribute-type name="dragValue" required="false">
            <description>
				Data to be sent to the drop zone after a drop event.
				Default value is "getRowKey()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dragValue"/>
        <attribute-type name="dropListener" required="false">
            <description>
				MethodBinding representing an action listener method
				that will be notified after drop operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dropListener"/>
        <attribute-type name="dropValue" required="false">
            <description>
				Data to be processed after a drop event. Default value
				is "getRowKey()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dropValue"/>
        <attribute-type name="eventsQueue" required="false">
            <description>
				Name of requests queue to avoid send next request before
				complete other from same event. Can be used to reduce
				number of requests of frequently events (key press,
				mouse move etc.)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="eventsQueue"/>
        <attribute-type name="focus" required="false">
            <description>
				id of element to set focus after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="focus"/>
        <attribute-type name="grabCursors" required="false">
            <description>
				List of comma separated cursors that indicates when you
				can grab and drag an object
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="grabCursors"/>
        <attribute-type name="grabbingCursors" required="false">
            <description>
				List of comma separated cursors that indicates when you
				has grabbed something
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="grabbingCursors"/>
        <attribute-type name="highlightedClass" required="false">
            <description>
				Corresponds to the HTML class attribute. Applied to
				highlighted node
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="highlightedClass"/>
        <attribute-type name="icon" required="false">
            <description>The icon for node</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="icon"/>
        <attribute-type name="iconCollapsed" required="false">
            <description>The icon for collapsed node</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconCollapsed"/>
        <attribute-type name="iconExpanded" required="false">
            <description>The icon for expanded node</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconExpanded"/>
        <attribute-type name="iconLeaf" required="false">
            <description>An icon for component leaves</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconLeaf"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="ignoreDupResponses" required="false">
            <description>
				Attribute allows to ignore an Ajax Response produced by
				a request if the newest 'similar' request is in a queue
				already. ignoreDupResponses="true" does not cancel the
				request while it is processed on the server, but just
				allows to avoid unnecessary updates on the client side
				if the response isn't actual now
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ignoreDupResponses"/>
        <attribute-type name="immediate" required="false">
            <description>
				A flag indicating that this component value must be
				converted and validated immediately (during an Apply
				Request Values phase), rather than waiting until a
				Process Validations phase
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="immediate"/>
        <attribute-type name="limitToList" required="false">
            <description>
				If "true", updates on client side ONLY elements from
				this 'reRender' property. If "false" (default) updates
				all rendered by ajax region components
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="limitToList"/>
        <attribute-type name="nodeFace" required="false">
            <description>Node face facet name</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="nodeFace"/>
        <attribute-type name="nodeSelectListener" required="false">
            <description>
				MethodBinding representing an action listener method
				that will be notified after selection of node.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="nodeSelectListener"/>
        <attribute-type name="onbeforedomupdate" required="false">
            <description>
				JavaScript code for call before DOM has been updated on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforedomupdate"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="oncollapse" required="false">
            <description>
				HTML: script expression to invoke on node collapsing
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncollapse"/>
        <attribute-type name="oncomplete" required="false">
            <description>
				JavaScript code for call after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncomplete"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="ondragend" required="false">
            <description>
				A JavaScript event handler called after a drag operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondragend"/>
        <attribute-type name="ondragenter" required="false">
            <description>
				A JavaScript event handler called on enter draggable
				object to zone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondragenter"/>
        <attribute-type name="ondragexit" required="false">
            <description>
				A JavaScript event handler called after a drag object
				leaves zone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondragexit"/>
        <attribute-type name="ondragstart" required="false">
            <description>
				A JavaScript event handler called before drag operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondragstart"/>
        <attribute-type name="ondrop" required="false">
            <description>
				It's an event that is called when something is dropped
				on a drop zone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondrop"/>
        <attribute-type name="ondropend" required="false">
            <description>
				A JavaScript handler for event fired on a drop even the
				drop for a given type is not available
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondropend"/>
        <attribute-type name="ondropout" required="false">
            <description>
				A JavaScript event handler called after a out operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondropout"/>
        <attribute-type name="ondropover" required="false">
            <description>
				A JavaScript event handler called after a drop operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondropover"/>
        <attribute-type name="onexpand" required="false">
            <description>
				HTML: script expression to invoke on node expansion
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onexpand"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="onselected" required="false">
            <description>
				HTML: script expression to invoke on node selection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onselected"/>
        <attribute-type name="preserveDataInRequest" required="false">
            <description>
				If "true", data is preserved in a request. Default value
				is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="preserveDataInRequest"/>
        <attribute-type name="preserveModel" required="false">
            <description>
				Possible values are "state", "request", "none". Default
				value is "request"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="preserveModel"/>
        <attribute-type name="process" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, processed at the phases 2-5 in case of
				AjaxRequest caused by this component. Can be single id,
				comma-separated list of Id's, or EL Expression with
				array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="process"/>
        <attribute-type name="reRender" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, rendered in case of AjaxRequest caused by
				this component. Can be single id, comma-separated list
				of Id's, or EL Expression with array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="reRender"/>
        <attribute-type name="rejectCursors" required="false">
            <description>
				List of comma separated cursors that indicates when
				rejectable draggable over dropzone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rejectCursors"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="requestDelay" required="false">
            <description>
				Attribute defines the time (in ms.) that the request
				will be wait in the queue before it is ready to send.
				When the delay time is over, the request will be sent to
				the server or removed if the newest 'similar' request is
				in a queue already
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requestDelay"/>
        <attribute-type name="rowKeyVar" required="false">
            <description>
				The attribute provides access to a row key in a Request
				scope
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rowKeyVar"/>
        <attribute-type name="selectedClass" required="false">
            <description>
				Corresponds to the HTML class attribute. Applied to
				selected node
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectedClass"/>
        <attribute-type name="showConnectingLines" required="false">
            <description>
				If "true", connecting lines are show
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="showConnectingLines"/>
        <attribute-type name="stateAdvisor" required="false">
            <description>
				ValueBinding pointing at instance of class implementing
				org.richfaces.component.state.TreeStateAdvisor
				interface.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="stateAdvisor"/>
        <attribute-type name="stateVar" required="false">
            <description>
				The attribute provides access to a component state on
				the client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="stateVar"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="switchType" required="false">
            <description>
				Tree switch algorithm: "client", "server", "ajax"
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="switchType"/>
        <attribute-type name="timeout" required="false">
            <description>
				Response waiting time on a particular request. If a
				response is not received during this time, the request
				is aborted
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="timeout"/>
        <attribute-type name="toggleOnClick" required="false">
            <description>
				If "false" do not toggle node state on click. If "true",
				than node will be toggles on click on ether node
				content, or node icon. Default value is "false".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="toggleOnClick"/>
        <attribute-type name="treeNodeVar" required="false">
            <description>
				The attribute provides access to a TreeNode instance in
				a Request scope
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="treeNodeVar"/>
        <attribute-type name="typeMapping" required="false">
            <description>
				Map between a draggable type and an indicator name on
				zone. it's defined with the pair (drag type:indicator
				name))
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="typeMapping"/>
        <attribute-type name="value" required="false">
            <description>
				The current value for this component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="value"/>
        <attribute-type name="var" required="false">
            <description>
				Attribute contains a name providing an access to data
				defined with value
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="var"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="treeNode" start-tag="required">
        <description>
        	<![CDATA[The treeNode component is designed for creating sets of tree elements within a tree component.]]>
        </description>
        <attribute-type name="acceptCursors" required="false">
            <description>
				List of comma separated cursors that indicates when
				acceptable draggable over dropzone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="acceptCursors"/>
        <attribute-type name="acceptedTypes" required="false">
            <description>
				A list of drag zones types, which elements are accepted
				by a drop zone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="acceptedTypes"/>
        <attribute-type name="ajaxSingle" required="false">
            <description>
				boolean attribute which provides possibility to limit
				JSF tree processing(decoding, conversion/validation,
				value applying) to the component which send the request
				only
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSingle"/>
        <attribute-type name="ajaxSubmitSelection" required="false">
            <description>
				An algorithm of AJAX request submission. Possible values
				are "inherit", "true", "false". Default value is
				"inherit".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ajaxSubmitSelection"/>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="bypassUpdates" required="false">
            <description>
				If "true", after process validations phase it skips
				updates of model beans on a force render response. It
				can be used for validating components input
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="bypassUpdates"/>
        <attribute-type name="changeExpandListener" required="false">
            <description>
				Listener called on expand/collapse event on the node
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="changeExpandListener"/>
        <attribute-type name="cursorTypeMapping" required="false">
            <description>
				Mapping between drop types and acceptable cursors
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="cursorTypeMapping"/>
        <attribute-type name="data" required="false">
            <description>
				Serialized (on default with JSON) data passed on the
				client by a developer on AJAX request. It's accessible
				via "data.foo" syntax
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="data"/>
        <attribute-type name="dragIndicator" required="false">
            <description>
				Id of a component that is used as drag pointer during
				the drag operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dragIndicator"/>
        <attribute-type name="dragListener" required="false">
            <description>
				MethodBinding representing an action listener method
				that will be notified after drag operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dragListener"/>
        <attribute-type name="dragType" required="false">
            <description>
				A drag zone type that is used for zone definition, which
				elements can be accepted by a drop zone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dragType"/>
        <attribute-type name="dragValue" required="false">
            <description>
				Data to be sent to the drop zone after a drop event.
				Default value is "getUITree().getDragValue()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dragValue"/>
        <attribute-type name="dropListener" required="false">
            <description>
				MethodBinding representing an action listener method
				that will be notified after drop operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dropListener"/>
        <attribute-type name="dropValue" required="false">
            <description>
				Data to be processed after a drop event. Default value
				is "getUITree().getDropValue()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dropValue"/>
        <attribute-type name="eventsQueue" required="false">
            <description>
				Name of requests queue to avoid send next request before
				complete other from same event. Can be used to reduce
				number of requests of frequently events (key press,
				mouse move etc.)
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="eventsQueue"/>
        <attribute-type name="focus" required="false">
            <description>
				id of element to set focus after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="focus"/>
        <attribute-type name="grabCursors" required="false">
            <description>
				List of comma separated cursors that indicates when you
				can grab and drag an object
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="grabCursors"/>
        <attribute-type name="grabbingCursors" required="false">
            <description>
				List of comma separated cursors that indicates when you
				has grabbed something
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="grabbingCursors"/>
        <attribute-type name="highlightedClass" required="false">
            <description>
				Corresponds to the HTML class attribute. Applied to
				highlighted node
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="highlightedClass"/>
        <attribute-type name="icon" required="false">
            <description>The icon for node</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="icon"/>
        <attribute-type name="iconCollapsed" required="false">
            <description>The icon for collapsed node</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconCollapsed"/>
        <attribute-type name="iconExpanded" required="false">
            <description>The icon for expanded node</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconExpanded"/>
        <attribute-type name="iconLeaf" required="false">
            <description>An icon for component leaves</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="iconLeaf"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="ignoreDupResponses" required="false">
            <description>
				Attribute allows to ignore an Ajax Response produced by
				a request if the newest 'similar' request is in a queue
				already. ignoreDupResponses="true" does not cancel the
				request while it is processed on the server, but just
				allows to avoid unnecessary updates on the client side
				if the response isn't actual now
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ignoreDupResponses"/>
        <attribute-type name="limitToList" required="false">
            <description>
				If "true", updates on client side ONLY elements from
				this 'reRender' property. If "false" (default) updates
				all rendered by ajax region components
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="limitToList"/>
        <attribute-type name="nodeClass" required="false">
            <description>Name of node CSS class</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="nodeClass"/>
        <attribute-type name="nodeSelectListener" required="false">
            <description>
				MethodBinding representing an action listener method
				that will be notified after selection of node.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="beanMethodBySignature">
                <param name="returnType" value="void"/>
                <param name="paramType" value="javax.faces.event.ActionEvent"/>
            </proposal>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="nodeSelectListener"/>
        <attribute-type name="onbeforedomupdate" required="false">
            <description>
				JavaScript code for call before DOM has been updated on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onbeforedomupdate"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="oncollapse" required="false">
            <description>
				HTML: script expression to invoke on node collapsing
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncollapse"/>
        <attribute-type name="oncomplete" required="false">
            <description>
				JavaScript code for call after request completed on
				client side
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncomplete"/>
        <attribute-type name="oncontextmenu" required="false">
            <description>
				JavaScript handler to be called on right click.
				Returning false prevents default browser context menu
				from being displayed
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="oncontextmenu"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="ondragend" required="false">
            <description>
				A JavaScript event handler called after a drag
				operation. Default value is "getDefaultOndragend()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondragend"/>
        <attribute-type name="ondragenter" required="false">
            <description>
				A JavaScript event handler called on enter draggable
				object to zone. Default value is
				"getDefaultOndragexit()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondragenter"/>
        <attribute-type name="ondragexit" required="false">
            <description>
				A JavaScript event handler called after a drag object
				leaves zone. Default value is "getDefaultOndragexit()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondragexit"/>
        <attribute-type name="ondragstart" required="false">
            <description>
				A JavaScript event handler called before drag object.
				Default value is "getDefaultOndragstart()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondragstart"/>
        <attribute-type name="ondrop" required="false">
            <description>
				It's an event that is called when something is dropped
				on a drop zone. Default value is "getDefaultOndrop()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondrop"/>
        <attribute-type name="ondropend" required="false">
            <description>
				A JavaScript handler for event fired on a drop even the
				drop for a given type is not available. Default value is
				"getDefaultOndropend()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondropend"/>
        <attribute-type name="ondropout" required="false">
            <description>
				A JavaScript event handler called after a out operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondropout"/>
        <attribute-type name="ondropover" required="false">
            <description>
				A JavaScript event handler called after a drop operation
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondropover"/>
        <attribute-type name="onexpand" required="false">
            <description>
				HTML: script expression to invoke on node expansion
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onexpand"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="onselected" required="false">
            <description>
				HTML: script expression to invoke on node selection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onselected"/>
        <attribute-type name="process" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, processed at the phases 2-5 in case of
				AjaxRequest caused by this component. Can be single id,
				comma-separated list of Id's, or EL Expression with
				array or Collection
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="process"/>
        <attribute-type name="reRender" required="false">
            <description>
				Id['s] (in format of call UIComponent.findComponent())
				of components, rendered in case of AjaxRequest caused by
				this component. Can be single id, comma-separated list
				of Id's, or EL Expression with array or Collection.
				Default value is "getDefaultReRender()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="reRender"/>
        <attribute-type name="rejectCursors" required="false">
            <description>
				List of comma separated cursors that indicates when
				rejectable draggable over dropzone
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="rejectCursors"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="requestDelay" required="false">
            <description>
				Attribute defines the time (in ms.) that the request
				will be wait in the queue before it is ready to send.
				When the delay time is over, the request will be sent to
				the server or removed if the newest 'similar' request is
				in a queue already
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="requestDelay"/>
        <attribute-type name="selectedClass" required="false">
            <description>
				Corresponds to the HTML class attribute. Applied to
				selected node
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="selectedClass"/>
        <attribute-type name="status" required="false">
            <description>
				ID (in format of call UIComponent.findComponent()) of
				Request status component
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="status"/>
        <attribute-type name="timeout" required="false">
            <description>
				Gets timeout in ms. Default value is
				"getDefaultTimeout()".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="timeout"/>
        <attribute-type name="type" required="false">
            <description>A node type</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="type"/>
        <attribute-type name="typeMapping" required="false">
            <description>
				Map between a draggable type and an indicator name on
				zone. it's defined with the pair (drag type:indicator
				name))
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="typeMapping"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="treeNodesAdaptor" start-tag="required">
        <description>
        	<![CDATA[The treeNodesAdaptor provides the possibility to define data models and create representations for them.]]>
        </description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="includedNode" required="false">
            <description>
				This boolean expression is used to define which elements
				are processed. Default value is "true".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="includedNode"/>
        <attribute-type name="nodes" required="false">
            <description>
				Defines collection to use at the other (non-top) levels
				of iteration
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="nodes"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="var" required="false">
            <description>
				A request-scope attribute via which the data object for
				the current collection element will be used when
				iterating
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="var"/>
    </element-type>
    <element-type body-content="allowed" content="mixed"
        end-tag="required" name="virtualEarth" start-tag="required">
        <description>
			It presents the google map in JSF applications
		</description>
        <attribute-type name="binding" required="false">
            <description>
				The attribute takes a value-binding expression for a
				component property of a backing bean
			</description>
            <proposal type="jsfVariables"/>
            <proposal type="beanProperty">
                <param name="type" value="javax.faces.component.UIComponent"/>
            </proposal>
        </attribute-type>
        <attribute type="binding"/>
        <attribute-type name="dashboardSize" required="false">
            <description>
				Initial map type. The possible values are
				Normal,Small,Tiny. Default value is "Normal".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="dashboardSize"/>
        <attribute-type name="id" required="false">
            <description>
				Every component may have a unique id that is
				automatically created if omitted
			</description>
        </attribute-type>
        <attribute type="id"/>
        <attribute-type name="lat" required="false">
            <description>
				Initial latitude coordinate in degrees, as a number
				between -90 and +90. Default value is "37.9721046".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lat"/>
        <attribute-type name="lng" required="false">
            <description>
				Initial longitude coordinate in degrees, as a number
				between -180 and +180. Default value is
				"-122.04248428346".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="lng"/>
        <attribute-type name="mapStyle" required="false">
            <description>
				Navigation control size. Possible values are "Road",
				"Aerial", "Hybrid", "Birdseye". Default value is Road
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="mapStyle"/>
        <attribute-type name="onLoadMap" required="false">
            <description>
				JavaScript code invoked just after the Virtual Earth
				object is initiated.
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onLoadMap"/>
        <attribute-type name="onclick" required="false">
            <description>
				HTML: a script expression; a pointer button is clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onclick"/>
        <attribute-type name="ondblclick" required="false">
            <description>
				HTML: a script expression; a pointer button is
				double-clicked
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="ondblclick"/>
        <attribute-type name="onkeydown" required="false">
            <description>
				HTML: a script expression; a key is pressed down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeydown"/>
        <attribute-type name="onkeypress" required="false">
            <description>
				HTML: a script expression; a key is pressed and released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeypress"/>
        <attribute-type name="onkeyup" required="false">
            <description>
				HTML: a script expression; a key is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onkeyup"/>
        <attribute-type name="onmousedown" required="false">
            <description>
				HTML: script expression; a pointer button is pressed
				down
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousedown"/>
        <attribute-type name="onmousemove" required="false">
            <description>
				HTML: a script expression; a pointer is moved within
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmousemove"/>
        <attribute-type name="onmouseout" required="false">
            <description>
				HTML: a script expression; a pointer is moved away
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseout"/>
        <attribute-type name="onmouseover" required="false">
            <description>
				HTML: a script expression; a pointer is moved onto
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseover"/>
        <attribute-type name="onmouseup" required="false">
            <description>
				HTML: script expression; a pointer button is released
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="onmouseup"/>
        <attribute-type name="rendered" required="false">
            <description>
				If "false", this component is not rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
            <proposal type="enumeration">
                <param value="true"/>
                <param value="false"/>
            </proposal>
        </attribute-type>
        <attribute type="rendered"/>
        <attribute-type name="style" required="false">
            <description>
				CSS style(s) is/are to be applied when this component is
				rendered
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="style"/>
        <attribute-type name="styleClass" required="false">
            <description>
				Corresponds to the HTML class attribute
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="styleClass"/>
        <attribute-type name="var" required="false">
            <description>
				The JavaScript variable that is used to access the
				Virtual Earth API. If you have more than one Virtual
				Earth components on the same page, use individual key
				for each of them. Default value name is "map".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="var"/>
        <attribute-type name="version" required="false">
            <description>
				Virtual earth version, Default value is "6".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="version"/>
        <attribute-type name="zoom" required="false">
            <description>
				Initial zoom level as a number between 1 and 18. Default
				value is "17".
			</description>
            <proposal type="beanProperty"/>
            <proposal type="bundleProperty"/>
            <proposal type="jsfVariables"/>
        </attribute-type>
        <attribute type="zoom"/>
    </element-type>
</schema>