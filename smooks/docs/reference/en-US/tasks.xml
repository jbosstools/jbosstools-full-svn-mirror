<?xml version="1.0" encoding="UTF-8"?>
<chapter id="process_page">
    <?dbhtml filename="tasks.html"?>
    <chapterinfo>
        <keywordset>
            <keyword>JBoss Tools</keyword>
            <keyword>Smooks</keyword>
            <keyword>JBDS</keyword>
        </keywordset>
    </chapterinfo>
    <title>Tasks</title>
    <para>This chapter describes the main tasks that can be performed with Smooks tools.
        In this chapter we use the example that can be downloaded from
        <ulink url="http://anonsvn.jboss.org/repos/jbosstools/trunk/smooks/docs/reference/xml-to-java.zip">
            here</ulink>. </para>
    <section id="config_file_wizzard">
        <title>New Smooks Configuration File Creation</title>
        <para>
        	Select the  project where you want to create the new Smooks Configuration File and right-click on it. Select <menuchoice><guimenuitem>New</guimenuitem><guimenuitem>Other</guimenuitem><guimenuitem>Smooks</guimenuitem><guimenuitem>Smooks Configuration File</guimenuitem></menuchoice>. Then click the <guibutton>Next</guibutton> button.
        </para>
        <figure>
            <title>Selecting Smooks Configuration File Wizard</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/quick_start/quick_start1.png" scale="90"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>
        	Select the <emphasis><property>src</property></emphasis> folder to be the files container, and type the name <filename>smooks-config.xml</filename>. Click the <guibutton>Next</guibutton> button.
        </para>
        <figure>
            <title>Choosing the configuration file container and the file name</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/quick_start/quick_start2.png" scale="90"/>
                </imageobject>
            </mediaobject>
        </figure>
       
        </section>
    <section>
        <title>Input Task Configuring</title>
        <para> 
            Configuring an <property>Input task</property> is mandatory step when creating a smooks project. You can configure it on the Process page of the editor: look for the "Input Task" in the Process Map at the top of the page.
        </para>
        <figure>
            <title>Input Task Configuring</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/process_page/process1.png" scale="90"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Select it and you will see all the properties to set for the Input reader of your Smooks configuration.
            "Input type" corresponds to the type of data that you will be working with. 
            For example, to work with incoming CSV (Comma-separated Values) data, you would specify "CSV" in the drop-down list.
            Each reader type has slightly different configuration details that must be set in the "Input configuration" area.
            For instance, the CSV reader requires you to specify details such as the encoding, quote character, separator character, and the list of incoming fields. 
            The EDI reader requires the encoding and the path to the Mapping Model describing the incoming data.            
            In the <emphasis>Input data</emphasis> section, you can specify some sample data that conforms to your reader configuration. 
        </para>
        
        <para>
            Once you've specified your reader configuration and sample data, you can see the input model rendered in a tree form in the <emphasis>Input model</emphasis> section.
            In the picture below you can see the correct configuration of an XML input task where <emphasis><property>input-message.xml</property></emphasis> is set as an input data file.
        </para>
        <figure>
            <title>Input Task Configuring</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/process_page/process2.png" scale="90"/>
                </imageobject>
            </mediaobject>
        </figure>
    </section>
    <section>
        <title>"Java Mapping" or "Apply Template"?</title>
        
        <para>
        	Though there are many options in Smooks regarding what you can do with input data, such as transformation, routing, and persistence, this version of the Smooks Configuration Editor focuses only on mapping to java and applying templates to create different output formats. If you have a set of Java classes you want to use the incoming data for, you can use the "Java Mapping" task to specify those classes and use drag and drop to map between the input model generated by the reader and elements in the output model. Or if you simply want to transform your output to one or more formats, you can use the <guilabel>Apply Template</guilabel> task to map it to a CSV file, XML or XSD file (with other formats being provided in the future).
            <note><title>Note</title>
                <para>You can't transform your output directly using only Input and Template tasks. You should use Mapping as an interagent between these tasks.</para>
             </note>
        </para>
    </section>
    <section id="mapping">
        <title>Java Mapping Task</title>
        
        <para>
            If you decide to do Java Mapping, you need to make sure that your Input reader has been set up and you have some sample data specified.
            Then you should select <emphasis>Input Task</emphasis> in the Process tab and click the plus (+) sign to the right of the icon.
            Select <emphasis>Java Mapping</emphasis> from the popup menu and it will appear to the right, connected to <emphasis>Input Task</emphasis>. Then select <emphasis>Java Mapping</emphasis> task.
        </para>
        <figure>
            <title>Java Mapping configuration</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/process_page/process3.png"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Another method of adding <emphasis>Java Mapping</emphasis> element 
            to the canvas in the Processing Tasks section is to right click Input Task
            element and select <emphasis>Java Mapping</emphasis> in the popup menu. </para>
        <figure>
            <title>Java Mapping configuration</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/process_page/process4.png"/>
                </imageobject>
            </mediaobject>
        </figure>  
        <para>
            Right-click on the canvas in an empty space and select "Add ->Java Class".
        </para>
        <figure>
            <title>Java Mapping configuration</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/process_page/process5.png"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>
            <emphasis>Java Bean Creation</emphasis> wizard appears.
            Specify a unique identifier for the new class, the class path. 
            If the Java class is specified, you'll see a list of the properties in the box below.
            Click <emphasis>Finish</emphasis> when you're done.
            Now with the input and output models on the canvas, you can click and drag 
            from the various input elements to corresponding output elements. 
            Make sure to connect collection elements to corresponding collection elements.
            Finally your mapping should look nearly like the one on the picture below.
        </para>
        <figure>
            <title>Final Mapping schema</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/process_page/process6.png"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>For details, also see the movie,
            <ulink url="http://www.screencast.com/users/tfennelly/folders/Camtasia/media/a6648ba3-953f-40bf-8241-570306fba776">"XML to Java"</ulink>.
        </para>
        <para>If you are interested in transforming EDI to Java, please, follow the 
            <ulink url="http://www.screencast.com/users/tfennelly/folders/Camtasia/media/a72704fb-ff74-4d5d-9869-9092611f52c2">link</ulink>.</para>
    </section>
    <section>
        <title>Apply Template Task</title>
        
        <para>The "Apply Template" task works very similarly to the <xref linkend="mapping"/>, where you map between an input model and an output model.
            Select the <emphasis>Java Mapping</emphasis> task you want to use as the input model in the Process Map pane and click the plus (+) sign to the right of the icon.
        </para>
        <figure id="apply_templ">
            <title>Apply Template configuration</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/process_page/process7.png"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>
            The <property>Message Type Selection</property> wizard will appear.
            In our example we will transfer our data to csv output format,so you should select <emphasis><property>CSV</property></emphasis> and click <property>Next</property>.</para>
        <figure>
            <title>Message Type Selection</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/process_page/process7a.png"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>
            On the next wizard page put the following string into the Fields,select <property>Output Fields Names</property> and click <property>Finish</property>.</para>
        <figure>
            <title>CSV output message configuration</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/process_page/process7b.png"/>
                </imageobject>
            </mediaobject>
        </figure>     
        <para>
            After these steps <property>"Apply Template"</property>
            task will appear to the right, connected to the task you created it from.
            To continue the process of configuration you should click on it and find <emphasis>CSV Template</emphasis> 
            item with entered fields on the canvas.Now  you can click and drag from various 
            input elements to corresponding output elements
            in the template. Make sure to connect collection elements to the c
            orresponding <emphasis>csv-record</emphasis>.
            In our example we transfer into CSV output only the elements 
            of <property>orderItems</property> collection (see the picture below): 
        </para>
        <figure>
            <title>Relations between input and output models</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/process_page/process7c.png"/>
                </imageobject>
            </mediaobject>
        </figure>  
    </section>
    <section>
        <title>Smooks Configuration testing using Smooks Run Configuration</title>
        
        <para>This option is intended to view the results of Smooks transforming procedure.
            To do the testing you should select your <emphasis>Smooks Configuration file</emphasis> you want to transfer in the Project Navigator or open it in 
            the Smooks Configuration Editor and then select "Run As..." from the <emphasis><property>Run</property></emphasis>
            toolbar button
            or <emphasis><property>Run->Smooks Run Configuration</property></emphasis> option in the top menu bar. And Smooks Configuration file will be run automatically. 
        </para>
        <figure>
            <title>Smooks Configuration testing</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/process_page/process8.png"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>If any errors or warnings appear, they will pop up in a dialog.
            The output of the test will appear in the Console view.
                 In our case the following streaming output will appear:</para>
        <programlisting role="JAVA"><![CDATA[[Stream Templating Result ...]
    |--
    |"productId","quantity","price"
    |"111","2","8.9"
    |"222","7","5.2"
    |--

[Java Mapping Results...]
    |--
    |> order (beanId = "order")
    |    > header (beanId = "header")
    |        > date = "2006-11-15 20:45:28.0 EET"
    |        > customerNumber = 123123L
    |        > customerName = "Joe"
    |    > orderItems (beanId = "orderItems")
    |        > example.model.OrderItem (beanId = "orderItem")
    |            > productId = 111L
    |            > quantity = 2I
    |            > price = 8.9D
    |        > example.model.OrderItem (beanId = "orderItem")
    |            > productId = 222L
    |            > quantity = 7I
    |            > price = 5.2D
    |--
]]></programlisting>  
        <para>If the test runs but doesn't generate any streaming output the Console output will be the following:
        </para>
        <programlisting role="JAVA"><![CDATA[ Nothing to Display:
            - No Java Mappings.
            - No Templates Applied.]]>
            </programlisting>
            
    </section>
</chapter>

