<?xml version="1.0" encoding="UTF-8"?>
<chapter id="creation_and_registration">
	<?dbhtml filename="creation_and_registration.html"?>
	<chapterinfo>
		<keywordset>
			<keyword>JBoss Developer Studio</keyword>
			<keyword>Eclipse</keyword>
			<keyword>JSF Tools</keyword>
			<keyword>Java</keyword>
			<keyword>JBoss</keyword>
		</keywordset>
	</chapterinfo>
	<title>Creation and Registration</title>

	<section id="CreateAndRegisterACustomConverter94230">

		<title>Create and Register a Custom Converter</title>

		<para>
    	It&apos;s also possible to create a custom Converter in order to specify your own converting rules. Let&apos;s look at how you can do this.
    </para>

		<para>To create and register a custom converter it is necessary perform the following steps:</para>

		<itemizedlist>
			<listitem>
				<para>In the Project Explorer view open the <filename>faces-config.xml</filename> file and select <guilabel>Tree</guilabel> tab.</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>Converters</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_44.png" scale="80" />
				</imageobject>
			</mediaobject>
		</figure>
		<itemizedlist>
			<listitem>
				<para>Select <guilabel>Converters</guilabel> and click the <guibutton>Add</guibutton> button.</para>
			</listitem>
			<listitem>
				<para>
					On the form type the name of your converter in the <emphasis><property>Converter-id</property></emphasis> field and name of the class for converters. After clicking <guibutton>Finish</guibutton> button your custom converter is registered under the entered name.
				</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>Add Converter Form</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_45.png" />
				</imageobject>
			</mediaobject>
		</figure>
		<itemizedlist>
			<listitem>
				<para>
					Now you can create a <emphasis role="italic"><property>&quot;converter&quot;</property></emphasis> class. In the Converter section you should see your <guilabel>Converter-id</guilabel> and <guilabel>Converter-class</guilabel>. Click on the <guilabel>Converter-Class</guilabel> link to generate the source code.
				</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>Generation of Source Code for Converter Class</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_46.png" scale="80" />
				</imageobject>
			</mediaobject>
		</figure>

		<itemizedlist>
			<listitem>
				<para>
					A usual wizard for creating a Java class will appear. All needed fields here will be adjusted automatically. Just leave everything without changes and click the <guibutton>Finish</guibutton> button.
				</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>New Java Class Form</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_47.png" />
				</imageobject>
			</mediaobject>
		</figure>
		<itemizedlist>
			<listitem>
				<para>To open a converter class click again on the <guilabel>Converter-Class</guilabel> link in the Converter section.</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>Converter Class</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_48.png" />
				</imageobject>
			</mediaobject>
		</figure>
		<para>Now you are able to add a business logic of converter in the Java editor.</para>
	</section>

	<section id="CreateAndRegisterACustomValidator5632">

		<title>Create and Register a Custom Validator</title>

		<para>
			It is also quite easy to develop your own custom Validators. The required steps are similar to those shown previously:
		</para>
		<itemizedlist>
			<listitem>
				<para>In the Project Explorer view open the <filename>faces-config.xml</filename> and select the <guilabel>Tree</guilabel> tab.</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>Validator in Faces Config Editor</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_49.png" />
				</imageobject>
			</mediaobject>
		</figure>
		<itemizedlist>
			<listitem>
				<para>Select the <guilabel>Validators</guilabel> option and click the <guibutton>Add</guibutton>button.</para>
			</listitem>
			<listitem>
				<para>
					Type the name of your validator in the <guibutton>Validator-id</guibutton> field and name of the class for validators. After clicking the <guibutton>Finish</guibutton> button your custom validator is registered under the entered name.
				</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>Adding Validator</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_50.png" />
				</imageobject>
			</mediaobject>
		</figure>

		<para>Now you can create the &quot;validator&quot; class. </para>
		<itemizedlist>
			<listitem>
				<para>
					In the Validator section you can see your <guilabel>Validator-id</guilabel> and <guilabel>Validator-class</guilabel>. To generate the source code click on <guilabel>Validator-class</guilabel>.
				</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>Creating Validator Class</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_51.png" />
				</imageobject>
			</mediaobject>
		</figure>
		<itemizedlist>
			<listitem>
				<para>Java class will be created automatically. Leave everything without changes and click the <guibutton>Finish</guibutton>.</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>New Java Class Form</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_52.png" />
				</imageobject>
			</mediaobject>
		</figure>
		<itemizedlist>
			<listitem>
				<para>
					To open the validator class click on the <guilabel>Validator-Class</guilabel> link in the Validator section. Now you are able to write a business logic of validator in the Java editor.
				</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>Converter Class Editing</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_53.png" />
				</imageobject>
			</mediaobject>
		</figure>
	</section>

	<section id="referenced_beans">
		<title>Create and Register Referenced Beans</title>

		<para>
			The creation of Referenced Beans is similar to the creation of Custom Validators. The steps below show you the steps required to create Referenced Beans.
		</para>

		<itemizedlist>
			<listitem>
				<para>In the Project Explorer view open the <filename>faces-config.xml</filename> and select the <guilabel>Tree</guilabel> tab.</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>Referenced Beans in Faces Config Editor</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_54.png" />
				</imageobject>
			</mediaobject>
		</figure>
		<itemizedlist>
			<listitem>
				<para>Select the <guilabel>Referenced Beans</guilabel> option and click on the <guibutton>Add</guibutton> button.</para>
			</listitem>
			<listitem>
				<para>
					Type in the name of your Referenced Bean and type in or select the <guilabel>Referenced-Bean-Class</guilabel> value by clicking the <guibutton>Browse</guibutton> button.
				</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>Add Referenced Bean</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_55.png" />
				</imageobject>
			</mediaobject>
		</figure>
		<itemizedlist>
			<listitem>
				<para>
					In the Referenced Bean section you should see your <guilabel>Referenced-Bean-Name</guilabel> and <guilabel>Referenced-Bean-Class</guilabel>. Click on the link to open the Java creation wizard.
				</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>Create Referenced Bean Class</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_56.png" />
				</imageobject>
			</mediaobject>
		</figure>
		<itemizedlist>
			<listitem>
				<para>
					The Java class will be created automatically. Leave everything with their default values and click the <guibutton>Finish</guibutton> button.
				</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>New Java Class Form</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_57.png" />
				</imageobject>
			</mediaobject>
		</figure>
		<itemizedlist>
			<listitem>
				<para>
					To open a Referenced Bean class click the <guilabel>Referenced-Bean-Class</guilabel> in the Referenced Bean section. Now you are able to write business logic of Referenced Bean in the Java editor.
				</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>Referenced Bean Class Editing</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_58.png" />
				</imageobject>
			</mediaobject>
		</figure>
	</section>
</chapter>