<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE taglib PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
                        "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">
<taglib>
 <tlib-version>1.2</tlib-version>
 <jsp-version>1.2</jsp-version>
 <short-name>a4j</short-name>
 <uri>https://ajax4jsf.dev.java.net/ajax</uri>
 <description>Core ajax4jsf Components</description>
 		 	<tag>
		<name>ajaxListener</name>
		<tag-class>org.ajax4jsf.taglib.ajax.AjaxListenerTag</tag-class>
		<description>
			This works the same as ActionListener or ValueChangeListener, but for an AJAX container. Add the specified class
			as a listener for AjaxEvent (sent in case of an AJAX request
			for this container).
		</description>
		<attribute>
			<name>type</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
			<description> Fully qualified Java class name of an AjaxListener to be created and registered.</description>
		</attribute>
	</tag>
	<tag>
		<name>keepAlive</name>
		<tag-class>org.ajax4jsf.taglib.ajax.KeepAliveTag</tag-class>
		<description>
			This tag get bean by EL expression '#{'+name+'}' and store bean instance in component tree. After restoring view state, bean is putted to request-scope attributes with name.
			Since, every view will be use own instance of bean for expressions '#{name....}'
		</description>
		<attribute>
			<name>beanName</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
			<description> name of bean for EL-expressions.</description>
		</attribute>
		<attribute>
			<name>ajaxOnly</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<description> if true, bean value restored in ajax requests only.</description>
		</attribute>
	</tag>
			 <tag>
  <name>region</name>
  <tag-class>org.ajax4jsf.taglib.ajax.AjaxRegion</tag-class>
  <body-content>JSP</body-content>
  	<display-name>Ajax Region</display-name>
      <description>This tag defines a part of the JSF Tree that is to be decoded on the
    server side during AJAX request processing</description>
    	  <attribute>
   <name>selfRendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>if 'true' , self-render subtree at InvokeApplication ( or Decode, if immediate property set to true )  phase</description>
  </attribute>
		  	  	  	  	  <attribute>
   <name>renderRegionOnly</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Flag to disable rendering in AJAX responses content outside of active region.
			If this attribute set to "true" , no one of the components outside of region will be included to AJAX response.
			If set to "false", search for components to include in response will be performed on all tree.
			Default "true"</description>
  </attribute>
		  	  <attribute>
   <name>immediate</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Flag indicating that, if this component is activated by ajaxrequest, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.</description>
  </attribute>
		  	  	  <attribute>
   <name>rendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If false, this component will not be rendered.</description>
  </attribute>
		  	  <attribute>
   <name>binding</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Component binding.</description>
  </attribute>
		  	  <attribute>
   <name>ajaxListener</name>
      <rtexprvalue>false</rtexprvalue>
   <description>MethodBinding representing an action listener method that will be notified when this component is activated by the ajax Request and handle it. The expression must evaluate to a public method that takes an AjaxEvent parameter, with a return type of void.</description>
  </attribute>
		  	  <attribute>
   <name>id</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Every component may have an unique id. Automatically created if
		omitted.</description>
  </attribute>
		  	  </tag>
	 <tag>
  <name>page</name>
  <tag-class>org.ajax4jsf.taglib.ajax.AjaxPage</tag-class>
  <body-content>JSP</body-content>
  	<display-name>Ajax Page</display-name>
      <description>This component renders a full HTML page
structure. It must be the first (and only) child for the view root (JSP &amp;lt;f:view&amp;gt; tag).
No HTML code can be outside of this component.
It also has support for processing child components in AJAX requests, just like &amp;lt;a4j:region&amp;gt;. 
For a normal request, it will render the results of a &amp;lt;script&amp;gt; element with a client-side library at the page's &amp;lt;head&amp;gt;. 
If this component includes a "head" facet, the facet's content will also be rendered at the &amp;lt;head&amp;gt;
			element. For an AJAX request, only affected components in the full document structure will be rendered.
Here's an example of using it in JSP (jspx version): &amp;lt;jsp:root xmlns:.... &amp;lt;f:view&amp;gt; &amp;lt;a4j:page&amp;gt;&amp;lt;f:facet name="head"&amp;gt; ... &amp;lt;/f:facet&amp;gt; &amp;lt;!-- page content here --&amp;gt; &amp;lt;/a4j:page&amp;gt; &amp;lt;/f:view&amp;gt;&amp;lt;/jsp:root&amp;gt;</description>
    	  <attribute>
   <name>selfRendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>if 'true' , self-render subtree at InvokeApplication ( or Decode, if immediate property set to true )  phase</description>
  </attribute>
		  	  <attribute>
   <name>namespace</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Set html element default namespace</description>
  </attribute>
		  	  	  	  	  <attribute>
   <name>lang</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Code describing the language used in the generated markup for this component.</description>
  </attribute>
		  	  <attribute>
   <name>title</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Advisory title information about markup elements generated for this component.</description>
  </attribute>
		  	  <attribute>
   <name>renderRegionOnly</name>
      <rtexprvalue>false</rtexprvalue>
   <description>renderRegionOnly</description>
  </attribute>
		  	  <attribute>
   <name>onunload</name>
      <rtexprvalue>false</rtexprvalue>
   <description>JavaScript code to execute on a page unload.</description>
  </attribute>
		  	  	  <attribute>
   <name>rendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If false, this component will not be rendered.</description>
  </attribute>
		  	  <attribute>
   <name>contentType</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Set custom mime content type to response</description>
  </attribute>
		  	  <attribute>
   <name>dir</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Alternate textual description of the element rendered by this component.</description>
  </attribute>
		  	  <attribute>
   <name>id</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Every component may have an unique id. Automatically created if
		omitted.</description>
  </attribute>
		  	  <attribute>
   <name>styleClass</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Corresponds to the HTML class attribute.</description>
  </attribute>
		  	  <attribute>
   <name>immediate</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Flag indicating that, if this component is activated by ajaxrequest, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.</description>
  </attribute>
		  	  <attribute>
   <name>onload</name>
      <rtexprvalue>false</rtexprvalue>
   <description>JavaScript code to execute on a page load.</description>
  </attribute>
		  	  <attribute>
   <name>style</name>
      <rtexprvalue>false</rtexprvalue>
   <description>CSS style(s) to be applied when this component is rendered.</description>
  </attribute>
		  	  <attribute>
   <name>pageTitle</name>
      <rtexprvalue>false</rtexprvalue>
   <description>String for output as a page title.</description>
  </attribute>
		  	  <attribute>
   <name>binding</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Component binding.</description>
  </attribute>
		  	  <attribute>
   <name>ajaxListener</name>
      <rtexprvalue>false</rtexprvalue>
   <description>MethodBinding representing an action listener method that will be notified when this component is activated by the ajax Request and handle it. The expression must evaluate to a public method that takes an AjaxEvent parameter, with a return type of void.</description>
  </attribute>
		  	  	  <attribute>
   <name>format</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Page layout format ( html, xhtml, html-transitional, html-3.2 ) for encoding DOCTYPE, namespace and Content-Type definitions</description>
  </attribute>
		  </tag>
	 <tag>
  <name>support</name>
  <tag-class>org.ajax4jsf.taglib.ajax.AjaxSupport</tag-class>
  <body-content>JSP</body-content>
  	<display-name>Ajax Support</display-name>
      <description>Adds the AJAX functionality for those UIComponent-based componenent
    that have properties for JavaScript events.
			During Decoding: If a request is Ajax-performed, obtains the Map
    from the "requestParameterMap" property of the ExternalContext. If this
    Map contains non null value for the "clientId" key, creates a
    javax.faces.event.ActionEvent around the component, passes it to the
    queueEvent() method of the component, and then appends it's reRender
    components IDs to a list of rendered areas.
			During Encoding. Doesn't encode as a component. Instead, it adds
    ValueBinding for a property of the parent component with the name as a
    value of its "event" property. As a result, when rendered, the parent
    component builds JavaScript code for submitting an AJAX request on this
    event.
    If the component has child UIParameter components, appends it's
    name/value as additional request parameters.
    If a parent component is an instance of UIInput and the ajaxType
    property is "input", submits the value of the input field, also. In this
    case, you can submit a single input field outside of UIForm.</description>
    	  <attribute>
   <name>actionListener</name>
      <rtexprvalue>false</rtexprvalue>
   <description>MethodBinding pointing at method acception an ActionEvent with
		return type void.</description>
  </attribute>
		  	  <attribute>
   <name>parentProperties</name>
      <rtexprvalue>false</rtexprvalue>
   <description>parentProperties</description>
  </attribute>
		  	  <attribute>
   <name>action</name>
      <rtexprvalue>false</rtexprvalue>
   <description>MethodBinding pointing at the application action to be invoked,
		if this UIComponent is activated by the user, during the Apply
		Request Values or Invoke Application phase of the request
		processing lifecycle, depending on the value of the immediate
		property.</description>
  </attribute>
		  	  	  <attribute>
   <name>timeout</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Timeout ( in ms ) for request.</description>
  </attribute>
		  	  	  	  	  <attribute>
   <name>oncomplete</name>
      <rtexprvalue>false</rtexprvalue>
   <description>JavaScript code for call after request completed on client side</description>
  </attribute>
		  	  <attribute>
   <name>rendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If false, this component will not be rendered.</description>
  </attribute>
		  	  <attribute>
   <name>status</name>
      <rtexprvalue>false</rtexprvalue>
   <description>ID ( in format of call UIComopnent.findComponent() ) of Request status component.</description>
  </attribute>
		  	  <attribute>
   <name>reRender</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Id['s] ( in format of call  UIComopnent.findComponent()    ) of components, rendered in case of AjaxRequest  caused by this component. Can be single id, comma-separated list of Id's, or EL Expression  with array or Collection</description>
  </attribute>
	  <attribute>
   <name>targetId</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Alias for reRender : Id['s] ( in format of call  UIComopnent.findComponent()    ) of components, rendered in case of AjaxRequest  caused by this component. Can be single id, comma-separated list of Id's, or EL Expression  with array or Collection</description>
  </attribute>
		  	  <attribute>
   <name>id</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Every component may have an unique id. Automatically created if
		omitted.</description>
  </attribute>
		  	  <attribute>
   <name>disableDefault</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Disable default action for target event ( append "return false;" to javascript )</description>
  </attribute>
		  	  <attribute>
   <name>requestDelay</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Delay ( in ms. ) for send ajax request on JavaScript event. In conjunction with events queue can reduce number of requests on keyboard or mouse move events.</description>
  </attribute>
		  	  <attribute>
   <name>eventsQueue</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Name of requests queue to avoid send next request before complete other from same event. Can be used to reduce number of requests of frequently events ( key press, mouse move etc ).</description>
  </attribute>
		  	  <attribute>
   <name>bypassUpdates</name>
      <rtexprvalue>false</rtexprvalue>
   <description>if true , after process validations phase skip updates of model beans an force render response. can be used for validate components input</description>
  </attribute>
		  	  <attribute>
   <name>immediate</name>
      <rtexprvalue>false</rtexprvalue>
   <description>True means, that the default ActionListener should be executed
		immediately (i.e. during Apply Request Values phase of the
		request processing lifecycle), rather than waiting until the
		Invoke Application phase.</description>
  </attribute>
		  	  <attribute>
   <name>limitToList</name>
      <rtexprvalue>false</rtexprvalue>
   <description>f "true", update on client side ONLY elements from this 'reRender' property. if "false" ( default ) update all rendered by ajax region components.</description>
  </attribute>
		  	  <attribute>
   <name>ajaxSingle</name>
      <rtexprvalue>false</rtexprvalue>
   <description>if true , submit ONLY one field/link, instead of all form controls.</description>
  </attribute>
		  	  <attribute>
   <name>event</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Name of Javascript event property ( onclick , onchange, etc. ) of parent component, for which we will build 
				AJAX submission code.</description>
  </attribute>
		  	  <attribute>
   <name>onsubmit</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Javascript code for call before submission of ajax event.</description>
  </attribute>
		  	  <attribute>
   <name>ignoreDupResponses</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If true, unfinished request will be aborted on new event</description>
  </attribute>
		  	  <attribute>
   <name>binding</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Component binding.</description>
  </attribute>
		  </tag>
	 <tag>
  <name>poll</name>
  <tag-class>org.ajax4jsf.taglib.ajax.AjaxPollTag</tag-class>
  <body-content>JSP</body-content>
  	<display-name>Ajax Poll</display-name>
      <description>Periodically perform AJAX request to server, to simulate 'poll' data.</description>
    	  <attribute>
   <name>actionListener</name>
      <rtexprvalue>false</rtexprvalue>
   <description>MethodBinding pointing at method acception an ActionEvent with
		return type void.</description>
  </attribute>
		  	  <attribute>
   <name>action</name>
      <rtexprvalue>false</rtexprvalue>
   <description>MethodBinding pointing at the application action to be invoked,
		if this UIComponent is activated by the user, during the Apply
		Request Values or Invoke Application phase of the request
		processing lifecycle, depending on the value of the immediate
		property.</description>
  </attribute>
		  	  	  <attribute>
   <name>timeout</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Timeout ( in ms ) for request.</description>
  </attribute>
		  	  	  	  <attribute>
   <name>oncomplete</name>
      <rtexprvalue>false</rtexprvalue>
   <description>JavaScript code for call after request completed on client side</description>
  </attribute>
		  	  <attribute>
   <name>rendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If false, this component will not be rendered.</description>
  </attribute>
		  	  <attribute>
   <name>status</name>
      <rtexprvalue>false</rtexprvalue>
   <description>ID ( in format of call UIComopnent.findComponent() ) of Request status component.</description>
  </attribute>
		  	  <attribute>
   <name>reRender</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Id['s] ( in format of call  UIComopnent.findComponent()    ) of components, rendered in case of AjaxRequest  caused by this component. Can be single id, comma-separated list of Id's, or EL Expression  with array or Collection</description>
  </attribute>
	  <attribute>
   <name>targetId</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Alias for reRender : Id['s] ( in format of call  UIComopnent.findComponent()    ) of components, rendered in case of AjaxRequest  caused by this component. Can be single id, comma-separated list of Id's, or EL Expression  with array or Collection</description>
  </attribute>
		  	  <attribute>
   <name>interval</name>
      <rtexprvalue>false</rtexprvalue>
   <description>interval ( in ms ) for call poll requests. default value 1000 ( 1 sec ).</description>
  </attribute>
		  	  <attribute>
   <name>id</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Every component may have an unique id. Automatically created if
		omitted.</description>
  </attribute>
		  	  	  <attribute>
   <name>eventsQueue</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Name of requests queue to avoid send next request before complete other from same event. Can be used to reduce number of requests of frequently events ( key press, mouse move etc ).</description>
  </attribute>
		  	  <attribute>
   <name>bypassUpdates</name>
      <rtexprvalue>false</rtexprvalue>
   <description>if true , after process validations phase skip updates of model beans an force render response. can be used for validate components input</description>
  </attribute>
		  	  <attribute>
   <name>enabled</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Enable/disable polling</description>
  </attribute>
		  	  <attribute>
   <name>immediate</name>
      <rtexprvalue>false</rtexprvalue>
   <description>True means, that the default ActionListener should be executed
		immediately (i.e. during Apply Request Values phase of the
		request processing lifecycle), rather than waiting until the
		Invoke Application phase.</description>
  </attribute>
		  	  <attribute>
   <name>limitToList</name>
      <rtexprvalue>false</rtexprvalue>
   <description>f "true", update on client side ONLY elements from this 'reRender' property. if "false" ( default ) update all rendered by ajax region components.</description>
  </attribute>
		  	  <attribute>
   <name>ajaxSingle</name>
      <rtexprvalue>false</rtexprvalue>
   <description>if true , submit ONLY one field/link, instead of all form controls.</description>
  </attribute>
		  	  <attribute>
   <name>onsubmit</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Javascript code for call before submission of ajax event.</description>
  </attribute>
		  	  <attribute>
   <name>ignoreDupResponses</name>
      <rtexprvalue>false</rtexprvalue>
   <description>${prop.xmlEncodedDescription}</description>
  </attribute>
		  	  <attribute>
   <name>binding</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Component binding.</description>
  </attribute>
		  	  </tag>
	 <tag>
  <name>commandLink</name>
  <tag-class>org.ajax4jsf.taglib.ajax.AjaxCommandLink</tag-class>
  <body-content>JSP</body-content>
  	<display-name>Ajax commandLink</display-name>
      <description>Renders an HTML "a" anchor element that acts like a form submit
    button when clicked. 
			During Decoding: Obtains the Map from the "requestParameterMap"
    property of the ExternalContext. If this Map contains non null value for
    the "clientId" key, creates a javax.faces.event.ActionEvent around the
    component and passes it to the queueEvent() method of the component. If
    the request is Ajax-performed, adds its target IDs from the reRender
    property to the rendered areas list of the nesting AjaxContainer. 
			 element for decoding as described above with the parameters of the
    component. (PARAM_NAME and PARAM_VALUE are the names and values,
    respectively, of any nested UIParameter children.) The name and the value
    must be URLEncoded. If the "styleClass" attribute is specified, render its
    value as the value of the "class" attribute. Render any non-UIParameter
    children as normal inside of the "a" element. These will appear as the
    link text.</description>
    	  <attribute>
   <name>actionListener</name>
      <rtexprvalue>false</rtexprvalue>
   <description>MethodBinding pointing at method acception an ActionEvent with
		return type void.</description>
  </attribute>
		  	  	  <attribute>
   <name>title</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Advisory title information about markup elements generated for this component.</description>
  </attribute>
		  	  <attribute>
   <name>oncomplete</name>
      <rtexprvalue>false</rtexprvalue>
   <description>JavaScript code for call after request completed on client side</description>
  </attribute>
		  	  <attribute>
   <name>shape</name>
      <rtexprvalue>false</rtexprvalue>
   <description>default|rect|circle|poly [CI]
    This attribute specifies the shape of a region. Possible values:

        * default: Specifies the entire region.
        * rect: Define a rectangular region.
        * circle: Define a circular region.
        * poly: Define a polygonal region.</description>
  </attribute>
		  	  <attribute>
   <name>target</name>
      <rtexprvalue>false</rtexprvalue>
   <description></description>
  </attribute>
		  	  <attribute>
   <name>rendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If false, this component will not be rendered.</description>
  </attribute>
		  	  <attribute>
   <name>charset</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The character encoding of the resource designated by this hyperlink.</description>
  </attribute>
		  	  <attribute>
   <name>reRender</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Id['s] ( in format of call  UIComopnent.findComponent()    ) of components, rendered in case of AjaxRequest  caused by this component. Can be single id, comma-separated list of Id's, or EL Expression  with array or Collection</description>
  </attribute>
	  <attribute>
   <name>targetId</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Alias for reRender : Id['s] ( in format of call  UIComopnent.findComponent()    ) of components, rendered in case of AjaxRequest  caused by this component. Can be single id, comma-separated list of Id's, or EL Expression  with array or Collection</description>
  </attribute>
		  	  <attribute>
   <name>id</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Every component may have an unique id. Automatically created if
		omitted.</description>
  </attribute>
		  	  <attribute>
   <name>dir</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Alternate textual description of the element rendered by this component.</description>
  </attribute>
		  	  <attribute>
   <name>rev</name>
      <rtexprvalue>false</rtexprvalue>
   <description>A reverse link from the anchor specified by this hyperlink to the current document. The value of this attribute is a space-separated list of link types.</description>
  </attribute>
		  	  <attribute>
   <name>bypassUpdates</name>
      <rtexprvalue>false</rtexprvalue>
   <description>if true , after process validations phase skip updates of model beans an force render response. can be used for validate components input</description>
  </attribute>
		  	  <attribute>
   <name>styleClass</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Corresponds to the HTML class attribute.</description>
  </attribute>
		  	  <attribute>
   <name>accesskey</name>
      <rtexprvalue>false</rtexprvalue>
   <description>This attribute assigns an access key to an element. An access key is a single character from the document character set. Note. Authors should consider the input method of the expected reader when specifying an accesskey.</description>
  </attribute>
		  	  <attribute>
   <name>limitToList</name>
      <rtexprvalue>false</rtexprvalue>
   <description>f "true", update on client side ONLY elements from this 'reRender' property. if "false" ( default ) update all rendered by ajax region components.</description>
  </attribute>
		  	  <attribute>
   <name>onkeypress</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a key was pressed and released.</description>
  </attribute>
		  	  <attribute>
   <name>ajaxSingle</name>
      <rtexprvalue>false</rtexprvalue>
   <description>if true , submit ONLY one field/link, instead of all form controls.</description>
  </attribute>
		  	  <attribute>
   <name>ondblclick</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer button was double clicked.</description>
  </attribute>
		  	  <attribute>
   <name>style</name>
      <rtexprvalue>false</rtexprvalue>
   <description>CSS style(s) to be applied when this component is rendered.</description>
  </attribute>
		  	  <attribute>
   <name>onblur</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Javascript code. The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation. It may be used with the same elements as onfocus.</description>
  </attribute>
		  	  <attribute>
   <name>onmouseover</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer was moved onto.</description>
  </attribute>
		  	  <attribute>
   <name>onkeyup</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: 	script expression; a key was released.</description>
  </attribute>
		  	  <attribute>
   <name>value</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The current value for this component.</description>
  </attribute>
		  	  <attribute>
   <name>action</name>
      <rtexprvalue>false</rtexprvalue>
   <description>MethodBinding pointing at the application action to be invoked,
		if this UIComponent is activated by the user, during the Apply
		Request Values or Invoke Application phase of the request
		processing lifecycle, depending on the value of the immediate
		property.</description>
  </attribute>
		  	  <attribute>
   <name>timeout</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Timeout ( in ms ) for request.</description>
  </attribute>
		  	  <attribute>
   <name>tabindex</name>
      <rtexprvalue>false</rtexprvalue>
   <description>This attribute specifies the position of the current element in the tabbing order for the current document. This value must be a number between 0 and 32767. User agents should ignore leading zeros.</description>
  </attribute>
		  	  	  <attribute>
   <name>hreflang</name>
      <rtexprvalue>false</rtexprvalue>
   <description></description>
  </attribute>
		  	  <attribute>
   <name>type</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The content type of the resource designated by this hyperlink.</description>
  </attribute>
		  	  <attribute>
   <name>lang</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Code describing the language used in the generated markup for this component.</description>
  </attribute>
		  	  <attribute>
   <name>onclick</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer button was clicked.</description>
  </attribute>
		  	  <attribute>
   <name>status</name>
      <rtexprvalue>false</rtexprvalue>
   <description>ID ( in format of call UIComopnent.findComponent() ) of Request status component.</description>
  </attribute>
		  	  <attribute>
   <name>onmouseout</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer was moved away.</description>
  </attribute>
		  	  <attribute>
   <name>onkeydown</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a key was pressed down.</description>
  </attribute>
		  	  <attribute>
   <name>onmousedown</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer button was pressed down.</description>
  </attribute>
		  	  <attribute>
   <name>requestDelay</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Delay ( in ms. ) for send ajax request on JavaScript event. In conjunction with events queue can reduce number of requests on keyboard or mouse move events.</description>
  </attribute>
		  	  <attribute>
   <name>eventsQueue</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Name of requests queue to avoid send next request before complete other from same event. Can be used to reduce number of requests of frequently events ( key press, mouse move etc ).</description>
  </attribute>
		  	  <attribute>
   <name>rel</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The relationship from the current document to the anchor specified by this hyperlink. The value of this attribute is a space-separated list of link types.</description>
  </attribute>
		  	  <attribute>
   <name>immediate</name>
      <rtexprvalue>false</rtexprvalue>
   <description>True means, that the default ActionListener should be executed
		immediately (i.e. during Apply Request Values phase of the
		request processing lifecycle), rather than waiting until the
		Invoke Application phase.</description>
  </attribute>
		  	  <attribute>
   <name>onfocus</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Javascript code.</description>
  </attribute>
		  	  <attribute>
   <name>onmouseup</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer button was released.</description>
  </attribute>
		  	  <attribute>
   <name>ignoreDupResponses</name>
      <rtexprvalue>false</rtexprvalue>
   <description>${prop.xmlEncodedDescription}</description>
  </attribute>
		  	  <attribute>
   <name>binding</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Component binding.</description>
  </attribute>
		  	  <attribute>
   <name>onmousemove</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer was moved within.</description>
  </attribute>
		  	  <attribute>
   <name>coords</name>
      <rtexprvalue>false</rtexprvalue>
   <description>This attribute specifies the position and shape on the screen. The number and order of values depends on the shape being defined. Possible combinations:

    * rect: left-x, top-y, right-x, bottom-y.
    * circle: center-x, center-y, radius. Note. When the radius value is a percentage value, user agents should calculate the final radius value based on the associated object's width and height. The radius should be the smaller value of the two.
    * poly: x1, y1, x2, y2, ..., xN, yN. The first x and y coordinate pair and the last should be the same to close the polygon. When these coordinate values are not the same, user agents should infer an additional coordinate pair to close the polygon.

Coordinates are relative to the top, left corner of the object. All values are lengths. All values are separated by commas.</description>
  </attribute>
		  </tag>
	 <tag>
  <name>commandButton</name>
  <tag-class>org.ajax4jsf.taglib.ajax.AjaxCommandButton</tag-class>
  <body-content>JSP</body-content>
  	<display-name>Ajax CommandButton</display-name>
      <description>Renders an HTML "input" element. 
			During Decoding: Obtains the Map from the "requestParameterMap"
    property of the ExternalContext. If the value in the Map for the value of
    the "clientId" property of the component is not null, create a
    javax.faces.event.ActionEvent around the component, and pass it to the
    queueEvent() method of the component. If the request is Ajax-performed,
    add its target IDs of the reRender property to the rendered areas list of
    the nesting AjaxContainer.
			During Encoding: Builds an AJAX.Submit JavaScript call for the
    "onclick" event. Renders the clientId of the component as the value of the
    "name" attribute. Renders the current value of the component as the value
    of the "value" attribute. If the "styleClass" attribute is specified,
    render its value as the value of the "class" attribute. Renders child
    components inside the HTML "input" element.</description>
    	  <attribute>
   <name>actionListener</name>
      <rtexprvalue>false</rtexprvalue>
   <description>MethodBinding pointing at method acception an ActionEvent with
		return type void.</description>
  </attribute>
		  	  	  <attribute>
   <name>title</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Advisory title information about markup elements generated for this component.</description>
  </attribute>
		  	  <attribute>
   <name>oncomplete</name>
      <rtexprvalue>false</rtexprvalue>
   <description>JavaScript code for call after request completed on client side</description>
  </attribute>
		  	  <attribute>
   <name>rendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If false, this component will not be rendered.</description>
  </attribute>
		  	  <attribute>
   <name>reRender</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Id['s] ( in format of call  UIComopnent.findComponent()    ) of components, rendered in case of AjaxRequest  caused by this component. Can be single id, comma-separated list of Id's, or EL Expression  with array or Collection</description>
  </attribute>
	  <attribute>
   <name>targetId</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Alias for reRender : Id['s] ( in format of call  UIComopnent.findComponent()    ) of components, rendered in case of AjaxRequest  caused by this component. Can be single id, comma-separated list of Id's, or EL Expression  with array or Collection</description>
  </attribute>
		  	  <attribute>
   <name>onchange</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; the element value was changed.</description>
  </attribute>
		  	  <attribute>
   <name>dir</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Alternate textual description of the element rendered by this component.</description>
  </attribute>
		  	  <attribute>
   <name>id</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Every component may have an unique id. Automatically created if
		omitted.</description>
  </attribute>
		  	  <attribute>
   <name>bypassUpdates</name>
      <rtexprvalue>false</rtexprvalue>
   <description>if true , after process validations phase skip updates of model beans an force render response. can be used for validate components input</description>
  </attribute>
		  	  <attribute>
   <name>styleClass</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Corresponds to the HTML class attribute.</description>
  </attribute>
		  	  <attribute>
   <name>accesskey</name>
      <rtexprvalue>false</rtexprvalue>
   <description>This attribute assigns an access key to an element. An access key is a single character from the document character set. Note. Authors should consider the input method of the expected reader when specifying an accesskey.</description>
  </attribute>
		  	  <attribute>
   <name>limitToList</name>
      <rtexprvalue>false</rtexprvalue>
   <description>f "true", update on client side ONLY elements from this 'reRender' property. if "false" ( default ) update all rendered by ajax region components.</description>
  </attribute>
		  	  <attribute>
   <name>onkeypress</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a key was pressed and released.</description>
  </attribute>
		  	  <attribute>
   <name>ajaxSingle</name>
      <rtexprvalue>false</rtexprvalue>
   <description>if true , submit ONLY one field/link, instead of all form controls.</description>
  </attribute>
		  	  <attribute>
   <name>ondblclick</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer button was double clicked.</description>
  </attribute>
		  	  <attribute>
   <name>image</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Absolute or relative URL of the image to be displayed for this button. If specified, this "input" element will be of type "image". Otherwise, it will be of the type specified by the "type" property with a label specified by the "value" property.</description>
  </attribute>
		  	  <attribute>
   <name>style</name>
      <rtexprvalue>false</rtexprvalue>
   <description>CSS style(s) to be applied when this component is rendered.</description>
  </attribute>
		  	  <attribute>
   <name>size</name>
      <rtexprvalue>false</rtexprvalue>
   <description>This attribute tells the user agent the initial width of the control. The width is given in pixels except when type attribute has the value "text" or "password". In that case, its value refers to the (integer) number of characters.</description>
  </attribute>
		  	  <attribute>
   <name>onblur</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; the element lost the focus.</description>
  </attribute>
		  	  <attribute>
   <name>onmouseover</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer was moved onto.</description>
  </attribute>
		  	  <attribute>
   <name>value</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The current value for this component.</description>
  </attribute>
		  	  <attribute>
   <name>action</name>
      <rtexprvalue>false</rtexprvalue>
   <description>MethodBinding pointing at the application action to be invoked,
		if this UIComponent is activated by the user, during the Apply
		Request Values or Invoke Application phase of the request
		processing lifecycle, depending on the value of the immediate
		property.</description>
  </attribute>
		  	  <attribute>
   <name>onkeyup</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: 	script expression; a key was released.</description>
  </attribute>
		  	  <attribute>
   <name>timeout</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Timeout ( in ms ) for request.</description>
  </attribute>
		  	  <attribute>
   <name>tabindex</name>
      <rtexprvalue>false</rtexprvalue>
   <description>This attribute specifies the position of the current element in the tabbing order for the current document. This value must be a number between 0 and 32767. User agents should ignore leading zeros.</description>
  </attribute>
		  	  	  <attribute>
   <name>lang</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Code describing the language used in the generated markup for this component.</description>
  </attribute>
		  	  <attribute>
   <name>type</name>
      <rtexprvalue>false</rtexprvalue>
   <description>submit|reset|image|button This attribute specifies the type of control to create. The default value for this attribute is "submit".</description>
  </attribute>
		  	  <attribute>
   <name>disabled</name>
      <rtexprvalue>false</rtexprvalue>
   <description>When set for a form control, this boolean attribute disables the control for user input.</description>
  </attribute>
		  	  <attribute>
   <name>onclick</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer button was clicked.</description>
  </attribute>
		  	  <attribute>
   <name>status</name>
      <rtexprvalue>false</rtexprvalue>
   <description>ID ( in format of call UIComopnent.findComponent() ) of Request status component.</description>
  </attribute>
		  	  <attribute>
   <name>onmouseout</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer was moved away.</description>
  </attribute>
		  	  <attribute>
   <name>alt</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Alternate textual description of the element rendered by this component.</description>
  </attribute>
		  	  <attribute>
   <name>onkeydown</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a key was pressed down.</description>
  </attribute>
		  	  <attribute>
   <name>onmousedown</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer button was pressed down.</description>
  </attribute>
		  	  <attribute>
   <name>requestDelay</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Delay ( in ms. ) for send ajax request on JavaScript event. In conjunction with events queue can reduce number of requests on keyboard or mouse move events.</description>
  </attribute>
		  	  <attribute>
   <name>eventsQueue</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Name of requests queue to avoid send next request before complete other from same event. Can be used to reduce number of requests of frequently events ( key press, mouse move etc ).</description>
  </attribute>
		  	  <attribute>
   <name>immediate</name>
      <rtexprvalue>false</rtexprvalue>
   <description>True means, that the default ActionListener should be executed
		immediately (i.e. during Apply Request Values phase of the
		request processing lifecycle), rather than waiting until the
		Invoke Application phase.</description>
  </attribute>
		  	  <attribute>
   <name>onfocus</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; the element got the focus.</description>
  </attribute>
		  	  <attribute>
   <name>onmouseup</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer button was released.</description>
  </attribute>
		  	  <attribute>
   <name>ignoreDupResponses</name>
      <rtexprvalue>false</rtexprvalue>
   <description>${prop.xmlEncodedDescription}</description>
  </attribute>
		  	  <attribute>
   <name>binding</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Component binding.</description>
  </attribute>
		  	  <attribute>
   <name>onmousemove</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer was moved within.</description>
  </attribute>
		  </tag>
	 <tag>
  <name>outputPanel</name>
  <tag-class>org.ajax4jsf.taglib.ajax.AjaxOutputPanel</tag-class>
  <body-content>JSP</body-content>
  	<display-name>Ajax OutputPanel</display-name>
      <description>Creates an AJAX-enabled part of the page. For a normal request,
    render a &amp;amp;lt;span&amp;amp;gt; or &amp;amp;lt;div&amp;amp;gt; HTML element
    depending on the value of the "layout" attribute, "inline" or "block".
    (The "id" attribute will be the value of the clientId property.) For an
    AJAX request, the content of this element is included in the response if
    the value of the property, "ajaxRendered", is set to true.</description>
    	  <attribute>
   <name>styleClass</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Corresponds to the HTML class attribute.</description>
  </attribute>
		  	  <attribute>
   <name>title</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Advisory title information about markup elements generated for this component.</description>
  </attribute>
		  	  <attribute>
   <name>lang</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Code describing the language used in the generated markup for this component.</description>
  </attribute>
		  	  <attribute>
   <name>layout</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML layout for generated markup. Possible values: "block"
            for generating an HTML &amp;lt;div&amp;gt; element, "inline" for
            generating an HTML &amp;lt;span&amp;gt; element, and "none" for generating
            no HTML element. There is a minor exception for the "none" case
            where a child element has the property "rendered" set to "false".
            In this case, we create an empty &amp;lt;span&amp;gt; element with same ID
            as the child element to use as a placeholder for later
            processing.</description>
  </attribute>
		  	  <attribute>
   <name>keepTransient</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Flag for mark all child components to non-transient. If
            true, all children components will be set to non-transient state
            and keep in saved components tree. For output in self-renderer
            region all content ( By default, all content in &amp;lt;f:verbatim&amp;gt;
            tags and non-jsf elements in facelets, marked as transient -
            since, self-rendered ajax regions don't plain output for ajax
            processing ).</description>
  </attribute>
		  	  <attribute>
   <name>ajaxRendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Defines, whether the content of this component must be (or
            not) included in AJAX response created by parent AJAX Container,
            even if it is not forced by reRender list of ajax action. Ignored
            if component marked to output by Ajax action. default
            false</description>
  </attribute>
		  	  <attribute>
   <name>style</name>
      <rtexprvalue>false</rtexprvalue>
   <description>CSS style(s) to be applied when this component is rendered.</description>
  </attribute>
		  	  <attribute>
   <name>rendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If false, this component will not be rendered.</description>
  </attribute>
		  	  <attribute>
   <name>binding</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Component binding.</description>
  </attribute>
		  	  <attribute>
   <name>dir</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Alternate textual description of the element rendered by this component.</description>
  </attribute>
		  	  <attribute>
   <name>id</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Every component may have an unique id. Automatically created if
		omitted.</description>
  </attribute>
		  </tag>
	 <tag>
  <name>actionparam</name>
  <tag-class>org.ajax4jsf.taglib.ajax.ActionParam</tag-class>
  <body-content>JSP</body-content>
      <description>A combination of the functionality of two JSF tags,
    &amp;lt;f:actionListener&amp;gt;; and &amp;lt;f:param&amp;gt;. At the render phase, it's
    decoded by parent component (&amp;lt;h:commandLink&amp;gt;; or like) as usual.
    At the process request phase, if the parent component performs an
    action event, update the value specified in the "assignTo" attribute as
    its value.
    If a converter attribute is specified, use it to encode and decode
    the value to a string stored in the html parameter.</description>
    	  <attribute>
   <name>noEscape</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If set to true, the value will not enclosed within single
            quotes and there will be no escaping of characters. This allows
            the use of the value as JavaScript code for calculating value on
            the client-side. This doesn't work with non-AJAX
            components.</description>
  </attribute>
		  	  <attribute>
   <name>value</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Initial value or value binding.</description>
  </attribute>
		  	  <attribute>
   <name>converter</name>
      <rtexprvalue>false</rtexprvalue>
   <description>ID of a converter to be used or a reference to a
            converter.</description>
  </attribute>
		  	  <attribute>
   <name>assignTo</name>
      <rtexprvalue>false</rtexprvalue>
   <description>EL expression for updatable bean property. This property
            will be updated if the parent command component performs an
            actionEvent.</description>
  </attribute>
		  	  	  	  <attribute>
   <name>binding</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Component binding.</description>
  </attribute>
		  	  <attribute>
   <name>name</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Name of this parameter</description>
  </attribute>
		  	  <attribute>
   <name>id</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Every component may have an unique id. Automatically created if
		omitted.</description>
  </attribute>
		  </tag>
	 <tag>
  <name>status</name>
  <tag-class>org.ajax4jsf.taglib.ajax.AjaxStatus</tag-class>
  <body-content>JSP</body-content>
      <description>Renders area for indicating Ajax request status on the client-side.
			During Encoding: Creates two "span" elements with id created as
    clientId of this component or of target AJAX region (pointed to by the
    "for" property) with appended ":status.start" and ":status:stop" strings.
    "start" span has "display:none" style (hidden). Inside this span,
    renders the value of the startText/stopText properties or, if they exist,
    the content of "start" and "stop" facets.
    On performing an AJAX request, the client-side script changes the
    visibility of the "start" span and hides "stop". After all requests for
    this indicator are completed, restores "stop" and hide "start"
    start[style,styleClass] and stop[style,styleClass] are rendered for spans
    as style and class atributes, respectivetly. 
			
			During Encoding: Creates two "span" or "div"(depending on 'layout' attribute)
			elements with id created as clientId of this component or of
			target AJAX region (pointed to by the "for" property) with appended
			":status.start" and ":status:stop" strings. "start" element
			has "display:none" style (hidden). Inside this element,
			renders the value of the startText/stopText properties or, if they exist,
			the content of "start" and "stop" facets. On
			performing an AJAX request, the client-side script changes
			the visibility of the "start" element and hides "stop". After all
			requests for this indicator are completed, restores "stop" and
			hide "start"
			
			start[style,styleClass] and
			stop[style,styleClass] are rendered for spans as style and class
			atributes, respectivetly.</description>
    	  <attribute>
   <name>startStyleClass</name>
      <rtexprvalue>false</rtexprvalue>
   <description>CSS style class for the element displayed on the start of a
            request.</description>
  </attribute>
		  	  <attribute>
   <name>stopStyle</name>
      <rtexprvalue>false</rtexprvalue>
   <description>CSS style for element displayed on request
            completion.</description>
  </attribute>
		  	  <attribute>
   <name>stopStyleClass</name>
      <rtexprvalue>false</rtexprvalue>
   <description>CSS style class for element displayed on request</description>
  </attribute>
		  	  <attribute>
   <name>layout</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Define visual layout of panel, can be "block" or
            "inline".</description>
  </attribute>
		  	  <attribute>
   <name>title</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Advisory title information about markup elements generated for this component.</description>
  </attribute>
		  	  <attribute>
   <name>rendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If false, this component will not be rendered.</description>
  </attribute>
		  	  <attribute>
   <name>id</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Every component may have an unique id. Automatically created if
		omitted.</description>
  </attribute>
		  	  <attribute>
   <name>dir</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Alternate textual description of the element rendered by this component.</description>
  </attribute>
		  	  <attribute>
   <name>styleClass</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Corresponds to the HTML class attribute.</description>
  </attribute>
		  	  <attribute>
   <name>startStyle</name>
      <rtexprvalue>false</rtexprvalue>
   <description>CSS style class for the element displayed on the start of a
            request.</description>
  </attribute>
		  	  <attribute>
   <name>onkeypress</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a key was pressed and released.</description>
  </attribute>
		  	  <attribute>
   <name>ondblclick</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer button was double clicked.</description>
  </attribute>
		  	  <attribute>
   <name>style</name>
      <rtexprvalue>false</rtexprvalue>
   <description>CSS style(s) to be applied when this component is rendered.</description>
  </attribute>
		  	  <attribute>
   <name>onmouseover</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer was moved onto.</description>
  </attribute>
		  	  <attribute>
   <name>for</name>
      <rtexprvalue>false</rtexprvalue>
   <description>ID of the AjaxContainer component whose status is indicated (in the format of a
				javax.faces.UIComopnent.findComponent() call).</description>
  </attribute>
		  	  <attribute>
   <name>onkeyup</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: 	script expression; a key was released.</description>
  </attribute>
		  	  <attribute>
   <name>lang</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Code describing the language used in the generated markup for this component.</description>
  </attribute>
		  	  <attribute>
   <name>onclick</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer button was clicked.</description>
  </attribute>
		  	  <attribute>
   <name>onmouseout</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer was moved away.</description>
  </attribute>
		  	  <attribute>
   <name>startText</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Text for display on starting request.</description>
  </attribute>
		  	  <attribute>
   <name>onkeydown</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a key was pressed down.</description>
  </attribute>
		  	  <attribute>
   <name>onmousedown</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer button was pressed down.</description>
  </attribute>
		  	  <attribute>
   <name>forceId</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If true, render the ID of the component in HTML code without JSF modifications.</description>
  </attribute>
		  	  <attribute>
   <name>stopText</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Text for display on request complete.</description>
  </attribute>
		  	  <attribute>
   <name>onmouseup</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer button was released.</description>
  </attribute>
		  	  <attribute>
   <name>binding</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Component binding.</description>
  </attribute>
		  	  <attribute>
   <name>onmousemove</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer was moved within.</description>
  </attribute>
		  </tag>
	 <tag>
  <name>loadBundle</name>
  <tag-class>org.ajax4jsf.taglib.ajax.LoadBundle</tag-class>
  <body-content>JSP</body-content>
  	<display-name>Ajax-compatible version of f:loadBundle</display-name>
      <description>Load a resource bundle localized for the Locale of the current view, and expose it (as a Map) 
			in the request attributes of the current request.
			 In difference of original f:loadBundle tag, stored in components tree and activate on ajax/non ajax responses</description>
    	  <attribute>
   <name>var</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Name of a request scope attribute under which the resource bundle will be exposed as a Map.</description>
  </attribute>
		  	  <attribute>
   <name>basename</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Base name of the resource bundle to be loaded.</description>
  </attribute>
		  	  <attribute>
   <name>rendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If false, this component will not be rendered.</description>
  </attribute>
		  	  <attribute>
   <name>binding</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Component binding.</description>
  </attribute>
		  	  <attribute>
   <name>id</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Every component may have an unique id. Automatically created if
		omitted.</description>
  </attribute>
		  </tag>
	 <tag>
  <name>mediaOutput</name>
  <tag-class>org.ajax4jsf.taglib.ajax.MediaOutputTag</tag-class>
  <body-content>JSP</body-content>
  	<display-name>Link to user-generated resource</display-name>
      <description>Class for create any link-type elements to user-generated resources :
		images, sounds, video, active objects, applets etc.
		Method specified in "CreateContent" attribute will put the data from Data Bean specified
		 in "value" attribute to the OutputStream. Important: Data Bean specified in "value" must implement Serializable.</description>
    	  	  <attribute>
   <name>declare</name>
      <rtexprvalue>false</rtexprvalue>
   <description>declare but don't instantiate flag</description>
  </attribute>
		  	  <attribute>
   <name>dir</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Alternate textual description of the element rendered by this component.</description>
  </attribute>
		  	  <attribute>
   <name>id</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Every component may have an unique id. Automatically created if
		omitted.</description>
  </attribute>
		  	  <attribute>
   <name>rev</name>
      <rtexprvalue>false</rtexprvalue>
   <description>A reverse link from the anchor specified by this hyperlink to the current document. The value of this attribute is a space-separated list of link types.</description>
  </attribute>
		  	  <attribute>
   <name>mimeType</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Geterated content mime-type for append to response header ( 'image/jpeg' etc )</description>
  </attribute>
		  	  <attribute>
   <name>style</name>
      <rtexprvalue>false</rtexprvalue>
   <description>CSS style(s) to be applied when this component is rendered.</description>
  </attribute>
		  	  <attribute>
   <name>onmouseover</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer was moved onto.</description>
  </attribute>
		  	  <attribute>
   <name>onkeyup</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: 	script expression; a key was released.</description>
  </attribute>
		  	  <attribute>
   <name>tabindex</name>
      <rtexprvalue>false</rtexprvalue>
   <description>This attribute specifies the position of the current element in the tabbing order for the current document. This value must be a number between 0 and 32767. User agents should ignore leading zeros.</description>
  </attribute>
		  	  <attribute>
   <name>archive</name>
      <rtexprvalue>false</rtexprvalue>
   <description>space-separated list of URIs</description>
  </attribute>
		  	  <attribute>
   <name>converter</name>
      <rtexprvalue>false</rtexprvalue>
   <description>converter</description>
  </attribute>
		  	  <attribute>
   <name>lang</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Code describing the language used in the generated markup for this component.</description>
  </attribute>
		  	  <attribute>
   <name>createContent</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Method call expression to send generated resource to OutputStream. It must have two parameter with a type of java.io.OutputStream 
        and java.lang.Object ( deserialized value of data attribute )</description>
  </attribute>
		  	  <attribute>
   <name>onmouseout</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer was moved away.</description>
  </attribute>
		  	  <attribute>
   <name>element</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Name of html element for resource link - may be &amp;lt;a&amp;gt; &amp;lt;img&amp;gt; &amp;lt;object&amp;gt; &amp;lt;applet&amp;gt; &amp;lt;script&amp;gt; or &amp;lt;link&amp;gt;</description>
  </attribute>
		  	  <attribute>
   <name>rel</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The relationship from the current document to the anchor specified by this hyperlink. The value of this attribute is a space-separated list of link types.</description>
  </attribute>
		  	  <attribute>
   <name>onmouseup</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer button was released.</description>
  </attribute>
		  	  <attribute>
   <name>cacheable</name>
      <rtexprvalue>false</rtexprvalue>
   <description>cacheable</description>
  </attribute>
		  	  <attribute>
   <name>binding</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Component binding.</description>
  </attribute>
		  	  <attribute>
   <name>onmousemove</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer was moved within.</description>
  </attribute>
		  	  <attribute>
   <name>expires</name>
      <rtexprvalue>false</rtexprvalue>
   <description>expires</description>
  </attribute>
		  	  <attribute>
   <name>coords</name>
      <rtexprvalue>false</rtexprvalue>
   <description>This attribute specifies the position and shape on the screen. The number and order of values depends on the shape being defined. Possible combinations:

    * rect: left-x, top-y, right-x, bottom-y.
    * circle: center-x, center-y, radius. Note. When the radius value is a percentage value, user agents should calculate the final radius value based on the associated object's width and height. The radius should be the smaller value of the two.
    * poly: x1, y1, x2, y2, ..., xN, yN. The first x and y coordinate pair and the last should be the same to close the polygon. When these coordinate values are not the same, user agents should infer an additional coordinate pair to close the polygon.

Coordinates are relative to the top, left corner of the object. All values are lengths. All values are separated by commas.</description>
  </attribute>
		  	  <attribute>
   <name>title</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Advisory title information about markup elements generated for this component.</description>
  </attribute>
		  	  <attribute>
   <name>shape</name>
      <rtexprvalue>false</rtexprvalue>
   <description>default|rect|circle|poly [CI]
    This attribute specifies the shape of a region. Possible values:

        * default: Specifies the entire region.
        * rect: Define a rectangular region.
        * circle: Define a circular region.
        * poly: Define a polygonal region.</description>
  </attribute>
		  	  <attribute>
   <name>target</name>
      <rtexprvalue>false</rtexprvalue>
   <description></description>
  </attribute>
		  	  <attribute>
   <name>session</name>
      <rtexprvalue>false</rtexprvalue>
   <description>session</description>
  </attribute>
		  	  <attribute>
   <name>charset</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The character encoding of the resource designated by this hyperlink.</description>
  </attribute>
		  	  <attribute>
   <name>rendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If false, this component will not be rendered.</description>
  </attribute>
		  	  <attribute>
   <name>codetype</name>
      <rtexprvalue>false</rtexprvalue>
   <description>content type for code</description>
  </attribute>
		  	  <attribute>
   <name>classid</name>
      <rtexprvalue>false</rtexprvalue>
   <description>identifies an implementation</description>
  </attribute>
		  	  <attribute>
   <name>styleClass</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Corresponds to the HTML class attribute.</description>
  </attribute>
		  	  <attribute>
   <name>accesskey</name>
      <rtexprvalue>false</rtexprvalue>
   <description>This attribute assigns an access key to an element. An access key is a single character from the document character set. Note. Authors should consider the input method of the expected reader when specifying an accesskey.</description>
  </attribute>
		  	  <attribute>
   <name>onkeypress</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a key was pressed and released.</description>
  </attribute>
		  	  <attribute>
   <name>ondblclick</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer button was double clicked.</description>
  </attribute>
		  	  <attribute>
   <name>align</name>
      <rtexprvalue>false</rtexprvalue>
   <description>bottom|middle|top|left|right
    Deprecated. This attribute specifies the position of an IMG, OBJECT, or APPLET with respect to its context.

The following values for align concern the object's position with respect to surrounding text:

    * bottom: means that the bottom of the object should be vertically aligned with the current baseline. This is the default value.
    * middle: means that the center of the object should be vertically aligned with the current baseline.
    * top: means that the top of the object should be vertically aligned with the top of the current text line.</description>
  </attribute>
		  	  <attribute>
   <name>vspace</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Deprecated. This attribute specifies the amount of white space to be inserted above and below an IMG, APPLET, or OBJECT. The default value is not specified, but is generally a small, non-zero length.</description>
  </attribute>
		  	  <attribute>
   <name>lastModified</name>
      <rtexprvalue>false</rtexprvalue>
   <description>lastModified</description>
  </attribute>
		  	  <attribute>
   <name>usemap</name>
      <rtexprvalue>false</rtexprvalue>
   <description>use client-side image map</description>
  </attribute>
		  	  <attribute>
   <name>standby</name>
      <rtexprvalue>false</rtexprvalue>
   <description>message to show while loading</description>
  </attribute>
		  	  <attribute>
   <name>border</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Deprecated. This attribute specifies the width of an IMG or OBJECT border, in pixels. The default value for this attribute depends on the user agent.</description>
  </attribute>
		  	  <attribute>
   <name>onblur</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Javascript code. The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation. It may be used with the same elements as onfocus.</description>
  </attribute>
		  	  <attribute>
   <name>value</name>
      <rtexprvalue>false</rtexprvalue>
   <description>value calculated at render time and store in  URI (also as part of cache Key ),
                at generation time passed to send method. Can be used for update cache at change of  generating
                conditions, and for create  beans as "Lightweight" pattern components (request scope).
                IMPORTANT: Since serialized data stored in URI, avoid to use big objects.</description>
  </attribute>
		  	  <attribute>
   <name>hreflang</name>
      <rtexprvalue>false</rtexprvalue>
   <description></description>
  </attribute>
		  	  <attribute>
   <name>codebase</name>
      <rtexprvalue>false</rtexprvalue>
   <description>base URI for classid, data, archive</description>
  </attribute>
		  	  <attribute>
   <name>type</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The content type of the resource designated by this hyperlink.</description>
  </attribute>
		  	  <attribute>
   <name>uriAttribute</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Name of attribute for resource-link attribute ( 'href' for &amp;lt;a&amp;gt;, 'src' for &amp;lt;img&amp;gt; or &amp;lt;script&amp;gt;, etc</description>
  </attribute>
		  	  <attribute>
   <name>onclick</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer button was clicked.</description>
  </attribute>
		  	  <attribute>
   <name>ismap</name>
      <rtexprvalue>false</rtexprvalue>
   <description>use server-side image map</description>
  </attribute>
		  	  <attribute>
   <name>onkeydown</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a key was pressed down.</description>
  </attribute>
		  	  <attribute>
   <name>onmousedown</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML: script expression; a pointer button was pressed down.</description>
  </attribute>
		  	  <attribute>
   <name>hspace</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Deprecated. This attribute specifies the amount of white space to be inserted to the left and right of an IMG, APPLET, or OBJECT. The default value is not specified, but is generally a small, non-zero length.</description>
  </attribute>
		  	  <attribute>
   <name>onfocus</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Javascript code.</description>
  </attribute>
		  </tag>
	 <tag>
  <name>log</name>
  <tag-class>org.ajax4jsf.taglib.ajax.LogTag</tag-class>
  <body-content>JSP</body-content>
  	<display-name>pop-up window with request log</display-name>
      <description>Encode javaScript to open popup window with client-side Log information.</description>
    	  <attribute>
   <name>level</name>
      <rtexprvalue>false</rtexprvalue>
   <description>log level, possible values : FATAL,ERROR,WARN,INFO,DEBUG,ALL</description>
  </attribute>
		  	  <attribute>
   <name>width</name>
      <rtexprvalue>false</rtexprvalue>
   <description>width of pop-up.</description>
  </attribute>
		  	  <attribute>
   <name>popup</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Render log as popup-window or as div element in page</description>
  </attribute>
		  	  <attribute>
   <name>height</name>
      <rtexprvalue>false</rtexprvalue>
   <description>height of pop-up</description>
  </attribute>
		  	  <attribute>
   <name>hotkey</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Keyboard key for activate ( in combination with CTRL+SHIFT ) log window.</description>
  </attribute>
		  	  <attribute>
   <name>rendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If false, this component will not be rendered.</description>
  </attribute>
		  	  <attribute>
   <name>binding</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Component binding.</description>
  </attribute>
		  	  <attribute>
   <name>name</name>
      <rtexprvalue>false</rtexprvalue>
   <description>name of pop-up window</description>
  </attribute>
		  	  <attribute>
   <name>id</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Every component may have an unique id. Automatically created if
		omitted.</description>
  </attribute>
		  </tag>
	 <tag>
  <name>form</name>
  <tag-class>org.ajax4jsf.taglib.ajax.FormTag</tag-class>
  <body-content>JSP</body-content>
  	<display-name>Ajax-related version of html form</display-name>
      <description>Ajax-related version of html form. Main difference with original component - all hidden fields,
		nessesary to command links alwais rendered, not depended of rendering links on initial page.</description>
    	  <attribute>
   <name>timeout</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Timeout ( in ms ) for request.</description>
  </attribute>
		  	  	  <attribute>
   <name>enctype</name>
      <rtexprvalue>false</rtexprvalue>
   <description>This attribute specifies the content type used to submit the form to the server (when the value of method is "post"). The default value for this attribute is "application/x-www-form-urlencoded". The value "multipart/form-data" should be used in combination with the INPUT element, type="file".</description>
  </attribute>
		  	  <attribute>
   <name>oncomplete</name>
      <rtexprvalue>false</rtexprvalue>
   <description>JavaScript code for call after request completed on client side</description>
  </attribute>
		  	  <attribute>
   <name>target</name>
      <rtexprvalue>false</rtexprvalue>
   <description>This attribute specifies the name of a frame where a document is to be opened.

By assigning a name to a frame via the name attribute, authors can refer to it as the "target" of links defined by other elements.</description>
  </attribute>
		  	  <attribute>
   <name>ajaxSubmit</name>
      <rtexprvalue>false</rtexprvalue>
   <description>ajaxSubmit</description>
  </attribute>
		  	  <attribute>
   <name>status</name>
      <rtexprvalue>false</rtexprvalue>
   <description>ID ( in format of call UIComopnent.findComponent() ) of Request status component.</description>
  </attribute>
		  	  <attribute>
   <name>rendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If false, this component will not be rendered.</description>
  </attribute>
		  	  <attribute>
   <name>reRender</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Id['s] ( in format of call  UIComopnent.findComponent()    ) of components, rendered in case of AjaxRequest  caused by this component. Can be single id, comma-separated list of Id's, or EL Expression  with array or Collection</description>
  </attribute>
	  <attribute>
   <name>targetId</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Alias for reRender : Id['s] ( in format of call  UIComopnent.findComponent()    ) of components, rendered in case of AjaxRequest  caused by this component. Can be single id, comma-separated list of Id's, or EL Expression  with array or Collection</description>
  </attribute>
		  	  <attribute>
   <name>id</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Every component may have an unique id. Automatically created if
		omitted.</description>
  </attribute>
		  	  <attribute>
   <name>requestDelay</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Delay ( in ms. ) for send ajax request on JavaScript event. In conjunction with events queue can reduce number of requests on keyboard or mouse move events.</description>
  </attribute>
		  	  <attribute>
   <name>eventsQueue</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Name of requests queue to avoid send next request before complete other from same event. Can be used to reduce number of requests of frequently events ( key press, mouse move etc ).</description>
  </attribute>
		  	  <attribute>
   <name>bypassUpdates</name>
      <rtexprvalue>false</rtexprvalue>
   <description>if true , after process validations phase skip updates of model beans an force render response. can be used for validate components input</description>
  </attribute>
		  	  <attribute>
   <name>limitToList</name>
      <rtexprvalue>false</rtexprvalue>
   <description>f "true", update on client side ONLY elements from this 'reRender' property. if "false" ( default ) update all rendered by ajax region components.</description>
  </attribute>
		  	  <attribute>
   <name>ajaxSingle</name>
      <rtexprvalue>false</rtexprvalue>
   <description>if true , submit ONLY one field/link, instead of all form controls.</description>
  </attribute>
		  	  <attribute>
   <name>acceptCharset</name>
      <rtexprvalue>false</rtexprvalue>
   <description>This attribute specifies the list of character encodings for input data that is accepted by the server processing this form. The value is a space- and/or comma-delimited list of charset values. The client must interpret this list as an exclusive-or list, i.e., the server is able to accept any single character encoding per entity received.

The default value for this attribute is the reserved string "UNKNOWN". User agents may interpret this value as the character encoding that was used to transmit the document containing this FORM element.</description>
  </attribute>
		  	  <attribute>
   <name>onreset</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The onreset event occurs when a form is reset. It only applies to the FORM element.</description>
  </attribute>
		  	  <attribute>
   <name>onsubmit</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The onsubmit event occurs when a form is submitted. It only applies to the FORM element.</description>
  </attribute>
		  	  <attribute>
   <name>ignoreDupResponses</name>
      <rtexprvalue>false</rtexprvalue>
   <description>ignoreDupResponses</description>
  </attribute>
		  	  <attribute>
   <name>binding</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Component binding.</description>
  </attribute>
		  	  <attribute>
   <name>accept</name>
      <rtexprvalue>false</rtexprvalue>
   <description>This attribute specifies a comma-separated list of content types that a server processing this form will handle correctly. User agents may use this information to filter out non-conforming files when prompting a user to select files to be sent to the server (cf. the INPUT element when type="file").</description>
  </attribute>
		  	  <attribute>
   <name>submitted</name>
      <rtexprvalue>false</rtexprvalue>
   <description>submitted</description>
  </attribute>
		  </tag>
	 <tag>
  <name>htmlCommandLink</name>
  <tag-class>org.ajax4jsf.taglib.ajax.HtmlCommandLinkTag</tag-class>
  <body-content>JSP</body-content>
  	<display-name>Ajax-related version of html command link</display-name>
      <description>Ajax-related version of html commandLink. Single difference with original component - all hidden fields,
		nessesary to command links alwais rendered, not depended of rendering links on initial page.</description>
    	  <attribute>
   <name>actionListener</name>
      <rtexprvalue>false</rtexprvalue>
   <description>MethodBinding pointing at method acception an ActionEvent with
		return type void.</description>
  </attribute>
		  	  <attribute>
   <name>title</name>
      <rtexprvalue>false</rtexprvalue>
   <description>title</description>
  </attribute>
		  	  	  <attribute>
   <name>shape</name>
      <rtexprvalue>false</rtexprvalue>
   <description>default|rect|circle|poly [CI]
    This attribute specifies the shape of a region. Possible values:

        * default: Specifies the entire region.
        * rect: Define a rectangular region.
        * circle: Define a circular region.
        * poly: Define a polygonal region.</description>
  </attribute>
		  	  <attribute>
   <name>target</name>
      <rtexprvalue>false</rtexprvalue>
   <description></description>
  </attribute>
		  	  <attribute>
   <name>charset</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The character encoding of the resource designated by this hyperlink.</description>
  </attribute>
		  	  <attribute>
   <name>rendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If false, this component will not be rendered.</description>
  </attribute>
		  	  <attribute>
   <name>id</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Every component may have an unique id. Automatically created if
		omitted.</description>
  </attribute>
		  	  <attribute>
   <name>dir</name>
      <rtexprvalue>false</rtexprvalue>
   <description>dir</description>
  </attribute>
		  	  <attribute>
   <name>rev</name>
      <rtexprvalue>false</rtexprvalue>
   <description>A reverse link from the anchor specified by this hyperlink to the current document. The value of this attribute is a space-separated list of link types.</description>
  </attribute>
		  	  <attribute>
   <name>styleClass</name>
      <rtexprvalue>false</rtexprvalue>
   <description>styleClass</description>
  </attribute>
		  	  <attribute>
   <name>accesskey</name>
      <rtexprvalue>false</rtexprvalue>
   <description>This attribute assigns an access key to an element. An access key is a single character from the document character set. Note. Authors should consider the input method of the expected reader when specifying an accesskey.</description>
  </attribute>
		  	  <attribute>
   <name>onkeypress</name>
      <rtexprvalue>false</rtexprvalue>
   <description>onkeypress</description>
  </attribute>
		  	  <attribute>
   <name>ondblclick</name>
      <rtexprvalue>false</rtexprvalue>
   <description>ondblclick</description>
  </attribute>
		  	  <attribute>
   <name>style</name>
      <rtexprvalue>false</rtexprvalue>
   <description>style</description>
  </attribute>
		  	  <attribute>
   <name>onmouseover</name>
      <rtexprvalue>false</rtexprvalue>
   <description>onmouseover</description>
  </attribute>
		  	  <attribute>
   <name>onblur</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Javascript code. The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation. It may be used with the same elements as onfocus.</description>
  </attribute>
		  	  <attribute>
   <name>onkeyup</name>
      <rtexprvalue>false</rtexprvalue>
   <description>onkeyup</description>
  </attribute>
		  	  <attribute>
   <name>value</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The current value for this component.</description>
  </attribute>
		  	  <attribute>
   <name>action</name>
      <rtexprvalue>false</rtexprvalue>
   <description>MethodBinding pointing at the application action to be invoked,
		if this UIComponent is activated by the user, during the Apply
		Request Values or Invoke Application phase of the request
		processing lifecycle, depending on the value of the immediate
		property.</description>
  </attribute>
		  	  <attribute>
   <name>tabindex</name>
      <rtexprvalue>false</rtexprvalue>
   <description>This attribute specifies the position of the current element in the tabbing order for the current document. This value must be a number between 0 and 32767. User agents should ignore leading zeros.</description>
  </attribute>
		  	  <attribute>
   <name>hreflang</name>
      <rtexprvalue>false</rtexprvalue>
   <description></description>
  </attribute>
		  	  <attribute>
   <name>type</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The content type of the resource designated by this hyperlink.</description>
  </attribute>
		  	  <attribute>
   <name>lang</name>
      <rtexprvalue>false</rtexprvalue>
   <description>lang</description>
  </attribute>
		  	  <attribute>
   <name>onclick</name>
      <rtexprvalue>false</rtexprvalue>
   <description>onclick</description>
  </attribute>
		  	  <attribute>
   <name>onmouseout</name>
      <rtexprvalue>false</rtexprvalue>
   <description>onmouseout</description>
  </attribute>
		  	  <attribute>
   <name>onkeydown</name>
      <rtexprvalue>false</rtexprvalue>
   <description>onkeydown</description>
  </attribute>
		  	  <attribute>
   <name>onmousedown</name>
      <rtexprvalue>false</rtexprvalue>
   <description>onmousedown</description>
  </attribute>
		  	  <attribute>
   <name>rel</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The relationship from the current document to the anchor specified by this hyperlink. The value of this attribute is a space-separated list of link types.</description>
  </attribute>
		  	  <attribute>
   <name>immediate</name>
      <rtexprvalue>false</rtexprvalue>
   <description>True means, that the default ActionListener should be executed
		immediately (i.e. during Apply Request Values phase of the
		request processing lifecycle), rather than waiting until the
		Invoke Application phase.</description>
  </attribute>
		  	  <attribute>
   <name>onfocus</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Javascript code.</description>
  </attribute>
		  	  <attribute>
   <name>onmouseup</name>
      <rtexprvalue>false</rtexprvalue>
   <description>onmouseup</description>
  </attribute>
		  	  <attribute>
   <name>binding</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Component binding.</description>
  </attribute>
		  	  <attribute>
   <name>onmousemove</name>
      <rtexprvalue>false</rtexprvalue>
   <description>onmousemove</description>
  </attribute>
		  	  <attribute>
   <name>coords</name>
      <rtexprvalue>false</rtexprvalue>
   <description>This attribute specifies the position and shape on the screen. The number and order of values depends on the shape being defined. Possible combinations:

    * rect: left-x, top-y, right-x, bottom-y.
    * circle: center-x, center-y, radius. Note. When the radius value is a percentage value, user agents should calculate the final radius value based on the associated object's width and height. The radius should be the smaller value of the two.
    * poly: x1, y1, x2, y2, ..., xN, yN. The first x and y coordinate pair and the last should be the same to close the polygon. When these coordinate values are not the same, user agents should infer an additional coordinate pair to close the polygon.

Coordinates are relative to the top, left corner of the object. All values are lengths. All values are separated by commas.</description>
  </attribute>
		  </tag>
	 <tag>
  <name>include</name>
  <tag-class>org.ajax4jsf.taglib.ajax.HtmlIncludeTag</tag-class>
  <body-content>JSP</body-content>
  	<display-name>include content of external view</display-name>
      <description>include content of external view. Navigation cases in included file change only viewId of included page,
		and don't perform navigation in root view.</description>
    	  <attribute>
   <name>layout</name>
      <rtexprvalue>false</rtexprvalue>
   <description>HTML layout for generated markup. Possible values: "block"
            for generating an HTML &amp;lt;div&amp;gt; element, "inline" for
            generating an HTML &amp;lt;span&amp;gt; element, and "none" for generating
            no HTML element. There is a minor exception for the "none" case
            where a child element has the property "rendered" set to "false".
            In this case, we create an empty &amp;lt;span&amp;gt; element with same ID
            as the child element to use as a placeholder for later
            processing.</description>
  </attribute>
		  	  <attribute>
   <name>lang</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Code describing the language used in the generated markup for this component.</description>
  </attribute>
		  	  <attribute>
   <name>title</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Advisory title information about markup elements generated for this component.</description>
  </attribute>
		  	  <attribute>
   <name>ajaxRendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>ajaxRendered</description>
  </attribute>
		  	  <attribute>
   <name>rendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>If false, this component will not be rendered.</description>
  </attribute>
		  	  <attribute>
   <name>id</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Every component may have an unique id. Automatically created if
		omitted.</description>
  </attribute>
		  	  <attribute>
   <name>dir</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Alternate textual description of the element rendered by this component.</description>
  </attribute>
		  	  	  <attribute>
   <name>styleClass</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Corresponds to the HTML class attribute.</description>
  </attribute>
		  	  <attribute>
   <name>keepTransient</name>
      <rtexprvalue>false</rtexprvalue>
   <description>keepTransient</description>
  </attribute>
		  	  <attribute>
   <name>style</name>
      <rtexprvalue>false</rtexprvalue>
   <description>CSS style(s) to be applied when this component is rendered.</description>
  </attribute>
		  	  <attribute>
   <name>binding</name>
      <rtexprvalue>false</rtexprvalue>
   <description>Component binding.</description>
  </attribute>
		  	  <attribute>
   <name>viewId</name>
      <rtexprvalue>false</rtexprvalue>
   <description>viewId for included page.</description>
  </attribute>
		  </tag>
	 <tag>
  <name>repeat</name>
  <tag-class>org.ajax4jsf.taglib.ajax.AjaxRepeat</tag-class>
  <body-content>JSP</body-content>
  	<display-name>Ajax-enabled repeater</display-name>
      <description></description>
    	  <attribute>
   <name>var</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The request-scope attribute under which the data object for the
		current row will be exposed when iterating.</description>
  </attribute>
		  	  <attribute>
   <name>varState</name>
      <rtexprvalue>false</rtexprvalue>
   <description>varState</description>
  </attribute>
		  	  <attribute>
   <name>value</name>
      <rtexprvalue>false</rtexprvalue>
   <description>value</description>
  </attribute>
		  	  	  <attribute>
   <name>rows</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The number of rows to be displayed, or zero for all remaining
		rows in the table.</description>
  </attribute>
		  	  	  	  <attribute>
   <name>first</name>
      <rtexprvalue>false</rtexprvalue>
   <description>The zero-relative row number of the first row to be displayed.</description>
  </attribute>
		  	  	  <attribute>
   <name>rendered</name>
      <rtexprvalue>false</rtexprvalue>
   <description>rendered</description>
  </attribute>
		  	  <attribute>
   <name>id</name>
      <rtexprvalue>false</rtexprvalue>
   <description>id</description>
  </attribute>
		  	  <attribute>
   <name>ajaxKeys</name>
      <rtexprvalue>false</rtexprvalue>
   <description>ajaxKeys</description>
  </attribute>
		  	  <attribute>
   <name>rowKey</name>
      <rtexprvalue>false</rtexprvalue>
   <description>rowKey</description>
  </attribute>
		  	  	  	  <attribute>
   <name>binding</name>
      <rtexprvalue>false</rtexprvalue>
   <description>binding</description>
  </attribute>
		  	  </tag>
</taglib>