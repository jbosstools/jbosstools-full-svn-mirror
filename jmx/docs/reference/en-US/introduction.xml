<?xml version="1.0" encoding="ISO-8859-1"?>
<chapter id="intruduction">
	<?dbhtml filename="introduction.html"?>

	<title>Introduction</title>
	<para>
		<property>JBoss Tools</property>&apos; JMX project is a fork of <ulink url="http://code.google.com/p/eclipse-jmx/">eclipse-jmx</ulink>, a project by Jeff Mesnil.
    It was forked with permission. </para>

	<section>
		<title>What is JMX?</title>
		<para>
			The Java Management Extensions (JMX) technology is a standard part of the Java Platform, Standard Edition (Java SE platform). The JMX technology was added to the platform in the Java 2 Platform, Standard Edition (J2SE) 5.0 release.
		</para>
		<para>
			The JMX technology provides a simple, standard way of managing resources such as applications, devices, and services. Because the JMX technology is dynamic, you can use it to monitor and manage resources as they are created, installed and implemented. You can also use the JMX technology to monitor and manage the Java Virtual Machine (Java VM).
		</para>
		<para>
			The JMX specification defines the architecture, design patterns, APIs, and services in the Java programming language for management and monitoring of applications and networks.
		</para>
		<para>
			Using the JMX technology, a given resource is instrumented by one or more Java objects known as Managed Beans, or MBeans. These MBeans are registered in a core-managed object server, known as an MBean server. The MBean server acts as a management agent and can run on most devices that have been enabled for the Java programming language. 
		</para>

		<para>
			The specifications define JMX agents that you use to manage any resources that have been correctly configured for management. A JMX agent consists of an MBean server, in which MBeans are registered, and a set of services for handling the MBeans. In this way, JMX agents directly control resources and make them available to remote management applications.
		</para>
		<para>
			The way in which resources are instrumented is completely independent from the management infrastructure. Resources can therefore be rendered manageable regardless of how their management applications are implemented.
		</para>
		<para>
			The JMX technology defines standard connectors (known as JMX connectors) that enable you to access JMX agents from remote management applications. JMX connectors using different protocols provide the same management interface. Consequently, a management application can manage resources transparently, regardless of the communication protocol used. JMX agents can also be used by systems or applications that are not compliant with the JMX specification, as long as those systems or applications support JMX agents. 
		</para>
		<para>
			<ulink url="http://java.sun.com/docs/books/tutorial/jmx/overview/index.html">Read more about JMX</ulink>.
		</para>
	</section>

	<section>
		<title>What is JMX Tools?</title>
		<para>
			<productname>JBoss JMX Tools</productname> allows you to setup multiple JMX connections, and provides a view for exploring the JMX tree and execute operations directly from within Eclipse.
		</para>

		<para>
			This chapter covers the basics of working with <productname>JMX plugin</productname>, which is used to manage Java applications (with Managed Beans) through JMX and its RMI Connector.
		</para>

		<figure>
			<title>JMX Tools</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/eclipse-jmx_0.2.png"/>
				</imageobject>
			</mediaobject>
		</figure>
	</section>

	<section>
		<title>Key Features of JMX Tools</title>
		<para>The table below lists the main features of JBoss JMX Tools:</para>
		<table>

			<title>Key Functionality for JBoss JMX Tools</title>
			<tgroup cols="3">

				<colspec colnum="1" align="left" colwidth="2*"/>
				<colspec colnum="2" colwidth="4*"/>
				<colspec colnum="3" align="left" colwidth="2*"/>

				<thead>
					<row>
						<entry>Feature</entry>
						<entry>Benefit</entry>
						<entry>Chapter</entry>
					</row>
				</thead>

				<tbody>

					<row>
						<entry>
							<para>MBean Explorer</para>
						</entry>
						<entry>
							<para>MBean Explorer is a useful view with a text filter that displays domains, mbeans, attributes, and operations inside a connection.</para>
						</entry>
						<entry>
							<xref linkend="mbean_explorer"/>
						</entry>
					</row>

					<row>
						<entry>
							<para>MBean Editor</para>
						</entry>
						<entry>
							<para>MBean Editor is a multi-page editor to manage MBeans.</para>
						</entry>
						<entry>
							<xref linkend="mbean_editor"/>
						</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
	</section>

	<section>
		<title>Requirements and Installation</title>
		<section>
			<title> Requirements</title>
			<para>Requirements to use <productname>JBoss  JMX Tools</productname> are the following:</para>

			<itemizedlist>
				<listitem>
					<para>
						<productname>JBoss JMX Tools</productname> is developed on Eclipse 3.4.x milestones</para>
				</listitem>
				<listitem>
					<para>
						<productname>JBoss JMX Tools</productname> requires that Eclipse is run on a JDK 1.5.0 or above (due to dependencies on JMX packages which were introduced in Java 1.5.0)
					</para>
				</listitem>
			</itemizedlist>
		</section>
		<section>
			<title>Installation</title>
			<para>Here, we are going to explain how to install the <productname>JMX plugin</productname> into Eclipse.</para>

			<para>
				<productname>JBoss JMX Tools</productname> is one module of the <productname>JBoss Tools</productname> project. <productname> JBoss JMX Tools</productname> has no dependency on any other part of <productname>JBoss Tools</productname>, and can be downloaded as a standalone Eclipse plugin. Even though the <productname>JMX Tools</productname> have no dependencies on other plugins, such as <productname>AS Tools</productname>, <productname>JBoss JMX Tools</productname> do depend on the JMX Tooling and even extend it.
			</para>

			<para>
				You can find the <productname>JBoss Tools</productname> plugins over at the <ulink url="http://labs.jboss.com/tools/download.html">download pages</ulink>. The only package you will need to get is the JBoss JMX Tooling, however the <productname>AS Tools</productname> would give you a wider experience and more options when using JMX with JBoss Servers. You can find further download and installation instructions on the JBoss Wiki in the <ulink url="http://www.jboss.org/tools/download/installation">InstallingJBossTools</ulink> section.
			</para>
		</section>
	</section>
</chapter>