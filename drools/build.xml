<project default="custom.build" name="jbosstools drools build.xml">

	<!-- Configuration Start -->
	<property name="COMPONENT" value="drools" />

	<!-- https://jira.jboss.org/browse/JBIDE-7344 from JBoss Tools 3.2.0.Beta2 onward, use this: -->
	<property name="drools.zip" value="drools-5.2.0.SNAPSHOT-eclipse-all.zip" />
	<property name="drools.URL" value="http://hudson.qa.jboss.com/hudson/job/drools/lastStableBuild/artifact/trunk/target" />

	<!-- https://jira.jboss.org/browse/JBIDE-7344 up to JBoss Tools 3.2.0.Beta1, use this: -->
	<property name="drools.zip" value="drools-5.1.1-eclipse-all.zip" />
	<property name="drools.URL" value="http://download.jboss.org/drools/release/5.1.1.34858.FINAL" />
	<!-- Configuration Ends -->

	<condition property="WORKINGDIR" value="/home/hudson/static_build_env/jbds/tools/sources">
		<available file="/home/hudson/static_build_env/jbds" type="dir" />
	</condition>
	<condition property="WORKINGDIR" value="${basedir}/../build" else="${basedir}/../">
		<available file="${basedir}/../build/${COMPONENT}" type="dir" />
	</condition>

	<mkdir dir="${WORKINGDIR}" />
	<echo level="info">WORKINGDIR = ${WORKINGDIR}</echo>

	<condition property="COMMON_TOOLS" value="/home/hudson/static_build_env/jbds/tools">
		<available file="/home/hudson/static_build_env/jbds" type="dir" />
	</condition>
	<condition property="COMMON_TOOLS" value="${WORKINGDIR}/../tools" else="${java.io.tmpdir}">
		<available file="${WORKINGDIR}/../tools" type="dir" />
	</condition>
	<mkdir dir="${COMMON_TOOLS}" />
	<echo level="info">COMMON_TOOLS = ${COMMON_TOOLS}</echo>

	<condition property="build.xml" value="/home/hudson/static_build_env/jbds/tools/sources/build/build.xml">
		<available file="/home/hudson/static_build_env/jbds/tools/sources/build/build.xml" type="file" />
	</condition>
	<condition property="build.xml" value="${basedir}/../build/build.xml">
		<available file="${basedir}/../build/build.xml" type="file" />
	</condition>
	<condition property="build.xml" value="${basedir}/../build.xml">
		<available file="${basedir}/../build.xml" type="file" />
	</condition>
	<!-- if can't calculate where build/build.xml is located, must pass in path from parent when calling this script -->

	<target name="custom.build"
	        description="fetch latest drools from their Hudson build + selectively unpack it"
	        depends="init"
	>
		<get src="${drools.URL}/${drools.zip}"
		     dest="${WORKINGDIR}/${COMPONENT}/${drools.zip}"
		     usetimestamp="true"
		/>
		<unzip src="${WORKINGDIR}/${COMPONENT}/${drools.zip}" dest="${WORKINGDIR}/${COMPONENT}" overwrite="true" />
		<!-- <delete file="${WORKINGDIR}/${COMPONENT}/${drools.zip}" quiet="true"/> -->

		<ant antfile="${build.xml}" target="unjarPlugins">
			<property name="COMPONENT" value="${COMPONENT}" />
		</ant>

		<delete dir="${WORKINGDIR}/${COMPONENT}"
		        quiet="true"
		        includes="
			LICENSE-ASL-2.0.txt, README_DEPENDENCIES.txt, 
			plugins/*.jar
			"
		/>

		<ant antfile="${build.xml}" target="renameFeatures">
			<property name="COMPONENT" value="${COMPONENT}" />
		</ant>

		<ant antfile="${build.xml}" target="snapshot2qualifier">
			<property name="COMPONENT" value="${COMPONENT}" />
		</ant>

		<ant antfile="${build.xml}" target="genBuildProperties">
			<property name="COMPONENT" value="${COMPONENT}" />
		</ant>

	</target>

	<target name="init">
		<ant antfile="${build.xml}" target="init" />
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="${COMMON_TOOLS}/ant-contrib.jar" />
			</classpath>
		</taskdef>
	</target>

</project>
