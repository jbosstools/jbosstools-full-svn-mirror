<project name="build" >

	<taskdef classpath="../../lib/ant-contrib.jar" resource="net/sf/antcontrib/antlib.xml"/>
	
	<loadproperties srcFile="../global.properties"/>
	<loadproperties srcFile="build.properties"/>

	<var name="build.dest" value=""/>
	<var name="current.platform" value=""/>
	<var name="keep.builder.zips" value="false"/>
		
  <target name="nightly">
	<tstamp/>
	<property name="product.versionTag" value="N${DSTAMP}${TSTAMP}"/>
	<property name="product.buildType" value="N"/>
	<property name="product.buildDesc" value="nightly"/>
	<runtarget target="build"/>
   </target>

   <target name="integration">
	<tstamp/>
	<property name="product.versionTag" value="I${DSTAMP}${TSTAMP}"/>
   	<property name="product.buildType" value="I"/>
	<property name="product.buildDesc" value="integration"/>
	<runtarget target="build"/>
   </target>

   <target name="release">
	<property name="product.versionTag" value="${releaseNumber}"/>
	<property name="product.buildType" value="R"/>
	<property name="product.buildDesc" value="release"/>

   	<property file="versionTags/${releaseNumber}.tags" prefix="versionTags"/>
   	
	<runtarget target="build"/>
   </target>

	<macrodef name="scp.fileset.trusted">
		<attribute name="todir" default=""/>
		<attribute name="relative" default="true"/>
		<element name="files-to-scp" implicit="true"/>
		<sequential>
			<if>
				<equals arg1="@{relative}" arg2="true"/>
				<then>
					<property name="directory" value="${scp.basedir}/@{todir}"/>
				</then>
				<else>
					<property name="directory" value="@{todir}"/>
				</else>
			</if>
			<scp
				trust="yes"
				todir="${ssh.username}@${ssh.host}:${directory}"
				keyfile="${ssh.key}"
				passphrase="${ssh.passphrase}">
				
				<files-to-scp/>
			</scp>
		</sequential>
	</macrodef>
	
   <target name="build">
   	
   	<property name="jbosside.download.root" value="${jbosside.download.url}/${product.buildDesc}/${product.versionTag}"/>
   	
	<delete includeemptydirs="true" failonerror="false">
		<fileset dir="${product.build.directory}" defaultexcludes="false">
			<include name="**/*"/>
			<exclude name="eclipse-SDK.zip"/>
		</fileset>
		<fileset dir="${requirement.root}" defaultexcludes="false">
			  <include name="**/return.properties"/>	
		</fileset>
	</delete>

	<for list="${build.types}" param="build.type">
		<sequential>
	
			<echo>Building ${product.name} with build type '@{build.type}'</echo>
		<if>

			<equals arg1="@{build.type}" arg2="bundle.eclipse"/>
			<then>
				<foreach list="${eclipse.builds}" delimiter="," target="build.platform" param="platform.archive" inheritall="true"/>
			</then>
			<elseif>
				<equals arg1="@{build.type}" arg2="standalone.product"/>
				<then>
		
   				<var name="build.dest" value="${product.build.directory}/${product.name}-${product.versionTag}-ALL"/>
					<runtarget target="build.standalone.release"/>
				</then>
			</elseif>
		</if>

		</sequential>
	</for>
   	
   	<antcall target="publish.results" inheritall="true"/>
   	<antcall target="send.notification.email" inheritall="true"/>
   </target>
	
	<target name="build.platform">
	    <propertyregex property="platform.name"
	              input="${platform.archive}"
	              regexp="${eclipse.version}-([^\.]*)\.(zip|tar\.gz)"
	              select="\1"
		      casesensitive="false" />
		
	 <var name="build.dest" value="${product.build.directory}/${product.name}-${product.versionTag}-Bundle-${platform.name}"/>
		<var name="current.platform" value="${platform.name}"/>
			

		<mkdir dir="${build.dest}"/>

		<if>
			<contains string="${platform.archive}" substring=".zip"/>
			<then>
				<runtarget target="extract.platform.zip"/>
				<runtarget target="build.bundled.release.zip"/>
			</then>
			<elseif>
				<contains string="${platform.archive}" substring="tar.gz"/>
				<then>
					<runtarget target="extract.platform.tar.gz"/>
					<runtarget target="build.bundled.release.tar.gz"/>
				</then>
			</elseif>
		</if>
		
		<delete dir="${build.dest}"/>
	</target>

	<target name="extract.platform.zip">
		<unzip dest="${build.dest}" src="${eclipse.archive.path}/${platform.archive}"/>
	</target>
	
	<target name="extract.platform.tar.gz">
		<gunzip dest="${build.dest}/temp.tar" src="${eclipse.archive.path}/${platform.archive}"/>
		<untar src="${build.dest}/temp.tar" dest="${build.dest}"/>
		<delete file="${build.dest}/temp.tar"/>
	</target>
	
	<target name="run.builders" unless="builders.built">
		<property name="builders.built" value="1"/>
		<for list="${builders}" param="builder">
		  <sequential>
		  		<if>
		  			<equals arg1="${product.buildDesc}" arg2="release"/>
		  			<then>
		  				<propertycopy override="true" name="builder.version" from="versionTags.@{builder}"/>
		  			</then>
		  			<else>
		  				<property name="builder.version" value="${product.versionTag}"/>
		  			</else>
		  		</if>
		  	
				<ant dir="${builder.root}" antfile="builder-wrap.xml" target="${product.buildDesc}" inheritAll="true">
					<property name="builder" value="@{builder}"/>
					<property name="versionTag" value="${builder.version}"/>
				</ant>

				<property name="buildType" value="${product.buildType}"/>
		  	
				<loadproperties srcFile="${builder.root}/@{builder}/build.properties">
					<filterchain>
						<linecontains>
							<contains value="buildLabel"/>
						</linecontains>
					</filterchain>
				</loadproperties>

				<mkdir dir="${product.build.directory}/builders/@{builder}"/>
				<copy todir="${product.build.directory}/builders/@{builder}">
					<fileset dir="${builder.build.path}/${buildLabel}">
						<include name="**/*"/>
					</fileset>
				</copy>
		 		<delete>
				  <fileset dir="${builder.build.path}/${buildLabel}">
						<include name="**/*.zip"/>
					</fileset>
				</delete>

			</sequential>
		</for>
	</target>

	<target name="extract.features.and.plugins">
		<unzip dest="${build.dest}/eclipse">
			<fileset dir="${product.build.directory}/builders">
				<include name="**/*.zip"/>
			</fileset>
		</unzip>
	</target>

	<target name="build.bundled.release" depends="run.builders,extract.features.and.plugins">
		<copy file="${splash.path}" todir="${build.dest}\eclipse\plugins\org.eclipse.platform_3.1.0"/>
	</target>
	
	<target name="build.standalone.release" depends="run.builders,extract.features.and.plugins">
		<zip destfile="${build.dest}.zip" basedir="${build.dest}"/>
		
		<antcall target="scp.archive" inheritall="true">
			<param name="scp.archive.path" value="${build.dest}.zip"/>
		</antcall>
		
		<antcall target="scp.builder.archives" inheritall="true"/>
	</target>

	<target name="build.bundled.release.zip" depends="build.bundled.release">
		<zip destfile="${build.dest}.zip" basedir="${build.dest}"/>
		
		<antcall target="scp.archive" inheritall="true">
			<param name="scp.archive.path" value="${build.dest}.zip"/>
		</antcall>
	</target>
		
	<target name="build.bundled.release.tar.gz" depends="build.bundled.release">
		<tar destfile="${build.dest}.tar" basedir="${build.dest}"/>
		<gzip destfile="${build.dest}.tar.gz" src="${build.dest}.tar"/>
		<delete file="${build.dest}.tar"/>

		<antcall target="scp.archive" inheritall="true">
			<param name="scp.archive.path" value="${build.dest}.tar.gz"/>
		</antcall>
	</target>
	
	<target name="scp.builder.archives" if="${enable.publishing}">
		<scp.fileset.trusted todir="${product.buildDesc}/${product.versionTag}">
			<fileset dir="${product.build.directory}/builders">
				<include name="**/*.zip"/>
			</fileset>
		</scp.fileset.trusted>
		<!--scp trust="true" todir="${ssh.username}@${ssh.host}:${scp.basedir}/${product.buildDesc}" keyfile="${ssh.key}" passphrase="${ssh.passphrase}">
			<fileset dir="${product.build.directory}/builders">
				<include name="**/*.zip"/>
			</fileset>
		</scp-->
	</target>
	
	<target name="scp.archive" if="${enable.publishing}">
		<scp.fileset.trusted todir="${product.buildDesc}/${product.versionTag}">
			<fileset file="${scp.archive.path}"/>
		</scp.fileset.trusted>
		<!--scp trust="true" todir="${ssh.username}@${ssh.host}:${scp.basedir}/${product.buildDesc}" keyfile="${ssh.key}" passphrase="${ssh.passphrase}">
			<fileset file="${scp.archive.path}"/>
		</scp-->
	</target>
	
	<target name="publish.results" if="${enable.publishing}">
		<ant antfile="buildResults.xml" target="build.results" inheritall="true"/>
		
		<scp.fileset.trusted todir="${product.buildDesc}/${product.versionTag}">
			<fileset file="${product.build.directory}/buildResults.html"/>
		</scp.fileset.trusted>
	</target>
	
	<target name="send.notification.email" if="${enable.notification}">
		<property name="email.subject" value="Build ${product.versionTag} results"/>
		<property name="email.body">
			The results for ${product.versionTag} have been posted at this address:
						${jbosside.download.root}/buildResults.html
		</property>
		
		<mail subject="${email.subject}">
			<from address="jbosside-build@jboss.org"/>
			<to address="${email.list}"/>
			<message>${email.body}</message>
		</mail>
	</target>
</project>
