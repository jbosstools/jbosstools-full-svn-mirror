<project name="build" >

	<taskdef classpath="../../lib/ant-contrib.jar" resource="net/sf/antcontrib/antlib.xml"/>
	
	<loadproperties srcFile="../global.properties"/>
	<loadproperties srcFile="build.properties"/>
	<loadproperties srcfile="build.requires"/>
	
	<import file="../common/scp.xml"/>
	<import file="../common/buildRequirements.xml"/>
	
	<var name="build.dest" value=""/>
	<var name="current.platform" value=""/>
	<var name="keep.builder.zips" value="false"/>
	
  <target name="nightly">
	<tstamp/>
	<property name="product.versionTag" value="${DSTAMP}${TSTAMP}-nightly"/>
	<property name="product.buildType" value="N"/>
	<property name="product.buildDesc" value="nightly"/>
	<property name="product.expandedBuildDesc" value="nightly"/>
  	<runtarget target="build"/>
   </target>

   <target name="integration">
	<tstamp/>
	<property name="product.versionTag" value="${DSTAMP}${TSTAMP}-integration"/>
   	<property name="product.buildType" value="I"/>
	<property name="product.buildDesc" value="integration"/>
   	<property name="product.expandedBuildDesc" value="integration"/>
	<runtarget target="build"/>
   </target>

   <target name="release">
	<property name="product.versionTag" value="${releaseNumber}"/>
	<property name="product.buildType" value="R"/>
	<property name="product.buildDesc" value="release"/>
   	<property name="product.expandedBuildDesc" value="${releaseType}"/>
   	<property file="versionTags/${releaseNumber}.tags" prefix="versionTags"/>
   	
	<runtarget target="build"/>
   </target>
	
   <target name="build">
   	<property name="jbosside.download.root" value="${jbosside.download.url}/builds/${product.buildDesc}/${product.versionTag}"/>
   	<property name="product.build.directory" value="${product.build.root}/${product.versionTag}"/>		
   	
   	<mkdir dir="${product.build.directory}"/>
   	<mkdir dir="${product.build.directory}/all"/>
   	<mkdir dir="${product.build.directory}/bundle"/>
   	
	<delete includeemptydirs="true" failonerror="false">
		<fileset dir="${product.build.root}" defaultexcludes="false">
			<include name="**/*"/>
			<exclude name="**/eclipse-SDK.*"/>
		</fileset>
		<fileset dir="${requirement.root}" defaultexcludes="false">
			  <include name="**/return.properties"/>	
		</fileset>
	</delete>

   	<property file="build.requires"/>
   	<buildRequirements requirements="${product.requires}"/>
	
	<echo file="${product.build.root}/buildData.properties">
		upload.to=${product.buildDesc}/${product.versionTag}
		product.build.directory=${product.build.directory}
	</echo>

	<for list="${build.types}" param="build.type">
		<sequential>
			<echo>Building ${product.name} with build type '@{build.type}'</echo>
			<switch value="@{build.type}">
				<case value="bundle.eclipse">
					<foreach list="${eclipse.builds}" delimiter="," target="build.platform" param="platform.archive" inheritall="true"/>
				</case>
				<case value="standalone.product">
					<var name="build.dest" value="${product.build.directory}/all/${product.name}-${product.versionTag}-ALL"/>
					<runtarget target="build.standalone.release"/>
				</case>
				<case value="tests">
					<runBuilder builder="tests"/>
					<ant target="testBuild" antfile="${builder.root}/tests/testBuild.xml" dir="${builder.root}/tests"/>
				</case>
			</switch>
		</sequential>
	</for>

	<ant antfile="buildResults.xml" target="build.results" inheritall="true"/>
   	
   	<runtarget target="publish.results"/>
   	<runtarget target="send.notification.email"/>
   </target>
	
	<target name="build.platform">
	    <propertyregex property="platform.name"
	              input="${platform.archive}"
	              regexp="${eclipse.version}-([^\.]*)\.(zip|tar\.gz)"
	              select="\1"
		      casesensitive="false" />
		
	 <var name="build.dest" value="${product.build.directory}/bundle/${product.name}-${product.versionTag}-Bundle-${platform.name}"/>
		<var name="current.platform" value="${platform.name}"/>
			

		<mkdir dir="${build.dest}"/>

		<if>
			<contains string="${platform.archive}" substring=".zip"/>
			<then>
				<runtarget target="extract.platform.zip"/>
				<runtarget target="build.bundled.release.zip"/>
			</then>
			<elseif>
				<contains string="${platform.archive}" substring="tar.gz"/>
				<then>
					<runtarget target="extract.platform.tar.gz"/>
					<runtarget target="build.bundled.release.tar.gz"/>
				</then>
			</elseif>
		</if>
		
		<delete dir="${build.dest}"/>
	</target>

	<target name="extract.platform.zip">
		<unzip dest="${build.dest}" src="${eclipse.archive.path}/${platform.archive}"/>
	</target>
	
	<target name="extract.platform.tar.gz">
		<gunzip dest="${build.dest}/temp.tar" src="${eclipse.archive.path}/${platform.archive}"/>
		<untar src="${build.dest}/temp.tar" dest="${build.dest}"/>
		<delete file="${build.dest}/temp.tar"/>
	</target>
	
	<macrodef name="runBuilder">
		<attribute name="builder"/>
		<sequential>
			<var name="cvsTag" unset="true"/>
			<if>
	  			<equals arg1="${product.buildDesc}" arg2="release"/>
	  			<then>
	  				<propertycopy override="true" name="builder.version" from="versionTags.@{builder}"/>
	  				<propertycopy override="true" name="cvsTag" from="versionTags.@{builder}.cvs"/>
	  			</then>
	  			<else>
	  				<if>
	  					<isset property="@{builder}.cvs"/>
	  					<then>
	  		  				<propertycopy override="true" name="cvsTag" from="@{builder}.cvs"/>
	  					</then>
	  					<else>
		  					<propertycopy override="true" name="cvsTag" from="default.cvs.tag"/>
	  					</else>
	  				</if>
	  				<property name="builder.version" value="${product.versionTag}"/>
	  			</else>
	  		</if>
	  	
			<ant dir="${builder.root}" antfile="builder-wrap.xml" target="${product.buildDesc}" inheritAll="true">
				<property name="builder" value="@{builder}"/>
				<property name="versionTag" value="${builder.version}"/>
				<property name="cvsTag" value="${cvsTag}"/>
			</ant>

			<property name="buildType" value="${product.buildType}"/>
	  	
			<loadproperties srcFile="${builder.root}/@{builder}/build.properties">
				<filterchain>
					<linecontains>
						<contains value="buildLabel"/>
					</linecontains>
				</filterchain>
			</loadproperties>

			<mkdir dir="${product.build.directory}/@{builder}"/>
			<copy todir="${product.build.directory}/@{builder}">
				<fileset dir="${builder.build.path}/${buildLabel}">
					<include name="**/*"/>
				</fileset>
			</copy>
	  	
			<checksum>
				<fileset dir="${product.build.directory}/@{builder}">
					<include name="**/*.zip"/>
				</fileset>
			</checksum>
	  	
	 		<delete>
			  <fileset dir="${builder.build.path}/${buildLabel}">
					<include name="**/*.zip"/>
				</fileset>
			</delete>
		</sequential>
	</macrodef>
	
	<target name="run.builders" unless="builders.built">
		<property name="builders.built" value="1"/>
		<for list="${builders}" param="builder">
			<sequential>
		  		<runBuilder builder="@{builder}"/>
			</sequential>
		</for>
	</target>

	<target name="extract.features.and.plugins">
		<unzip dest="${build.dest}/eclipse">
			<fileset dir="${product.build.directory}">
				<include name="**/*.zip"/>
				<exclude name="all/**/*.zip"/>
				<exclude name="bundle/**/*.zip"/>
				<exclude name="tests/**/*.zip"/>
			</fileset>
		</unzip>
	</target>

	<target name="build.bundled.release" depends="run.builders,extract.features.and.plugins">
		<copy file="${splash.path}" todir="${build.dest}\eclipse\plugins\org.eclipse.platform_3.1.1"/>
	</target>
	
	<target name="build.standalone.release" depends="run.builders,extract.features.and.plugins">
		<zip destfile="${build.dest}.zip" basedir="${build.dest}"/>
		<checksum file="${build.dest}.zip"/>
		
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${build.dest}" defaultexcludes="false">
				<include name="**/*"/>
			</fileset>
		</delete>
		
		<!--antcall target="scp.archive" inheritall="true">
			<param name="scp.archive.path" value="${build.dest}.zip"/>
		</antcall>
		
		<antcall target="scp.builder.archives" inheritall="true"/-->
	</target>

	<target name="build.bundled.release.zip" depends="build.bundled.release">
		<zip destfile="${build.dest}.zip" basedir="${build.dest}"/>
		<checksum file="${build.dest}.zip"/>
		
		<!--antcall target="scp.archive" inheritall="true">
			<param name="scp.archive.path" value="${build.dest}.zip"/>
		</antcall-->
	</target>
		
	<target name="build.bundled.release.tar.gz" depends="build.bundled.release">
		<tar destfile="${build.dest}.tar" basedir="${build.dest}"/>
		<gzip destfile="${build.dest}.tar.gz" src="${build.dest}.tar"/>
		<delete file="${build.dest}.tar"/>
		<checksum file="${build.dest}.tar.gz"/>
		
		<!--antcall target="scp.archive" inheritall="true">
			<param name="scp.archive.path" value="${build.dest}.tar.gz"/>
		</antcall-->
	</target>
	
	<target name="scp.builder.archives" if="enable.publishing">
		<scp.fileset.trusted todir="${product.buildDesc}">
			<fileset dir="${product.build.directory}/builders">
				<include name="**/*.zip"/>
				<include name="**/*.MD5"/>
			</fileset>
		</scp.fileset.trusted>
		<!--scp trust="true" todir="${ssh.username}@${ssh.host}:${scp.basedir}/${product.buildDesc}" keyfile="${ssh.key}" passphrase="${ssh.passphrase}">
			<fileset dir="${product.build.directory}/builders">
				<include name="**/*.zip"/>
			</fileset>
		</scp-->
	</target>
	
	<target name="scp.archive" if="enable.publishing">
		<scp.fileset.trusted todir="${product.buildDesc}">
			<fileset file="${scp.archive.path}"/>
		</scp.fileset.trusted>
		<!--scp trust="true" todir="${ssh.username}@${ssh.host}:${scp.basedir}/${product.buildDesc}" keyfile="${ssh.key}" passphrase="${ssh.passphrase}">
			<fileset file="${scp.archive.path}"/>
		</scp-->
	</target>
	
	<target name="publish.results" if="enable.publishing">
		<scp.fileset.trusted todir="${product.buildDesc}">
			<fileset dir="${product.build.root}">
				<exclude name="eclipse/**/*" />
				<exclude name="eclipse-SDK.zip"/>
				<exclude name="eclipse-SDK.tar.gz"/>
				<exclude name="**/eclipse/**/*"/>
				<exclude name="buildData.properties"/>
			</fileset>
		</scp.fileset.trusted>
		
		<scp.fileset.trusted todir="${product.buildDesc}/${product.versionTag}">
			<fileset file="${product.build.directory}/buildResults.html"/>
		</scp.fileset.trusted>
		
		<!--scp.fileset.trusted todir="${product.buildDesc}/${product.versionTag}/tests">
			<fileset dir="${test-root}">
				<include name="test-results/**/*"/>
			</fileset>
		</scp.fileset.trusted-->
	</target>
	
	<target name="send.notification.email" if="enable.notification">
		<property file="email.properties"/>

		<mail subject="${email.subject}" messagefile="emailBody.html" messagemimetype="text/html">
			<from address="jbosside-build@jboss.org"/>
			<to address="${email.list}"/>
		</mail>
	</target>
</project>
