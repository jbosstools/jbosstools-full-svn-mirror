<project default="build.results">
	<import file="../common/scp.xml"/>
	<import file="../common/common.xml"/>

	<property name="jbosside.download.root" value="${jbosside.download.url}/builds/${product.buildDesc}/${product.versionTag}"/>

	<macrodef name="get.status">
		<attribute name="file"/>
		<attribute name="property"/>
		<sequential>
			<if>
				<available file="@{file}"/>
				<then><property name="@{property}" value="OK"/></then>
				<else><property name="@{property}" value="FAIL"/></else>
			</if>
		</sequential>
	</macrodef>
	
	<target name="get.build.properties">
		<load.property file="../../requirements/eclipse/build.properties" property="eclipseBuildID"/>
		<load.property file="../../requirements/eclipse/build.properties" property="eclipseURL"/>
		<property name="eclipse.download.url" value="${eclipseURL}/eclipse-SDK-${eclipseBuildID}-win32.zip"/>
		
		<load.property file="../../requirements/emf-sdo-xsd/build.properties" property="build.uri" dest="emf.sdo.xsd.build.uri"/>
		<load.property file="../../requirements/emf-sdo-xsd/build.properties" property="build.archive" dest="emf.sdo.xsd.build.archive"/>
		<load.property file="../../requirements/gef/build.properties" property="build.uri" dest="gef.build.uri"/>
		<load.property file="../../requirements/gef/build.properties" property="build.archive" dest="gef.build.archive"/>
		<load.property file="../../requirements/jem/build.properties" property="build.uri" dest="jem.build.uri"/>
		<load.property file="../../requirements/jem/build.properties" property="build.archive" dest="jem.build.archive"/>
		<load.property file="../../requirements/webtools/build.properties" property="build.uri" dest="webtools.build.uri"/>
		<load.property file="../../requirements/webtools/build.properties" property="build.archive" dest="webtools.build.archive"/>

		<propertyregex property="webtoolsBuildID"
			input="${webtools.build.archive}"
			regexp="wtp-(.+).zip"
			select="\1"
			casesensitive="false" />
		
		<get.version.tag builder="aop" property="aop.versionTag"/>
		<get.version.tag builder="ejb3" property="ejb3.versionTag"/>
		<get.version.tag builder="core" property="core.versionTag"/>
		<load.property file="../hibernate-tools/build.properties" property="hibernate.tools.release"/>
		<get.version.tag builder="hibernate-tools" property="hibernate-tools.versionTag"/>
		<get.version.tag builder="jbpm" property="jbpm.versionTag"/>
		
		<loadfile property="build.information" srcfile="buildInfo/${product.buildDesc}.html"/>
		
		<property name="jbosside-all-filename" value="${product.name}-${product.versionTag}-ALL.zip"/>
		<property name="jbosside-win32-bundle-filename" value="${product.name}-${product.versionTag}-Bundle-win32.zip"/>
		<property name="jbosside-linux-gtk2-bundle-filename" value="${product.name}-${product.versionTag}-Bundle-linux-gtk.tar.gz"/>
		<property name="jbosside-core-filename" value="JBossIDE-CORE-${core.versionTag}.zip"/>
		<property name="jbosside-aop-filename" value="JBossIDE-AOP-Developer-${aop.versionTag}.zip"/>
		<property name="jbosside-hibernate-tools-filename" value="HibernateTools-${hibernate.tools.release}.${hibernate-tools.versionTag}.zip"/>
		<property name="jbosside-jbpm-filename" value="jBPM-Designer-${jbpm.versionTag}.zip"/>
		<property name="jbosside-ejb3-filename" value="JBossIDE-EJB3-Tools-${ejb3.versionTag}.zip"/>
	
		<property name="all-file" value="${product.build.directory}/all/${jbosside-all-filename}" />
		<property name="win32-bundle-file" value="${product.build.directory}/bundle/${jbosside-win32-bundle-filename}" />
		<property name="linux-gtk2-bundle-file" value="${product.build.directory}/bundle/${jbosside-linux-gtk2-bundle-filename}" />
		<property name="core-file" value="${product.build.directory}/core/${jbosside-core-filename}" />
		<property name="aop-file" value="${product.build.directory}/aop/${jbosside-aop-filename}" />
		<property name="hibernate-tools-file" value="${product.build.directory}/hibernate-tools/${jbosside-hibernate-tools-filename}" />
		<property name="jbpm-file" value="${product.build.directory}/jbpm/${jbosside-jbpm-filename}" />
		<property name="ejb3-file" value="${product.build.directory}/ejb3/${jbosside-ejb3-filename}" />
		
		<get.status file="${all-file}" property="jbosside-all-status"/>
		<get.status file="${win32-bundle-file}" property="jbosside-win32-bundle-status"/>
		<get.status file="${linux-gtk2-bundle-file}" property="jbosside-linux-gtk2-bundle-status"/>
		<get.status file="${core-file}" property="jbosside-core-status"/>
		<get.status file="${aop-file}" property="jbosside-aop-status"/>
		<get.status file="${hibernate-tools-file}" property="jbosside-hibernate-tools-status"/>
		<get.status file="${jbpm-file}" property="jbosside-jbpm-status"/>
		<get.status file="${ejb3-file}" property="jbosside-ejb3-status"/>
		
		<length file="${all-file}" property="all-file-size"  />
		<length file="${win32-bundle-file}" property="win32-bundle-file-size"  />
		<length file="${linux-gtk2-bundle-file}" property="linux-gtk2-bundle-file-size"  />
		<length file="${core-file}" property="core-file-size"  />
		<length file="${aop-file}" property="aop-file-size"  />
		<length file="${hibernate-tools-file}" property="hibernate-tools-file-size"  />
		<length file="${jbpm-file}" property="jbpm-file-size"  />
		<length file="${ejb3-file}" property="ejb3-file-size"  />
		
		<loadfile srcfile="${all-file}.MD5" property="all-file-md5" failonerror="false" />
		<loadfile srcfile="${win32-bundle-file}.MD5" property="win32-bundle-file-md5" failonerror="false" />
		<loadfile srcfile="${linux-gtk2-bundle-file}.MD5" property="linux-gtk2-bundle-file-md5" failonerror="false" />
		<loadfile srcfile="${core-file}.MD5" property="core-file-md5" failonerror="false" />
		<loadfile srcfile="${aop-file}.MD5" property="aop-file-md5" failonerror="false" />
		<loadfile srcfile="${hibernate-tools-file}.MD5" property="hibernate-tools-file-md5" failonerror="false" />
		<loadfile srcfile="${jbpm-file}.MD5" property="jbpm-file-md5" failonerror="false" />
		<loadfile srcfile="${ejb3-file}.MD5" property="ejb3-file-md5" failonerror="false" />
		
		<tstamp>
			<format pattern="MM/dd/yyyy HH:mm" property="build-date"/>
		</tstamp>
		
		<!-- load test results -->
		<property file="${product.build.directory}/tests/test-results/org.jboss.ide.eclipse.tests.properties"/>
		
	</target>
	
	<target name="update.builds.xml" depends="get.build.properties">
		<get src="${jbosside.download.url}/builds/builds.xml" dest="builds.xml"/>
		
		<loadfile property="builds-xml" srcfile="builds.xml" >
			<filterchain><expandproperties/></filterchain>
		</loadfile>
		<loadfile property="token" srcfile="labs.jboss.com/builds-token.xml">
			<filterchain><expandproperties/></filterchain>
		</loadfile>
		<loadfile property="build-xml" srcfile="labs.jboss.com/builds-build.xml">
			<filterchain><expandproperties/></filterchain>
		</loadfile>
		
		<propertyregex property="new-builds-xml"
			input="${builds-xml}"
			regexp="(${token})"
			replace="${build-xml}"
			casesensitive="false" />
		
		<echo file="builds.xml" message="${new-builds-xml}"/>
		
		<scp.fileset.trusted>
			<fileset file="builds.xml"/>
		</scp.fileset.trusted>
		
		<delete file="builds.xml"/>
	</target>
			
	<target name="build.results" depends="get.build.properties,update.builds.xml">
		<tstamp>
			<format property="date" pattern="MMMM d yyyy"/>
		</tstamp>
		
		<filterset id="results-filter-set" begintoken="%" endtoken="%">
			<filter token="build-type" value="${product.buildDesc}"/>
			<filter token="jbosside-build-name" value="${product.versionTag}"/>
			<filter token="jbosside-download-root" value="${jbosside.download.root}"/>
			<filter token="date" value="${date}"/>
			
			<filter token="eclipse-download-url" value="${eclipse.download.url}"/>
			<filter token="eclipse-target" value="eclipse-SDK-${eclipseBuildID}-win32.zip"/>
			<filter token="webtools-download-url" value="${webtools.build.uri}/${webtools.build.archive}"/>
			<filter token="webtools-target" value="${webtools.build.archive}"/>
			<filter token="gef-download-url" value="${gef.build.uri}/${gef.build.archive}"/>
			<filter token="gef-target" value="${gef.build.archive}"/>
			<filter token="emf-sdo-xsd-download-url" value="${emf.sdo.xsd.build.uri}/${emf.sdo.xsd.build.archive}"/>
			<filter token="emf-sdo-xsd-target" value="${emf.sdo.xsd.build.archive}"/>
			<filter token="jem-download-url" value="${jem.build.uri}/${jem.build.archive}"/>
			<filter token="jem-target" value="${jem.build.archive}"/>
			
			<filter token="jbosside-all-status" value="${jbosside-all-status}"/>
			<filter token="jbosside-all-filename" value="${jbosside-all-filename}"/>
			<filter token="jbosside-win32-bundle-status" value="${jbosside-win32-bundle-status}"/>
			<filter token="jbosside-win32-bundle-filename" value="${jbosside-win32-bundle-filename}"/>
			<filter token="jbosside-linux-gtk2-bundle-status" value="${jbosside-linux-gtk2-bundle-status}"/>
			<filter token="jbosside-linux-gtk2-bundle-filename" value="${jbosside-linux-gtk2-bundle-filename}"/>
			<filter token="jbosside-core-status" value="${jbosside-core-status}"/>
			<filter token="jbosside-core-filename" value="${jbosside-core-filename}"/>
			<filter token="jbosside-aop-status" value="${jbosside-aop-status}"/>
			<filter token="jbosside-aop-filename" value="${jbosside-aop-filename}"/>
			<filter token="jbosside-hibernate-tools-status" value="${jbosside-hibernate-tools-status}"/>
			<filter token="jbosside-hibernate-tools-filename" value="${jbosside-hibernate-tools-filename}"/>
			<filter token="jbosside-jbpm-status" value="${jbosside-jbpm-status}"/>
			<filter token="jbosside-jbpm-filename" value="${jbosside-jbpm-filename}"/>
			<filter token="jbosside-ejb3-status" value="${jbosside-ejb3-status}"/>
			<filter token="jbosside-ejb3-filename" value="${jbosside-ejb3-filename}"/>
			<filter token="build-information" value="${build.information}"/>
			
			<filter token="junit-error-count" value="${junit.errorCount}"/>
			<filter token="junit-failure-count" value="${junit.failureCount}"/>
			<filter token="junit-test-count" value="${junit.totalTests}"/>
		</filterset>
			
		<copy todir="${product.build.directory}" overwrite="true">
			<fileset file="buildResults.html.template"/>
			<mapper type="glob" from="*.html.template" to="*.html"/>
			<filterset refid="results-filter-set"/>
		</copy>

		<copy todir="." overwrite="true">
			<fileset file="emailBody.html.template"/>
			<mapper type="glob" from="*.html.template" to="*.html"/>
			<filterset refid="results-filter-set"/>
		</copy>
		
		<copy todir="${product.build.directory}/images">
			<fileset dir="images">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>
	
	<property file="../global.properties"/>
	<property file="build.properties"/>
	
	<target name="publish.log" if="enable.publishing">

		<property file="${product.build.root}/buildData.properties"/>
			
		<zip destfile="${product.build.directory}/build.log.zip">
			<fileset file="${build.root}/builders/build.log"/>
		</zip>
		<delete>
			<fileset file="${build.root}/builders/build.log"/>
		</delete>
		
		<scp.fileset.trusted todir="${upload.to}">
			<fileset file="${product.build.directory}/build.log.zip"/>
			<fileset file="${product.build.directory}/buildResults.html"/>
		</scp.fileset.trusted>
			
		<!--scp trust="true" todir="${ssh.username}@${ssh.host}:${scp.basedir}/${upload.to}" keyfile="${ssh.key}" passphrase="${ssh.passphrase}">
			<fileset file="${build.dir}/build.log.zip"/>
		</scp-->
	</target>
</project>