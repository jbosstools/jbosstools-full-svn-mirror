<project default="build.results">

	<import file="../common/scp.xml"/>
	
	<macrodef name="load.property">
		<attribute name="file"/>
		<attribute name="property"/>
		<attribute name="dest" default="@{property}"/>
		
		<sequential>
			<loadproperties srcfile="@{file}" >
				<filterchain>
					<linecontains>
						<contains value="@{property}"/>
					</linecontains>
					<replacestring from="@{property}" to="@{dest}"/>
				</filterchain>
			</loadproperties>
		</sequential>
	</macrodef>
	
	<macrodef name="get.version.tag">
		<attribute name="property"/>
		<attribute name="builder"/>
		
		<sequential>
			<if>
				<equals arg1="${product.buildType}" arg2="R"/>
				<then>
					<loadproperties srcfile="versionTags/${product.versionTag}.tags">
						<filterchain>
							<linecontains>
								<contains value="@{builder}"/>
							</linecontains>
							<replacestring from="@{builder}" to="@{property}"/>
						</filterchain>
					</loadproperties>
				</then>
				<else>
					<property name="@{property}" value="${product.versionTag}"/>
				</else>
			</if>
		</sequential>
	</macrodef>
		
	<target name="get.build.properties">
		<load.property file="../../requirements/eclipse/build.properties" property="eclipseBuildID"/>
		<load.property file="../../requirements/emf-sdo-xsd/build.properties" property="build.archive" dest="emf.xsd.sdo.build.archive"/>
		<load.property file="../../requirements/gef/build.properties" property="build.archive" dest="gef.build.archive"/>
		<load.property file="../../requirements/jem/build.properties" property="build.archive" dest="jem.build.archive"/>
		<load.property file="../../requirements/webtools/build.properties" property="build.archive" dest="webtools.build.archive"/>

		<get.version.tag builder="aop" property="aop.versionTag"/>
		<get.version.tag builder="ejb3" property="ejb3.versionTag"/>
		<get.version.tag builder="core" property="core.versionTag"/>
		<load.property file="../hibernate-tools/build.properties" property="hibernate.tools.release"/>
		<get.version.tag builder="hibernate-tools" property="hibernate-tools.versionTag"/>
		<get.version.tag builder="jbpm" property="jbpm.versionTag"/>
	</target>
		
	<target name="build.results" depends="get.build.properties">
		<copy todir="${product.build.directory}">
			<fileset file="buildResults.html.template"/>
			<mapper type="glob" from="*.html.template" to="*.html"/>
			<filterset begintoken="%" endtoken="%">
				<filter token="build-type" value="${product.buildDesc}"/>
				<filter token="jbosside-build-name" value="${product.versionTag}"/>
				<filter token="jbosside-download-root" value="${jbosside.download.root}"/>
				
				<filter token="eclipse-target" value="${eclipseBuildID}"/>
				<filter token="webtools-target" value="${webtools.build.archive}"/>
				<filter token="gef-target" value="${gef.build.archive}"/>
				<filter token="emf-xsd-sdo-target" value="${emf.xsd.sdo.build.archive}"/>
				<filter token="jem-target" value="${jem.build.archive}"/>
				
				<filter token="jbosside-all-filename" value="${product.name}-${product.versionTag}-ALL.zip"/>
				<filter token="jbosside-win32-bundle-filename" value="${product.name}-${product.versionTag}-Bundle-win32.zip"/>
				<filter token="jbosside-linux-gtk2-bundle-filename" value="${product.name}-${product.versionTag}-Bundle-linux-gtk.tar.gz"/>
				<filter token="jbosside-core-filename" value="JBossIDE-CORE-${core.versionTag}.zip"/>
				<filter token="jbosside-aop-filename" value="JBossIDE-AOP-Developer-${aop.versionTag}.zip"/>
				<filter token="jbosside-hibernate-tools-filename" value="HibernateTools-${hibernate.tools.release}.${hibernate-tools.versionTag}.zip"/>
				<filter token="jbosside-jbpm-filename" value="jBPM-Designer-${jbpm.versionTag}.zip"/>
				<filter token="jbosside-ejb3-filename" value="JBossIDE-EJB3-Tools-${ejb3.versionTag}.zip"/>
                <filter token="build-information" value="&lt;h2&gt;Warning&lt;/h2&gt;
                
                &lt;p&gt;These nightly builds are direct builds from CVS and are provided as-is. Do not expect everything works.&lt;/p&gt;
                
                &lt;p&gt; Any suggestions/issues should be posted
                on the relevant product forums and should clearly indicate that you are using a nightly build! &lt;/p&gt;
                
                &lt;h2&gt;Versioning/Updates&lt;/h2&gt;
                &lt;p&gt;These nightly builds are versioned with a Ntimestamp and thus should be picked up as a newer version than 
                any existing plugin installation. But if you have issues with the installation then try and 
                remove any older versions of the plugins and start eclipse with a &lt;code&gt;-clean&lt;/code&gt; argument to make it rescan 
                the plugins/features directories.&lt;/p&gt;"/>          
			</filterset>
		</copy>
		
		<echo file="${product.build.root}/log.properties">
			upload.to=${product.buildDesc}/${product.versionTag}
			build.dir=${product.build.directory}
		</echo>
	</target>
	
	<property file="../global.properties"/>
	<property file="build.properties"/>
	
	<target name="publish.log" if="enable.publishing">

		<property file="${product.build.root}/log.properties"/>
			
		<zip destfile="${build.dir}/build.log.zip">
			<fileset file="${build.root}/builders/build.log"/>
		</zip>
		<delete>
			<fileset file="${build.root}/builders/build.log"/>
		</delete>
		
		<scp.fileset.trusted todir="${upload.to}">
			<fileset file="${build.dir}/build.log.zip"/>
			<fileset file="${build.dir}/buildResults.html"/>
		</scp.fileset.trusted>
			
		<!--scp trust="true" todir="${ssh.username}@${ssh.host}:${scp.basedir}/${upload.to}" keyfile="${ssh.key}" passphrase="${ssh.passphrase}">
			<fileset file="${build.dir}/build.log.zip"/>
		</scp-->
	</target>
</project>