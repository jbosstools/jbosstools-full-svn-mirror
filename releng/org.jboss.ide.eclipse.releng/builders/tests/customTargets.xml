<project name="Build specific targets and properties" default="noDefault" >

	<taskdef name="updateVersions" classname="org.jboss.ide.eclipse.releng.UpdateVersionsTask" classpath="../../bin"/>
	
	<taskdef classpath="../../lib/ant-contrib.jar" resource="net/sf/antcontrib/antlib.xml"/>
	<import file="../common/common.xml"/>
	
<!-- ===================================================================== -->
<!-- Run a given ${target} on all elements being built -->
<!-- Add on <ant> task for each top level element being built. -->
<!-- ===================================================================== -->
<target name="allElements">
	<ant antfile="${genericTargets}" target="${target}" >
		<property name="type" value="feature" />
		<property name="id" value="org.jboss.ide.eclipse.test.feature" />
	</ant>
    <ant antfile="${genericTargets}" target="${target}" >
        <property name="type" value="feature" />
        <property name="id" value="org.hibernate.eclipse.test.feature" />
    </ant>
</target>

<!-- ===================================================================== -->
<!-- Targets to assemble the built elements for particular configurations  -->
<!-- These generally call the generated assemble scripts (named in -->
<!-- ${assembleScriptName}) but may also add pre and post processing -->
<!-- Add one target for each root element and each configuration -->
<!-- ===================================================================== -->

<target name="assemble.org.jboss.ide.eclipse.test.feature">
	<property name="archiveName" value="JBossIDE-Tests-${versionTag}.zip"/>
	<ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
</target>
 
<target name="assemble.org.hibernate.eclipse.test.feature">
    <property name="archiveName" value="HibernateTools-Tests-${versionTag}.zip"/>
    <ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
</target>   

<!-- ===================================================================== -->
<!-- Check out map files from correct repository -->
<!-- Replace values for cvsRoot, package and mapVersionTag as desired. -->
<!-- ===================================================================== -->
<target name="getMapFiles">
	<!-- we need to export the map file w/ the correct CVS tags -->
	<if>
		<or>
			<equals arg1="${buildType}" arg2="R"/>
			<equals arg1="${buildType}" arg2="I"/>
		</or>
		<then>
			<property name="hibernate-tools-cvsTag" value="${hibernate-tools.cvs}"/>
			<property name="core-cvsTag" value="${core.cvs}"/>
		</then>
		<else>
			<property name="hibernate-tools-cvsTag" value="${cvsTag}"/>
			<property name="core-cvsTag" value="${cvsTag}"/>
		</else>
	</if>
	
	<copyMapFile builder="tests" buildDirectory="${buildDirectory}" cvsTag="${cvsTag}">
		<filterset begintoken="%" endtoken="%">
			<filter token="core-cvsTag" value="${core-cvsTag}"/>
			<filter token="hibernate-tools-cvsTag" value="${hibernate-tools-cvsTag}"/>
		</filterset>
	</copyMapFile>
</target>

<!-- ===================================================================== -->
<!-- Steps to do before setup -->
<!-- ===================================================================== -->
<target name="preSetup">
</target>

<!-- ===================================================================== -->
<!-- Steps to do after setup but before starting the build proper -->
<!-- ===================================================================== -->
<target name="postSetup">
</target>

<!-- ===================================================================== -->
<!-- Steps to do before fetching the build elements -->
<!-- ===================================================================== -->
<target name="preFetch">
</target>

<!-- ===================================================================== -->
<!-- Steps to do after fetching the build elements -->
<!-- ===================================================================== -->
<target name="postFetch">
	<condition property="append" else="false">
		<not>
			<equals arg1="${buildType}" arg2="R"/>
		</not>
	</condition>
	<updateVersions type="feature" version="${versionTag}" append="${append}"
		updateAssembleScript="false" recursivePlugins="true" failOnRecursiveError="false"
		pluginRegex="org.jboss.*">
		<fileset dir="${buildDirectory}/features">
			<include name="org.jboss.ide.eclipse.test.feature"/>
		</fileset>
	</updateVersions>
</target>

<!-- ===================================================================== -->
<!-- Steps to do before generating the build scripts. -->
<!-- ===================================================================== -->
<target name="preGenerate">
</target>

<!-- ===================================================================== -->
<!-- Steps to do after generating the build scripts. -->
<!-- ===================================================================== -->
<target name="postGenerate">
</target>


<!-- ===================================================================== -->
<!-- Steps to do before running the build.xmls for the elements being built. -->
<!-- ===================================================================== -->
<target name="preProcess">
</target>

<!-- ===================================================================== -->
<!-- Steps to do after running the build.xmls for the elements being built. -->
<!-- ===================================================================== -->
<target name="postProcess">
</target>


<!-- ===================================================================== -->
<!-- Steps to do before running assemble. -->
<!-- ===================================================================== -->
<target name="preAssemble">
</target>

<!-- ===================================================================== -->
<!-- Steps to do after  running assemble. -->
<!-- ===================================================================== -->
<target name="postAssemble">
</target>

<!-- ===================================================================== -->
<!-- Steps to do after the build is done. -->
<!-- ===================================================================== -->
<target name="postBuild">
</target>

<!-- ===================================================================== -->
<!-- Steps to do to test the build results -->
<!-- ===================================================================== -->
<target name="test">
</target>

<!-- ===================================================================== -->
<!-- Steps to do to publish the build results -->
<!-- ===================================================================== -->
<target name="publish">
</target>

<!-- ===================================================================== -->
<!-- Default target                                                        -->
<!-- ===================================================================== -->
<target name="noDefault">
	<echo message="You must specify a target when invoking this file" />
</target>

</project>

