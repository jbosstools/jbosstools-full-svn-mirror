<project name="Build Wrapper for Hibernate" default="main">
  <!--
     - The purpose of this ant build file is to put a portable
     - convenience wrapper around the pde build of hibernate
     - plugins.  The pde build process consumes a build.xml file
     - that contains the properities of the build.  Edit that
     - file if there are build settings you would like to encode for
     - repeating builds.  Sometimes, editing the build.xml file can
     - be awkward.  For example, it may be necessary to run two builds
     - a day, each with a different buildId and buildType.  Manual edits
     - could be tiresome in that case. Alternatively,
     - those properties could be overridden in the ant command line
     - that runs this wrapper (e.g., -Dbuild=/usr/tmp/foo), and then
     - driven by a schedule script that generates values for properties.

     - Here is a list/meaning of properties that you most likely want
     - to override on command line (default values and better description
     - for these are in the build.xml file)
     -   hibernate - absolute path to directory where hibernate source and
     -       builds reside
     -   fetchTag - cvs tag of the revision to build
     -   buildDirectory - destination directory of output
     -   buildType, buildId, buildLabel - different ways to name
     -       the build output
     -   baseLocation - the location containing all the plugins needed
     -       to build these plugins
     -
     - See the java target below to enable any/all of these.  Feel
     - free to add new ones.
     -->

   <!--
     -  These properties are needed to launch the build, can be overridden
     -  on command line, but are not defaulted in the build.xml file.
     -->

   <property name="eclipse31.home" value="C:/temp/eclipse/eclipse-3.1M6"/>
   <property name="pdescriptdir" value="${eclipse31.home}/plugins/org.eclipse.pde.build_3.1.0/scripts"/>
   <property name="xerces.home" value="C:/work/products/xerces-2_6_2"/>
   <property name="workspace" value="workspace"/>
   <property name="verbose" value="-verbose" />

   <target name="main">

   	<tstamp>
   	    <format property="BUILDID" pattern="yyyyMMddhhmm"/>
  	</tstamp>
   		
     <java classname="org.eclipse.core.launcher.Main" fork="true">

        <classpath path="${eclipse31.home}/startup.jar" />
        <jvmarg value="-Djava.endorsed.dir=${xerces.home}"/>
        <arg line="-application org.eclipse.ant.core.antRunner" />

        <!-- directory containing customTargets.xml and hibernate.map -->
        <arg value="-Dbuilder=."/>
  
        <!-- when failure, look in ${workspace}/.metadata/.log for trace -->
        <arg line="-data ${workspace}"/>

        <!-- use scripts from pde build plugin -->
        <arg line="-f ${pdescriptdir}/build.xml"/>
        <arg value="-DgenericTargets=${pdescriptdir}/genericTargets.xml" />
        <arg value="-Dbasedir=${basedir}"/>

        <!-- arg value="${verbose}" / -->

        <!--
          -  remove xml comments to enable a command line parameter.
          -  And then the command line parameter is required but not checked-for.
          -->

        <!-- arg value="-Dhibernate=${hibernate}" / -->
        <!-- arg value="-DfetchTag=${fetchTag}" / -->
        <!-- arg value="-DbuildDirectory=${buildDirectory}" / -->
        <!-- arg value="-DbuildType=${buildType}" / -->
        <arg value="-DbuildId=${BUILDID}" />
        <arg value="-DbuildLabel=${BUILDID}" />
        <!-- arg value="-DbaseLocation=${baseLocation}" / -->

     </java>
   </target>
</project>
