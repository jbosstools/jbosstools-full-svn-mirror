<project default="build.results">

	<property name="ZIPSUFFIX" value="SNAPSHOT" />

	<condition property="WORKINGDIR" value="/home/hudson/static_build_env/jbds/tools/sources" else="${basedir}/../..">
		<available file="/home/hudson/static_build_env/jbds" type="dir" />
	</condition>

	<mkdir dir="${WORKINGDIR}" />
	<echo level="info">WORKINGDIR = ${WORKINGDIR}</echo>

	<condition property="COMMON_TOOLS" value="/home/hudson/static_build_env/jbds/tools">
		<available file="/home/hudson/static_build_env/jbds" type="dir" />
	</condition>
	<condition property="COMMON_TOOLS" value="${WORKINGDIR}/../tools" else="${java.io.tmpdir}">
		<available file="${WORKINGDIR}/../tools" type="dir" />
	</condition>
	<mkdir dir="${COMMON_TOOLS}" />
	<echo level="info">COMMON_TOOLS = ${COMMON_TOOLS}</echo>

	<target name="init">
		<ant antfile="${build.xml}" target="init" />
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="${COMMON_TOOLS}/ant-contrib.jar" />
			</classpath>
		</taskdef>
	</target>

	<target name="build.results" depends="init">
		<!-- 
			1. resolve variables in download-template.xml to produce download.xml
			2. XSL transform download.xml to produce download.snippet.txt
			3. manually copy the contents of this file into 
				http://www.jboss.org/tools/downloads/stable.html or 
				http://www.jboss.org/tools/downloads/dev.html, as applicable
		-->

		<!-- TODO: resolve variables for ZIPSUFFIX and *-filename, *-filesize, where * = component names -->
		<for param="UPDATEZIP">
			<path>
				<fileset dir="${WORKINGDIR}">
					<include name="*-Update-${ZIPSUFFIX}.zip" />
					<include name="*-Sources-${ZIPSUFFIX}.zip" />
				</fileset>
			</path>
			<sequential>
				<propertyregex property="COMPONENT"
				               input="@{UPDATEZIP}"
				               defaultvalue="@{UPDATEZIP}"
				               regexp=".+/([^/]+\.zip)"
				               replace="\1"
				               casesensitive="false"
				               override="true"
				/>
				<propertyregex property="COMPONENT"
				               input="@{COMPONENT}"
				               defaultvalue="@{COMPONENT}"
				               regexp="(.+)-(Update|Sources)-${ZIPSUFFIX}\.zip)"
				               replace="\1"
				               casesensitive="false"
				               override="true"
				/>
				<echo level="info">UPDATEZIP = @{UPDATEZIP}
COMPONENT = ${COMPONENT}</echo>
				<var name="filesize" unset="true" />
				<get.size file="@{UPDATEZIP}" property="${COMPONENT}-filesize" />
				<propertycopy from="${repoFilename}.features" property="filesize" override="true" silent="true" />
				<echo level="info">filesize =  ${filesize}</echo>
				<var name="filesize" unset="true" />
			</sequential>
		</for>

		<copy todir="${product.build.directory}" overwrite="true">
			<fileset file="download-template.xml" />
			<mapper type="merge" to="download.xml" />
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>
		<xslt in="${product.build.directory}/download.xml"
		      out="${product.build.directory}/download-snippet.txt"
		      style="download.xsl"
		/>
		<delete file="${product.build.directory}/download.xml" />
	</target>

</project>
