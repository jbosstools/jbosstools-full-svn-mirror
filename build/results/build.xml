<project default="buildResults.aggregate">

	<!-- should be set by script or in Hudson -->
	<property name="ZIPSUFFIX" value="SNAPSHOT" />

	<!-- should be set by Hudson -->
	<!-- <property name="JOB_NAME" value="jbosstools-3.2.0.M2.continuous" /> -->

	<!-- if a different template file (eg., a partially expanded one) should be used, feed it in here -->

	<!-- if ${WORKSPACE}/site folder exists, target that folder; else generate here. -->
	<condition property="output.dir" value="${WORKSPACE}/results" else="${basedir}">
		<available file="${WORKSPACE}/results" />
	</condition>

	<condition property="WORKINGDIR" value="${WORKSPACE}/sources" else="${basedir}/../..">
		<available file="${WORKSPACE}/sources" type="dir" />
	</condition>
	<property name="input.dir" value="${WORKINGDIR}" />

	<mkdir dir="${WORKINGDIR}" />

	<condition property="COMMON_TOOLS" value="/home/hudson/static_build_env/jbds/tools">
		<available file="/home/hudson/static_build_env/jbds" type="dir" />
	</condition>
	<condition property="COMMON_TOOLS" value="${WORKINGDIR}/../tools" else="${java.io.tmpdir}">
		<available file="${WORKINGDIR}/../tools" type="dir" />
	</condition>
	<mkdir dir="${COMMON_TOOLS}" />

	<condition property="build.xml" value="/home/hudson/static_build_env/jbds/tools/sources/build/build.xml">
		<available file="/home/hudson/static_build_env/jbds/tools/sources/build/build.xml" type="file" />
	</condition>
	<condition property="build.xml" value="${basedir}/../../build/build.xml">
		<available file="${basedir}/../../build/build.xml" type="file" />
	</condition>
	<condition property="build.xml" value="${basedir}/../../build.xml">
		<available file="${basedir}/../../build.xml" type="file" />
	</condition>
	<condition property="build.xml" value="${basedir}/../../sources/build.xml">
		<available file="${basedir}/../../sources/build.xml" type="file" />
	</condition>
	<condition property="build.xml" value="${basedir}/../build.xml">
		<available file="${basedir}/../build.xml" type="file" />
	</condition>
	<!-- if can't calculate where build/build.xml is located, must pass in path from parent when calling this script -->

	<target name="get.saxon" unless="saxon.jar.exists">
		<!-- or use http://downloads.sourceforge.net/saxon/saxonhe9-3-0-4j.zip ? -->
		<property name="SAXON_MIRROR" value="http://downloads.sourceforge.net/project/saxon/Saxon-HE/9.3/saxonhe9-3-0-4j.zip?r=http%3A%2F%2Fsaxon.sourceforge.net%2F&amp;ts=1297812383&amp;use_mirror=softlayer" />
		<get usetimestamp="true" dest="${COMMON_TOOLS}/saxonhe9-3-0-4j.zip" src="${SAXON_MIRROR}" />
		<mkdir dir="${java.io.tmpdir}/saxonhe9-3-0-4j.zip_" />
		<unzip src="${COMMON_TOOLS}/saxonhe9-3-0-4j.zip" dest="${java.io.tmpdir}/saxonhe9-3-0-4j.zip_" overwrite="true" />
		<copy file="${java.io.tmpdir}/saxonhe9-3-0-4j.zip_/saxon9he.jar" tofile="${COMMON_TOOLS}/saxon.jar" failonerror="true" />
		<delete dir="${java.io.tmpdir}/saxonhe9-3-0-4j.zip_" includeemptydirs="true" quiet="true" />
	</target>

	<target name="init">
		<ant antfile="${build.xml}" target="init" />
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="${COMMON_TOOLS}/ant-contrib.jar" />
			</classpath>
		</taskdef>

		<available file="${COMMON_TOOLS}/saxon.jar" type="file" property="saxon.jar.exists" />
		<antcall target="get.saxon" />

		<macrodef name="get.size">
			<attribute name="file" />
			<attribute name="property" />
			<sequential>
				<var name="size" unset="true" />
				<var name="size-in-mb" unset="true" />
				<if>
					<available file="@{file}" />
					<then>
						<length file="@{file}" property="size" />
						<math result="size-in-mb">
							<op op="/">
								<op op="floor">
									<op op="*">
										<op op="/">
											<num value="${size}" />
											<num value="1048576" />
										</op>
										<num value="100" />
									</op>
								</op>
								<num value="100" />
							</op>
						</math>

						<property name="@{property}" value="${size-in-mb}" />
					</then>
					<else>
						<property name="@{property}" value="-1" />
					</else>
				</if>
			</sequential>
		</macrodef>
	</target>

	<!-- NEW STUFF HERE -->

	<target name="buildResults.aggregate" depends="init" description="generate buildResults.html from build properties">
		<ant target="collect.zips" antfile="../aggregate/site/build.xml">
			<property name="inputRepos" value="1" />
			<property name="inputRepo1" value="http://download.jboss.org/jbosstools/builds/staging/_composite_/3.2_stable_branch" />
		</ant>
		<ant target="collect.metadata" antfile="../aggregate/site/build.xml">
		</ant>
		<antcall target="buildResults" />
	</target>
	<target name="test.buildResults.aggregate" depends="init" description="generate buildResults.html from build properties">
		<property name="isTest" value="true" />
		<ant target="collect.zips" antfile="../aggregate/site/build.xml">
			<property name="inputRepos" value="1" />
			<property name="inputRepo1" value="http://download.jboss.org/jbosstools/builds/staging/_composite_/3.2_stable_branch" />
		</ant>
		<ant target="collect.metadata" antfile="../aggregate/site/build.xml">
		</ant>
		<antcall target="buildResults" />
	</target>

	<target name="test.buildResults.single" depends="init" description="generate buildResults.html from build properties">
		<property name="isTest" value="true" />
		<ant target="collect.zips" antfile="../aggregate/site/build.xml">
			<property name="inputRepos" value="1" />
			<property name="inputRepo1" value="http://download.jboss.org/jbosstools/builds/staging/jbosstools-3.2_stable_branch.component--common/all/repo" />
		</ant>
		<ant target="collect.metadata" antfile="../aggregate/site/build.xml">
		</ant>
		<antcall target="buildResults" />
	</target>

	<target name="buildResults" description="generate buildResults.html from build properties" depends="init">
		<if>
			<available file="zips/build.properties.all.xml" type="file"/>
			<then>
				<delete quiet="true" file="buildResults.out.html" />
				<xslt in="zips/build.properties.all.xml" out="buildResults.out.html" style="buildResults.xsl" force="true">
					<classpath location="${COMMON_TOOLS}/saxon.jar" />
				</xslt>
			</then>
			<else>
				<echo>Could not generate buildResults.out.html from zips/build.properties.all.xml - file does not exist!</echo>
			</else>
		</if>
	</target>

</project>
