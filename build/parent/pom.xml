<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.jboss.tools</groupId>
	<artifactId>parent</artifactId>
	<version>3.4.0.M1-SNAPSHOT</version>
	<name>JBoss Tools Parent</name>
	<packaging>pom</packaging>
	<modules>
		<module>../target-platform</module>
	</modules>

	<properties>
		<!-- to build w/ latest 0.15.0-SNAPSHOT, run `mvn install -DtychoVersion=0.15.0-SNAPSHOT` -->
		<tychoVersion>0.15.0</tychoVersion>
		<tychoExtrasVersion>0.15.0</tychoExtrasVersion>
		<scmBranch>trunk</scmBranch>
		<JBT_VERSION>3.4.0</JBT_VERSION>
		<JBDS_VERSION>6.0.0</JBDS_VERSION>
		<BUILD_ALIAS>M1</BUILD_ALIAS>
		<memoryOptions1>-Xms512m -Xmx1024m -XX:PermSize=256m</memoryOptions1>
		<memoryOptions2>-XX:MaxPermSize=256m</memoryOptions2>
		<systemProperties></systemProperties>
		<platformSystemProperties></platformSystemProperties>
		<maven.antrun.plugin.version>1.3</maven.antrun.plugin.version>
		<swtbot.test.skip>true</swtbot.test.skip>
		<!-- Requirements => JBIDE-11714 -->
		<skipRequirements>${skipTests}</skipRequirements>
		<requirementsDirectory>${project.build.directory}/requirements</requirementsDirectory>

		<!-- target files available for building: multiple sites, 1 unified site, 
			1 local mirrored site -->
		<target.platform.classifier.unified>unified
		</target.platform.classifier.unified>
		<target.platform.classifier.local>local
		</target.platform.classifier.local>

		<!-- 1a. URL of latest JBT target platform site -->
		<jbosstools-target-site>http://download.jboss.org/jbosstools/updates/target-platform_3.4.juno.SR0/latest/</jbosstools-target-site>

		<!-- 1b. or use -Plocal.site -Dlocal.site=file:///${HOME}/trunk/build/target-platform/REPO/ -->
		<!-- TODO: don't forget to update JBDS .updatesite jobs when this value changes! -->
		<!-- TODO: see also 'hudson' profile below for other default value -->
		<local.site>file:///${user.home}/.m2/jbosstools-target-platform_3.4.juno.SR0/</local.site>

		<!-- 2a. URL of latest JBT nightly staging composite site (all the components 
			in once place) -->
		<!-- for trunk use _composite_/trunk; for 3.4_stable_branch, use _composite_/3.4.juno -->
		<jbosstools-nightly-staging-composite>http://download.jboss.org/jbosstools/builds/staging/_composite_/core/trunk/</jbosstools-nightly-staging-composite>
		<!-- this site is not enabled by default as SOA Tooling is a downstream project (sorta). -->
		<jbosstools-nightly-staging-composite-soa-tooling>http://download.jboss.org/jbosstools/builds/staging/_composite_/soa-tooling/trunk/</jbosstools-nightly-staging-composite-soa-tooling>

		<!-- 2b. or use -Plocal.composite -Dlocal.composite=file:///path/to/mirror/of/composite/staging/site/ -->
		<!-- for trunk use _composite_/trunk; for 3.4_stable_branch, use _composite_/3.4.juno -->
		<local.composite>file:///home/hudson/static_build_env/jbds/builds/staging/_composite_/core/trunk/</local.composite>
		<local.composite-soa-tooling>file:///home/hudson/static_build_env/jbds/builds/staging/_composite_/soa-tooling/trunk/</local.composite-soa-tooling>

		<!-- 3a. URL of latest JBT requirements composite mirror -->
		<!-- TODO: don't forget to update this in ../aggregate/*/associate.properties too (5 files)! -->
		<jboss-requirements-composite-mirror>http://download.jboss.org/jbosstools/updates/indigo/SR2/</jboss-requirements-composite-mirror>
		<jboss-requirements-composite-soa-tooling-mirror>http://download.jboss.org/jbosstools/updates/indigo/soa-tooling/SR2/</jboss-requirements-composite-soa-tooling-mirror>

		<!-- 3b., or use -Plocal.requirements -Dlocal.requirements=file:///path/to/mirror/of/composite/requirements/site -->
		<local.requirements>file:///qa/services/http/binaries/RHDS/updates/indigo/</local.requirements>

		<!-- 4. published aggregate update sites go here, for consumption by QE 
			and downstream JBDS builds -->
		<jbosstools-nightly>http://download.jboss.org/jbosstools/updates/nightly/core/trunk/</jbosstools-nightly>
		<jbosstools-nightly-tests>http://download.jboss.org/jbosstools/updates/nightly/coretests/trunk/</jbosstools-nightly-tests>
		<!-- these sites are not enabled by default as SOA Tooling is a downstream project (sorta). -->
		<jbosstools-nightly-soa-tooling>http://download.jboss.org/jbosstools/updates/nightly/soa-tooling/trunk/</jbosstools-nightly-soa-tooling>
		<jbosstools-nightly-soa-tooling-tests>http://download.jboss.org/jbosstools/updates/nightly/soatests/trunk/</jbosstools-nightly-soa-tooling-tests>

		<!-- 5. extra requirements (for 3rd party "Extras" site) -->
		<jboss-requirements-composite-extras-mirror>http://download.jboss.org/jbosstools/updates/indigo/extras/SR1a/</jboss-requirements-composite-extras-mirror>
		
		<!-- Default coverage filter, to be overriden when necessary -->
		<coverage.filter>org.jboss.tools.*</coverage.filter>
		<requirements.root>${basedir}/../../../requirements</requirements.root>
		<requirement.build.root>${requirements.root}/target</requirement.build.root>

		<!-- JBIDE-11700, JBIDE-11865: latest stable build of m2e-apt for use with JBDS product builds -->		
		<m2e-apt>http://download.jboss.org/jbosstools/updates/requirements/m2eclipse/m2e-apt-1.0.0-2012-06-05_16-15-59-H16/</m2e-apt>
		
	</properties>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-packaging-plugin</artifactId>
				<version>${tychoVersion}</version>
				<configuration>
					<format>'v'yyyyMMdd-HHmm'-${BUILD_ALIAS}'</format>
					<archiveSite>true</archiveSite>
					<environments>
						<environment>
							<os>macosx</os>
							<ws>cocoa</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>macosx</os>
							<ws>cocoa</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86_64</arch>
						</environment>
					</environments>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tychoVersion}</version>
				<extensions>true</extensions>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tychoVersion}</version>
				<configuration>
					<resolver>p2</resolver>
					<ignoreTychoRepositories>true</ignoreTychoRepositories>
					<environments>
						<environment>
							<os>macosx</os>
							<ws>cocoa</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86_64</arch>
						</environment>
					</environments>
				</configuration>
			</plugin>
 
			<!-- to skip running tests (compile only) use commandline flag: -Dmaven.test.skip 
				To allow all tests in a pom to pass/fail, use commandline flag: -fae (fail 
				at end) -->
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-surefire-plugin</artifactId>
				<version>${tychoVersion}</version>
				<configuration>
					<!-- timeout in seconds -->
					<surefire.timeout>1800</surefire.timeout>
					<forkedProcessTimeoutInSeconds>1800</forkedProcessTimeoutInSeconds>
					<useUIHarness>true</useUIHarness>
					<useUIThread>true</useUIThread>
					<!-- THE FOLLOWING LINE MUST NOT BE BROKEN BY AUTOFORMATTING -->
					<!-- tycho.testArgLine repeated to keep jacoco configuration for jacoco-maven-plugin -->
					<argLine>${tycho.testArgLine} ${memoryOptions1} ${memoryOptions2} ${platformSystemProperties} ${systemProperties} -Dusage_reporting_enabled=false</argLine>
					<!-- https://docs.sonatype.org/display/TYCHO/How+to+run+SWTBot+tests+with+Tycho -->
					<!-- set useUIThread=true for regular ui tests -->
					<!-- set useUIThread=false for swtbot tests (?) -->

					<!-- TODO: add new profile to permit running against JBDS product/application 
						for JBDS tests, against Eclipse SDK for JBT -->
					<product>org.eclipse.platform.ide</product>
					<application>org.eclipse.ui.ide.workbench</application>
					<dependencies>
						<dependency>
							<type>p2-installable-unit</type>
							<artifactId>org.eclipse.platform.ide</artifactId>
							<version>0.0.0</version>
						</dependency>
						<!-- http://www.jmock.org/maven.html -->
						<dependency>
							<groupId>org.jmock</groupId>
							<artifactId>jmock-legacy</artifactId>
							<version>2.5.1</version>
						</dependency>
						<dependency>
							<groupId>org.jmock</groupId>
							<artifactId>jmock-junit4</artifactId>
							<version>2.5.1</version>
						</dependency>
					</dependencies>
					<includes>
						<include>**/AllTests.class</include>
						<include>**/*AllTests*.class</include>
						<include>**/*AllBotTests*.class</include>
						<include>**/*TestSuite*.class</include>
					</includes>
					<parallel>true</parallel>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-compiler-plugin</artifactId>
				<version>${tychoVersion}</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<!-- not strictly needed but this suppresses warnings when compiling 
						that the default value (1.5) is being overwritten by the value in the MANIFEST.MF. 
						You can use this in your plugins or their aggregator pom.xml files to set 
						this for your plugins -->
					<!-- <source>1.6</source> -->
					<!-- <target>1.6</target> -->
				</configuration>
			</plugin>
			<!-- source for bundles -->
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-source-plugin</artifactId>
				<version>${tychoVersion}</version>
				<executions>
					<execution>
						<id>plugin-source</id>
						<goals>
							<goal>plugin-source</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<encoding>ISO-8859-1</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.5.7.201204190339</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Where to put jacoco coverage report, basically in the target/ folder
								at the top-level for each component -->
							<destFile>../../target/jacoco.exec</destFile>
							<includes>
								<include>${coverage.filter}</include>
							</includes>
							<!-- Merge reports from all executions -->
							<append>true</append>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>
							<exclusion>
								<groupId>ant</groupId>
								<artifactId>ant</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
							<groupId>ant</groupId>
							<artifactId>ant-optional</artifactId>
							<version>1.5.3-1</version>
							<exclusions>
								<exclusion>
									<groupId>ant</groupId>
									<artifactId>ant</artifactId>
								</exclusion>
							</exclusions>
					</dependency>
				</dependencies>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven.antrun.plugin.version}</version>
				<executions>
					<execution>
						<id>download-plugin-requirements</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<!-- JBIDE-11714: remove this execution -->
								<fail message="requirements.properties not supported any more. If you read this, please comment JBIDE-11714"/>
								<!-- taskdef resource="net/sf/antcontrib/antcontrib.properties" />
								<if>
									<and>
										<available file="${requirements.root}" type="dir" />
										<available file="requirements.properties" type="file" />
									</and>
									<then>
										<property file="requirements.properties" />
										<echo>Requirements build</echo>
										<ant dir="${requirements.root}" inheritAll="true">
											<property name="requirements" value="${requirements}" />
											<property name="settings.offline" value="${settings.offline}" />
											<property name="skipDownload" value="${skipDownload}" />
										</ant>
									</then>
									<else>
										<echo>No requrements.properties file</echo>
									</else>
								</if-->
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
        
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. 
                    It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>jacoco-maven-plugin</artifactId>
										<versionRange>[0.5,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
                                        <!-- m2e doesn't know what to do with jacoco, 
                                            let's ignore it or annoying error markers appear
                                            see http://wiki.eclipse.org/M2E_plugin_execution_not_covered   
                                         -->
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<!-- JBIDE-11714 -->
					<groupId>com.googlecode.maven-download-plugin</groupId>
					<artifactId>maven-download-plugin</artifactId>
					<version>0.2-SNAPSHOT</version>
					<configuration>
						<skip>${skipRequirements}</skip>
						<outputDirectory>${requirementsDirectory}</outputDirectory>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<skip>${skipRequirements}</skip>
						<outputDirectory>${requirementsDirectory}</outputDirectory>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>        
	</build>

	<scm>
		<connection>scm:svn:http://anonsvn.jboss.org/repos/jbosstools/${scmBranch}
		</connection>
		<developerConnection>scm:svn:http://anonsvn.jboss.org/repos/jbosstools/${scmBranch}
		</developerConnection>
		<url>http://anonsvn.jboss.org/repos/jbosstools/${scmBranch}
		</url>
	</scm>

	<issueManagement>
		<system>jira</system>
		<url>https://jira.jboss.org/jira/secure/</url>
	</issueManagement>
	<profiles>


		<!-- Latest JBT work-in-progress component builds (CI builds), not yet 
			pushed to the above nightly update site -->
		<!-- disabled by default because it causes local compilation problems -->
		<profile>
			<id>jbosstools-nightly-staging-composite</id>
			<activation>
				<!-- JBIDE-11663 disable automatic enablement when swtbot.test.skip = false 
				<property>
					<name>swtbot.test.skip</name>
					<value>false</value>
				</property>
				-->
			</activation>
			<repositories>
				<repository>
					<id>jbosstools-nightly-staging-composite</id>
					<url>${jbosstools-nightly-staging-composite}</url>
					<layout>p2</layout>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
					<releases>
						<enabled>true</enabled>
					</releases>
				</repository>
			</repositories>
		</profile>
		<profile>
			<id>jbosstools-nightly-staging-composite-soa-tooling</id>
			<activation>
				<!-- JBIDE-11663 disable automatic enablement when swtbot.test.skip = false 
				<property>
					<name>swtbot.test.skip</name>
					<value>false</value>
				</property>
				-->
			</activation>
			<repositories>
				<repository>
					<id>jbosstools-nightly-staging-composite-soa-tooling</id>
					<url>${jbosstools-nightly-staging-composite-soa-tooling}</url>
					<layout>p2</layout>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
					<releases>
						<enabled>true</enabled>
					</releases>
				</repository>
			</repositories>
		</profile>

		<!-- Profiles to resolve deps on other JBT components against latest aggregate site
		Recommanded for local builds, see https://issues.jboss.org/browse/JBIDE-11516 and
		https://community.jboss.org/wiki/HowToBuildJBossToolsWithMaven3#Build_a_component_resolving_to_a_recent_aggregation_build_for_other_JBT_dependencies_Recommanded -->
		<profile>
			<id>jbosstools-staging-aggregate</id>
			<activation>
				<!-- JBIDE-11663 disable automatic enablement when swtbot.test.skip = false 
				<property>
					<name>swtbot.test.skip</name>
					<value>false</value>
				</property>
				-->
			</activation>
			<repositories>
				<repository>
					<id>jbosstools-nightly</id>
					<url>${jbosstools-nightly}</url>
					<layout>p2</layout>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
					<releases>
						<enabled>true</enabled>
					</releases>
				</repository>
				<repository>
					<id>jbosstools-nightly-tests</id>
					<url>${jbosstools-nightly-tests}</url>
					<layout>p2</layout>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
					<releases>
						<enabled>true</enabled>
					</releases>
				</repository>
			</repositories>
		</profile>

		<!-- same contents as jboss-requirements-composite-mirror, but locally 
			available (to improve network lag) -->
		<profile>
			<id>local.requirements</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<repositories>
				<repository>
					<id>local.requirements</id>
					<url>${local.requirements}</url>
					<layout>p2</layout>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
					<releases>
						<enabled>true</enabled>
					</releases>
				</repository>
			</repositories>
		</profile>

		<!-- same contents as jbosstools-nightly-staging-composite, but locally 
			available (to improve network lag) -->
		<profile>
			<id>local.composite</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<repositories>
				<repository>
					<id>local.composite</id>
					<url>${local.composite}</url>
					<layout>p2</layout>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
					<releases>
						<enabled>true</enabled>
					</releases>
				</repository>
			</repositories>
		</profile>

		<!-- Contains all the Eclipse.org deps, mirrored onto download.jboss.org. 
			This is the superset of sites from which the TP is created. Should be disabled 
			closer to GA so we're only using the TP contents exclusively. -->
		<!-- deactivated by default, because target platform should be enough to 
			compile everything -->
		<profile>
			<id>jboss-requirements-composite-mirror</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<repositories>
				<repository>
					<id>jboss-requirements-composite-mirror</id>
					<url>${jboss-requirements-composite-mirror}</url>
					<layout>p2</layout>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
					<releases>
						<enabled>true</enabled>
					</releases>
				</repository>
			</repositories>
		</profile>

		<!-- Contains all the Third Party Extras deps. This is the superset of 
			sites from which the JBDS Extras site is created. -->
		<profile>
			<id>jboss-requirements-composite-extras-mirror</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<repositories>
				<repository>
					<id>jboss-requirements-composite-extras-mirror</id>
					<url>${jboss-requirements-composite-extras-mirror}</url>
					<layout>p2</layout>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
					<releases>
						<enabled>true</enabled>
					</releases>
				</repository>
			</repositories>
		</profile>

		<!-- Target platform file pointing at a single update site from which to 
			resolve. See unified.site if you want to resolve against a site w/o using 
			the unified.target file -->
		<profile>
			<id>unified.target</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>target-platform-configuration</artifactId>
						<version>${tychoVersion}</version>
						<configuration>
							<target>
								<artifact>
									<groupId>org.jboss.tools</groupId>
									<artifactId>org.jboss.tools.target.platform</artifactId>
									<version>${JBT_VERSION}.${BUILD_ALIAS}-SNAPSHOT</version>
									<classifier>${target.platform.classifier.unified}</classifier>
								</artifact>
							</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- To use this profile, must have first created a local.target file, 
			which points to a local repo. You can do this by hand or generate it from 
			multiple.target using: cd ~/trunk/build/target-platform; ant See also the 
			README in target-platform/ folder for additional usage examples. You can 
			also run `ant help`. If you want to build the target-platform/pom.xml AND 
			generate a local repo + local.target file ALL AT THE SAME TIME, you can do: 
			mvn clean install -Pget.local.target -f /path/to/target-platform/pom.xml -->
		<profile>
			<id>local.target</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>target-platform-configuration</artifactId>
						<version>${tychoVersion}</version>
						<configuration>
							<target>
								<artifact>
									<groupId>org.jboss.tools</groupId>
									<artifactId>org.jboss.tools.target.platform</artifactId>
									<version>${JBT_VERSION}.${BUILD_ALIAS}-SNAPSHOT</version>
									<classifier>${target.platform.classifier.local}</classifier>
								</artifact>
							</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- if you have a local repo mirror of the unified.site, you can use this 
			profile with the -Dlocal.site=file:///path/to/repo to resolve dependencies 
			without needing to use a local.site file -->
		<profile>
			<id>local.site</id>
			<activation>
				<property>
						<name>BUILD_NUMBER</name>
				</property>
			</activation>
			<repositories>
				<repository>
					<id>local.site</id>
					<url>${local.site}</url>
					<layout>p2</layout>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
					<releases>
						<enabled>true</enabled>
					</releases>
				</repository>
			</repositories>
		</profile>

		<profile>
			<id>osx</id>
			<activation>
				<property>
					<name>java.vendor.url</name>
					<value>http://www.apple.com/</value>
				</property>
			</activation>
			<properties>
				<!-- THE FOLLOWING LINE MUST NOT BE BROKEN BY AUTOFORMATTING -->
				<platformSystemProperties> -d32 -Dosgi.arch=x86 -XstartOnFirstThread </platformSystemProperties>
			</properties>
		</profile>

		<profile>
			<id>hudson</id>
			<activation>
				<property>
					<name>BUILD_NUMBER</name>
				</property>
			</activation>
			<properties>
				<local.site>file:///home/hudson/static_build_env/jbds/target-platform_3.4.juno.SR0/e420-wtp340.target/</local.site>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-packaging-plugin</artifactId>
						<version>${tychoVersion}</version>
						<configuration>
							<format>'v'yyyyMMdd-HHmm'-H${BUILD_NUMBER}-${BUILD_ALIAS}'</format>
							<archiveSite>true</archiveSite>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>coverage</id>
			<activation>
				<property>
					<name>coverage</name>
				</property>
			</activation>
			<properties>
				<emma.session.out.file>${project.build.directory}/emma/coverage.es</emma.session.out.file>
				<emma.instrument.bundles />
			</properties>
			<build>
				<plugins>
					<!-- plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>build-helper-maven-plugin</artifactId> 
						<executions> <execution> <id>attach-artifacts</id> <phase>package</phase> 
						<goals> <goal>attach-artifact</goal> </goals> <configuration> <artifacts> 
						<artifact> <file>${emma.session.out.file}</file> <type>es</type> </artifact> 
						</artifacts> </configuration> </execution> </executions> </plugin -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-install-plugin</artifactId>
						<version>2.3.1</version>
						<configuration>
							<file></file>
							<groupId></groupId>
							<artifactId></artifactId>
							<version></version>
							<packaging></packaging>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-surefire-plugin</artifactId>
						<version>${tychoVersion}</version>
						<configuration>
							<systemProperties combine.children="append">
								<emma.session.out.file>${emma.session.out.file}</emma.session.out.file>
								<emma.filter>${coverage.filter}</emma.filter>
								<eclemma.instrument.bundles>${emma.instrument.bundles}</eclemma.instrument.bundles>
							</systemProperties>
							<frameworkExtensions>
								<frameworkExtension>
									<groupId>org.eclemma.runtime.equinox</groupId>
									<artifactId>org.eclemma.runtime.equinox</artifactId>
									<version>1.1.0.200908261008</version>
								</frameworkExtension>
							</frameworkExtensions>
							<application>org.eclipse.ui.ide.workbench</application>
							<dependencies>
								<dependency>
									<type>p2-installable-unit</type>
									<artifactId>org.eclipse.platform.ide</artifactId>
									<version>0.0.0</version>
								</dependency>
							</dependencies>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven.antrun.plugin.version}</version>
						<dependencies>
							<dependency>
								<groupId>emma</groupId>
								<artifactId>emma_ant</artifactId>
								<version>2.0.5312</version>
							</dependency>
							<dependency>
								<groupId>emma</groupId>
								<artifactId>emma</artifactId>
								<version>2.0.5312</version>
							</dependency>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>1.0b3</version>
								<exclusions>
									<exclusion>
										<groupId>ant</groupId>
										<artifactId>ant</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>emma-report</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<taskdef resource="emma_ant.properties" />
										<taskdef resource="net/sf/antcontrib/antlib.xml" />
										<if>
											<available file="${project.build.directory}/emma"
												type="dir" />
											<then>
												<echo>Process emma report...</echo>
												<for list="${emma.instrument.bundles}" param="bundle">
													<sequential>
														<property name="@{bundle}-classes"
															location="${project.build.directory}/../../../plugins/@{bundle}" />
														<if>
															<available file="${@{bundle}-classes}" type="dir" />
															<then>
																<echo>Generating coverage metadata for ${@{bundle}-classes}</echo>
																<emma enabled="true">
																	<instr metadatafile="${project.build.directory}/emma/@{bundle}-coverage.em"
																		mode="copy" outdir="${project.build.directory}/instrumented-classes/@{bundle}">
																		<instrpath>
																			<dirset dir="${@{bundle}-classes}">
			        															<include name="target/*classes"/>
																			</dirset>
																		</instrpath>
																	</instr>
																</emma>
															</then>
															<else>
																<echo>Skipping coverage metadata generation for ${@{bundle}-classes}</echo>
															</else>
														</if>
													</sequential>
												</for>
												<emma enabled="true">
													<report>
														<infileset dir="${project.build.directory}/emma"
															includes="*.es,*.em" />
														<txt outfile="${project.build.directory}/emma/coverage.txt" />
														<xml outfile="${project.build.directory}/emma/coverage.xml" />
														<html outfile="${project.build.directory}/emma/coverage.html" />
													</report>
												</emma>
												<if>
													<available file="${project.build.directory}/emma/coverage.txt" type="file" />
													<then>
														<loadfile property="emma.txt" srcFile="${project.build.directory}/emma/coverage.txt" failonerror="false" />
														<echo>${emma.txt}</echo>
													</then>
													<else>
														<echo>No coverage report found </echo>
													</else>
												</if>
											</then>
										</if>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<repositories>
				<!-- Single repo containing contents of unified.target, but without using 
					the target file -->
				<repository>
					<id>jbosstools-target-site</id>
					<url>${jbosstools-target-site}</url>
					<layout>p2</layout>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
					<releases>
						<enabled>true</enabled>
					</releases>
				</repository>
			</repositories>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>jboss-releases</id>
			<name>JBoss Releases Maven Repository</name>
			<url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>

	<!-- Additional m2 repos to resolve things like org.eclipse.tycho:tycho-maven-plugin:0.13.0-SNAPSHOT -->
	<pluginRepositories>
		<pluginRepository>
			<id>sonatype-public-grid</id>
			<name>sonatype-public-grid</name>
			<url>https://repository.sonatype.org/content/groups/sonatype-public-grid</url>
		</pluginRepository>
		<pluginRepository>
			<id>sonatype-public-repository</id>
			<url>https://oss.sonatype.org/content/groups/public</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>repository.sonatype.org-snapshots</id>
			<name>repository.sonatype.org-snapshots</name>
			<url>https://repository.sonatype.org/content/repositories/snapshots</url>
		</pluginRepository>
	</pluginRepositories>

	<!-- To deploy parent to Nexus -->
	<!--  Don't change "id" since it should match credentials entry in $M2_REPO/settings.xml -->
	<distributionManagement>
		<snapshotRepository>
			<id>jboss-snapshots-repository</id>
			<name>JBoss Snapshots Repository</name>
			<url>https://repository.jboss.org/nexus/content/repositories/snapshots/</url>
			<uniqueVersion>false</uniqueVersion>
		</snapshotRepository>
		<repository>
			<id>jboss-staging-repository</id>
			<name>JBoss Staging Repository</name>
			<uniqueVersion>false</uniqueVersion>
			<url>https://repository.jboss.org/nexus/content/groups/staging/</url> 
		</repository>
	</distributionManagement>
</project>
